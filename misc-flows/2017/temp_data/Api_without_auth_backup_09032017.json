[
    {
        "id": "13884b4a.5dde85",
        "type": "tab",
        "label": "Api without Auth"
    },
    {
        "id": "d281277d.6b8258",
        "type": "function",
        "z": "13884b4a.5dde85",
        "name": "setup",
        "func": "msg.db_payload = {_id : msg.payload.user_id} ;\nmsg.task_payload = {query : \"task_name:\" + msg.payload.note } ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 286,
        "y": 65,
        "wires": [
            [
                "3475e160.b245ce"
            ]
        ]
    },
    {
        "id": "282afbf8.2d1f54",
        "type": "cloudant in",
        "z": "13884b4a.5dde85",
        "name": "db_user",
        "cloudant": "",
        "database": "users",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 614,
        "y": 63,
        "wires": [
            [
                "13e503d3.c097ac"
            ]
        ]
    },
    {
        "id": "3475e160.b245ce",
        "type": "change",
        "z": "13884b4a.5dde85",
        "name": "db_payload",
        "rules": [
            {
                "t": "move",
                "p": "db_payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 448,
        "y": 65,
        "wires": [
            [
                "282afbf8.2d1f54"
            ]
        ]
    },
    {
        "id": "775b14bc.40363c",
        "type": "function",
        "z": "13884b4a.5dde85",
        "name": "details",
        "func": "var big_record_tables = {} , details = {};\n\nbig_record_tables.user  = msg.db_user ;\nbig_record_tables.task  = msg.task_obj_by_name[0] ;\n\n//setting up some obj from big_record_tables\nbig_record_tables.task.child_default = big_record_tables.task.child_default_task_id ? get_obj_from_array(big_record_tables.task.child_default_task_id, msg.task_obj) : null;\nbig_record_tables.task.details = {\n    timeout : create_timeout_list_obj(msg.timeout_obj, msg.templates, msg.user_obj, \"timeout\") ,\n    user_calculated: create_timeout_list_obj(msg.timeout_obj, msg.templates, msg.user_obj, \"user_calculated\"),\n    location : get_location_obj(msg.task_obj_by_name[0].location_id) \n} ;\n\n//creating the details obj\ndetails.task_id = msg.task_obj_by_name[0]._id ;\ndetails.child_task_id = msg.task_obj_by_name[0]._id ;\ndetails.user_id = msg.db_user._id ;\ndetails.page_id  = false ;\ndetails.synchronized = false ;\ndetails.processed = true ;\ndetails.status = \"active\";\ndetails.read = false ;\ndetails.display_if_empty = msg.task_obj_by_name[0].display_if_empty;\ndetails.date_created = new Date().toJSON();\ndetails.due_date = big_record_tables.task.details.user_calculated.delivery_due;\ndetails.offline_expiration_seconds = 0 ;\ndetails.priority = 1;\ndetails.user_incoming = msg.db_user ;\ndetails.watson_incoming = msg.watson_output ;\ndetails.template = {\n    details : get_template(msg.task_obj_by_name[0].details_template_id, msg.templates)\n};\n\ndetails.timeout = big_record_tables.task.details.timeout ;\ndetails.user_calculate = big_record_tables.task.details.user_calculated ;\ndetails.location = big_record_tables.task.details.location ;\n\ndetails.default = {\n    parent : null,\n    allchildren: null\n};\n\ndetails.createdAt = Number(new Date().getTime()) ;\n\ndetails.count = {\n  active: true,\n  unread: true,\n  date: new Date().toJSON()\n};\n\nif(msg.task_obj_by_name[0].child_default_name !== null){\n    msg.default_child_task_name = msg.task_obj_by_name[0].child_default_task_name ;\n    msg.payload = details ;\n    return msg;    \n}else{\n    msg.payload = details ;\n    return msg;    \n}\n\n\nfunction create_timeout_list_obj(timeout_obj, templates, users, type){\n    switch(type){\n        case \"timeout\" : {\n            if(check_obj(timeout_obj.timeout_list) > 1){\n                for(var list in timeout_obj.timeout_list){\n                    if(timeout_obj.timeout_list[list] && list !== \"0\"){\n                        timeout_obj.timeout_list[list].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[list].delivery_user_ids, users);\n                        timeout_obj.timeout_list[list].message = timeout_obj.timeout_list[list].message_id ? get_template(timeout_obj.timeout_list[list].message_id, templates) : null;\n                        timeout_obj.timeout_list[list].from = timeout_obj.timeout_list[list].from_id ? get_template(timeout_obj.timeout_list[list].from_id, templates) : null;\n                    }\n                }\n                return timeout_obj ;   \n            }else{\n                return {} ;\n            }\n            break;\n        }\n        \n        case \"user_calculated\" : {\n            for(var key in timeout_obj.timeout_list){\n                if(key == \"0\"){\n                    timeout_obj.timeout_list[key].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[key].delivery_user_ids, users);\n                    timeout_obj.timeout_list[key].template = {\n                        message : timeout_obj.timeout_list[key].message_id ? get_template(timeout_obj.timeout_list[key].message_id, templates) : null ,\n                        from    : timeout_obj.timeout_list[key].from_id ? get_template(timeout_obj.timeout_list[key].from_id, templates) : null\n                    };\n                }\n            }\n            return timeout_obj.timeout_list[\"0\"] ; \n        }\n        \n        default: {\n            return {};\n        }\n    }\n}\n\nfunction get_location_obj(locations){\n    var obj = {};\n    for(var i=0; i< locations.length; i++){\n        if(locations[i]){\n            obj[locations[i]._id] = locations[i] ;\n        }\n    }\n    return obj ;\n}\n\nfunction get_template(id, template){\n    var obj = {} ;\n    for(var i=0; i< template.length; i++){\n        if(id === template[i]._id){\n            obj = template[i] ;\n        }\n    }    \n    return obj ;\n}\n\nfunction get_obj_from_array(id, arr){\n    var obj = {} ;\n    for(var i=0; i< arr.length; i++){\n        if(arr[i]._id === id){\n            obj[arr[i]._id] = arr[i] ;\n        }\n    }\n    return obj ;\n}\n\nfunction check_obj(obj){\n    var count = 0;\n    for(var keys in obj){\n        if(obj[keys]){\n            count++ ;\n        }\n    }\n    return count ;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 398,
        "y": 333,
        "wires": [
            [
                "2bc5f489.7045cc",
                "476ce57e.ae4aec",
                "a8f462aa.a129a",
                "e573432b.bacb3"
            ]
        ]
    },
    {
        "id": "13e503d3.c097ac",
        "type": "change",
        "z": "13884b4a.5dde85",
        "name": "db_user",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "db_user",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 782,
        "y": 64,
        "wires": [
            [
                "5d0ef5e7.a91bbc"
            ]
        ]
    },
    {
        "id": "5d0ef5e7.a91bbc",
        "type": "change",
        "z": "13884b4a.5dde85",
        "name": "task_payload",
        "rules": [
            {
                "t": "move",
                "p": "task_payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 136,
        "wires": [
            [
                "629d9095.2bc8c"
            ]
        ]
    },
    {
        "id": "629d9095.2bc8c",
        "type": "cloudant in",
        "z": "13884b4a.5dde85",
        "name": "by task name",
        "cloudant": "",
        "database": "task_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "getTask",
        "index": "searchTask",
        "x": 351,
        "y": 134,
        "wires": [
            [
                "d0f09622.864718"
            ]
        ]
    },
    {
        "id": "d0f09622.864718",
        "type": "change",
        "z": "13884b4a.5dde85",
        "name": "task",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "task_obj_by_name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 518,
        "y": 132,
        "wires": [
            [
                "67bcb082.6c622"
            ]
        ]
    },
    {
        "id": "67bcb082.6c622",
        "type": "function",
        "z": "13884b4a.5dde85",
        "name": "timeout id",
        "func": "msg.db_req_obj_timeout = {_id : msg.task_obj_by_name[0].timeout_id};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 129,
        "wires": [
            [
                "a6992023.70244"
            ]
        ]
    },
    {
        "id": "a6992023.70244",
        "type": "change",
        "z": "13884b4a.5dde85",
        "name": "timeout",
        "rules": [
            {
                "t": "move",
                "p": "db_req_obj_timeout",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 808,
        "y": 126,
        "wires": [
            [
                "e64805b8.8c8108"
            ]
        ]
    },
    {
        "id": "e64805b8.8c8108",
        "type": "cloudant in",
        "z": "13884b4a.5dde85",
        "name": "db_timeout",
        "cloudant": "",
        "database": "timeout",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 175,
        "y": 200,
        "wires": [
            [
                "3b6cc480.adb1ac"
            ]
        ]
    },
    {
        "id": "3b6cc480.adb1ac",
        "type": "change",
        "z": "13884b4a.5dde85",
        "name": "timeout_obj",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "timeout_obj",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 349,
        "y": 199,
        "wires": [
            [
                "6571a0f8.c3654"
            ]
        ]
    },
    {
        "id": "6571a0f8.c3654",
        "type": "cloudant in",
        "z": "13884b4a.5dde85",
        "name": "templates",
        "cloudant": "",
        "database": "templates",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 502,
        "y": 199,
        "wires": [
            [
                "8776449.806d0b8"
            ]
        ]
    },
    {
        "id": "8776449.806d0b8",
        "type": "change",
        "z": "13884b4a.5dde85",
        "name": "temp obj",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "templates",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 649,
        "y": 197,
        "wires": [
            [
                "3e0141d8.e12ade"
            ]
        ]
    },
    {
        "id": "3e0141d8.e12ade",
        "type": "cloudant in",
        "z": "13884b4a.5dde85",
        "name": "user",
        "cloudant": "",
        "database": "users",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 847,
        "y": 197,
        "wires": [
            [
                "fa7db015.727b2"
            ]
        ]
    },
    {
        "id": "fa7db015.727b2",
        "type": "change",
        "z": "13884b4a.5dde85",
        "name": "user obj",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "user_obj",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 169,
        "y": 264,
        "wires": [
            [
                "ee9bebbc.5071b8"
            ]
        ]
    },
    {
        "id": "ee9bebbc.5071b8",
        "type": "cloudant in",
        "z": "13884b4a.5dde85",
        "name": "task",
        "cloudant": "",
        "database": "task_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 332,
        "y": 266,
        "wires": [
            [
                "7286932.b64e56c"
            ]
        ]
    },
    {
        "id": "7286932.b64e56c",
        "type": "change",
        "z": "13884b4a.5dde85",
        "name": "task_obj",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "all_task_obj",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 484,
        "y": 263,
        "wires": [
            [
                "be17bf1e.fd12c"
            ]
        ]
    },
    {
        "id": "be17bf1e.fd12c",
        "type": "function",
        "z": "13884b4a.5dde85",
        "name": "input",
        "func": "msg.payload  = \"the lean startup\" ;\nmsg.params = {\n    workspace_id : \"42015e53-bdb9-4a23-87b5-f382d5e12dbb\",\n    username     : \"4db58c57-6d89-4382-9d34-c4044b5fce11\",\n    password     : \"eG0ctZRJO42s\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 628,
        "y": 269,
        "wires": [
            [
                "588003e3.8cde1c"
            ]
        ]
    },
    {
        "id": "588003e3.8cde1c",
        "type": "watson-conversation-v1",
        "z": "13884b4a.5dde85",
        "name": "Watson service",
        "workspaceid": "42015e53-bdb9-4a23-87b5-f382d5e12dbb",
        "multiuser": false,
        "context": true,
        "x": 792,
        "y": 266,
        "wires": [
            [
                "e2b0b806.034d38"
            ]
        ]
    },
    {
        "id": "e2b0b806.034d38",
        "type": "change",
        "z": "13884b4a.5dde85",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "watson_output",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 203,
        "y": 329,
        "wires": [
            [
                "775b14bc.40363c"
            ]
        ]
    },
    {
        "id": "58a2a626.cffed8",
        "type": "function",
        "z": "13884b4a.5dde85",
        "name": "create_optional_task",
        "func": "var last_entred_details = get_last_entry(msg.last_details_obj);\n\nmsg.payload = create_optonal_task(last_entred_details, msg.all_task_obj, msg.default_child_task_name);\nreturn msg ;\n\n\nfunction get_last_entry(details){\n    return details[details.length - 1];\n}\n\nfunction create_optonal_task(details, task_obj, child_default_task_name){\n    var default_task = get_task_by_name(task_obj, child_default_task_name);\n        current_task = get_current_task(task_obj, details.task_id) ;\n        task_obj = {} ;\n        \n    if(check_obj(default_task) > 0){\n        task_obj = {\n            task_name:                  child_default_task_name + \"_\" + new Date().getTime(), \n            user_id:                    default_task.user_id || null,\n            header_template_id:         default_task.header_template_id || current_task.header_template_id,\n            details_template_id:        default_task.details_template_id || current_task.details_template_id,\n            footer_template_id:         default_task.footer_template_id || current_task.footer_template_id,\n            timeout_id:                 default_task.timeout_id || current_task.timeout_id,\n            location_id:                default_task.location_id || current_task.location_id,\n            child_default_task_id:      null,\n            child_default_task_name :   null,\n            date_created:               new Date().toJSON(),\n            type:                       default_task.type || current_task.type,\n            status:                     default_task.status || current_task.status,\n            category:                   default_task.category || current_task.category,\n            additional_data_fn:         default_task.additional_data_fn || current_task.additional_data_fn,\n            optional_data:              default_task.optional_data || current_task.optional_data,\n            required_data:              default_task.required_data || current_task.required_data,\n            offline_expiration_time:    default_task.offline_expiration_time || current_task.offline_expiration_time,\n            display_if_empty:           default_task.display_if_empty || current_task.display_if_empty \n        };\n    }else{\n        task_obj = {\n            task_name:                  child_default_task_name + \"_\" + new Date().getTime(), \n            user_id:                    current_task.user_id || null,\n            header_template_id:         current_task.header_template_id || null,\n            details_template_id:        current_task.details_template_id || null,\n            footer_template_id:         current_task.footer_template_id || null,\n            timeout_id:                 current_task.timeout_id || null,\n            location_id:                current_task.location_id || null,\n            child_default_task_id:      null,\n            child_default_task_name:    null,\n            date_created:               new Date().toJSON(),\n            type:                       current_task.type || null,\n            status:                     current_task.status || \"active\",\n            category:                   current_task.category || null,\n            additional_data_fn:         current_task.additional_data_fn || null,\n            optional_data:              current_task.optional_data || {},\n            required_data:              current_task.required_data || {},\n            offline_expiration_time:    current_task.offline_expiration_time || 0,\n            display_if_empty:           current_task.display_if_empty || true \n        };\n    }\n    return task_obj;\n}\n\nfunction get_task_by_name(arr, name){\n    var obj = {} ;\n    for(var i=0; i<arr.length; i++){\n        if(arr[i].task_name === name){\n            obj = arr[i]    ;\n        }\n    }\n    return obj ;\n}\n\nfunction get_current_task(arr, task_id){\n    var obj = {} ;\n    for(var i=0; i<arr.length; i++){\n        if(arr[i]._id === task_id){\n            obj = arr[i]    ;\n        }\n    }\n    return obj ;\n}\n\nfunction check_obj(obj){\n    var count = 0; \n    for(var keys in obj){\n        if(obj[keys]){\n            count++ ;\n        }\n    }\n    return count ;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 376,
        "y": 562,
        "wires": [
            [
                "f954a87d.174628",
                "39e4eae6.384e36"
            ]
        ]
    },
    {
        "id": "f954a87d.174628",
        "type": "debug",
        "z": "13884b4a.5dde85",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 591,
        "y": 560,
        "wires": []
    },
    {
        "id": "a8f462aa.a129a",
        "type": "cloudant out",
        "z": "13884b4a.5dde85",
        "name": "",
        "cloudant": "",
        "database": "details",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 587,
        "y": 314,
        "wires": []
    },
    {
        "id": "182c7ab3.2c9ab5",
        "type": "cloudant in",
        "z": "13884b4a.5dde85",
        "name": "",
        "cloudant": "",
        "database": "details",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "search_details",
        "index": "createdAt",
        "x": 824,
        "y": 461,
        "wires": [
            [
                "b8ec0907.856458"
            ]
        ]
    },
    {
        "id": "e0074cf5.0c565",
        "type": "function",
        "z": "13884b4a.5dde85",
        "name": "get last created details",
        "func": "msg.details = msg.payload ;\nmsg.payload = {\n    query: \"*:*\",\n    sort: \"date_created\",\n  };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 634,
        "y": 463,
        "wires": [
            [
                "182c7ab3.2c9ab5"
            ]
        ]
    },
    {
        "id": "476ce57e.ae4aec",
        "type": "http response",
        "z": "13884b4a.5dde85",
        "name": "Result",
        "x": 585,
        "y": 358,
        "wires": []
    },
    {
        "id": "8e9f5257.3b9e4",
        "type": "http in",
        "z": "13884b4a.5dde85",
        "name": "Detail",
        "url": "/add_detail",
        "method": "post",
        "swaggerDoc": "",
        "x": 137,
        "y": 24,
        "wires": [
            [
                "d281277d.6b8258"
            ]
        ]
    },
    {
        "id": "fea6d8da.fa3578",
        "type": "inject",
        "z": "13884b4a.5dde85",
        "name": "Start",
        "topic": "Start",
        "payload": "{\"user_id\": \"5f490c0ae2ee7321dc891a3e59bd64c6\", \"note\": \"task_w_timeout\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 143,
        "y": 66,
        "wires": [
            [
                "d281277d.6b8258"
            ]
        ]
    },
    {
        "id": "2bc5f489.7045cc",
        "type": "debug",
        "z": "13884b4a.5dde85",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 607,
        "y": 405,
        "wires": []
    },
    {
        "id": "b8ec0907.856458",
        "type": "change",
        "z": "13884b4a.5dde85",
        "name": "last detail",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "last_details_obj",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 178,
        "y": 563,
        "wires": [
            [
                "58a2a626.cffed8"
            ]
        ]
    },
    {
        "id": "39e4eae6.384e36",
        "type": "cloudant out",
        "z": "13884b4a.5dde85",
        "name": "",
        "cloudant": "",
        "database": "task_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 564,
        "y": 614,
        "wires": []
    },
    {
        "id": "e573432b.bacb3",
        "type": "delay",
        "z": "13884b4a.5dde85",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 400,
        "y": 463,
        "wires": [
            [
                "e0074cf5.0c565"
            ]
        ]
    }
]