[
    {
        "id": "19d64182.cdd4de",
        "type": "tab",
        "label": "Generic Get"
    },
    {
        "id": "5ce6fa8f.341204",
        "type": "http in",
        "z": "19d64182.cdd4de",
        "name": "API HANDLER",
        "url": "/master_api_handler",
        "method": "get",
        "swaggerDoc": "",
        "x": 211.765625,
        "y": 281.74999237060547,
        "wires": [
            [
                "659155ee.00678c"
            ]
        ]
    },
    {
        "id": "659155ee.00678c",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "Handler",
        "func": "var req = msg.payload;\nif(isEmpty(req)){\n    msg.api_response = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"req params must be specified.\", data: null};\n}else{\n    msg.api_response = \"API_SUCCESS\";\n    msg.req_params = msg.payload;\n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n    if(typeof obj === \"object\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 386.765625,
        "y": 282.75,
        "wires": [
            [
                "d85ce3d9.c8439"
            ]
        ]
    },
    {
        "id": "d85ce3d9.c8439",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "api_response",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 549.765625,
        "y": 282.75,
        "wires": [
            [
                "657493ec.dc15ac"
            ],
            [
                "7ab1f39.b0caa0c"
            ]
        ]
    },
    {
        "id": "657493ec.dc15ac",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 720.7655944824219,
        "y": 233.74999237060547,
        "wires": []
    },
    {
        "id": "7ab1f39.b0caa0c",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "validate body",
        "func": "var params = msg.req_params;\nnode.warn(params);\nif(isEmpty(params.type)){\n    msg.api_response = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`type` parameter must be set to get record\", data: null};\n}else if(isEmpty(params.content)){\n    msg.api_response = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`content` parameter must be set to get record\", data: null};    \n}else{\n    msg.api_response = \"API_SUCCESS\";\n    var obj = populate_content(params.content) ;\n    if(obj.error){\n      msg.api_response = \"API_ERROR\";\n      msg.payload = {status: 400, error: true, msg: \"Unable to parse `content` param json.\", data: null};\n    }else{\n        msg.payload_type    = params.type ;\n        msg.payload_content = obj.data ;\n    }\n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n    if(typeof obj === \"object\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}\n\nfunction populate_content(obj){\n    console.log(\"obj >>>\", obj);\n    if(typeof obj === \"string\"){\n        try{\n           var response = JSON.parse(obj);\n           return {error: false, data: response , msg: \"Json parse successfully\"};\n        }catch(e){\n            node.warn(e);\n            return {error: true, data: null, msg: JSON.stringify(e) };\n        }\n    }else{\n       return {error: true, msg: \"Param content must be of `string` class.\", data: null} ;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 710.765625,
        "y": 300.75,
        "wires": [
            [
                "516cd8a3.2c7188"
            ]
        ]
    },
    {
        "id": "516cd8a3.2c7188",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "api_response",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 883.765625,
        "y": 300.75,
        "wires": [
            [
                "a0d5da84.f02398"
            ],
            [
                "ba2f65af.6e4b88"
            ]
        ]
    },
    {
        "id": "a0d5da84.f02398",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 1031.765625,
        "y": 256.75,
        "wires": []
    },
    {
        "id": "ba2f65af.6e4b88",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "payload_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "get_page",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update_get_pages",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update_get_user_tasks",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "get_task",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 5,
        "x": 1033.765625,
        "y": 416.74999237060547,
        "wires": [
            [
                "931d3641.cc78b8"
            ],
            [
                "1dd3ea1c.8ec786"
            ],
            [
                "474671ce.062f3"
            ],
            [
                "ef75de0.d20e52"
            ],
            [
                "2e3b2403.b34c6c"
            ]
        ]
    },
    {
        "id": "931d3641.cc78b8",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "Validate params",
        "func": "var params = msg.payload_content ;\nif(isEmpty(params.access_token)){\n    msg.api_status    = \"API_ERROR\";\n    msg.payload       = {status: 400, error: true, msg: \"`access_token` is required to get_page.\", data: null};\n}else if(isEmpty(params.page_id)){\n    msg.api_status    = \"API_ERROR\";\n    msg.payload       = {status: 400, error: true, msg: \"`page_id` is required to get_page.\", data: null};\n}else{\n    msg.api_status    = \"API_SUCCESS\";\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1270.3828125,
        "y": 73.98828125,
        "wires": [
            [
                "ce38b993.406038"
            ]
        ]
    },
    {
        "id": "ce38b993.406038",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "get_page",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1459.37889039889,
        "y": 71.91796875,
        "wires": [
            [
                "a795f11e.e3a25"
            ],
            [
                "f9a15130.bc60a"
            ]
        ]
    },
    {
        "id": "a795f11e.e3a25",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 1622.390625,
        "y": 27.1484375,
        "wires": []
    },
    {
        "id": "f9a15130.bc60a",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "populate page",
        "func": "var params = msg.payload_content ;\n\nmsg.payload = {\n    query: \"table:users AND access_token:\" + params.access_token ,\n    sort : \"_id<string>\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1651.1328125,
        "y": 91,
        "wires": [
            [
                "cacad2c6.c0e4c"
            ]
        ]
    },
    {
        "id": "cacad2c6.c0e4c",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1850.125,
        "y": 90.0625,
        "wires": [
            [
                "fcbf2e9d.f122c"
            ]
        ]
    },
    {
        "id": "fcbf2e9d.f122c",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "security",
        "func": "var user = msg.payload ;\n\nif(isEmpty(user)){\n    msg.userStatus = \"invalid\" ;\n}else{\n    msg.isNewUser = false;\n    var security_level = user[0].security_level;\n    \n    if(parseInt(security_level) === 0){\n        msg.userStatus = \"verify\" ;\n    }else{\n        msg.userStatus = \"valid\" ;\n        msg.userObj = {\n            user_id   : user[0]._id ,\n            firstname : user[0].firstname ,\n            lastname  : user[0].lastname ,\n            email     : user[0].email ,\n            phone     : user[0].phone\n        } ;\n    }\n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2033.1328125,
        "y": 90.48828125,
        "wires": [
            [
                "1dd23ac9.800665"
            ]
        ]
    },
    {
        "id": "1dd23ac9.800665",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "userStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "invalid",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "verify",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "valid",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 3,
        "x": 2198.62890625,
        "y": 87.4296875,
        "wires": [
            [
                "23815642.3d669a"
            ],
            [
                "31239e35.d60112"
            ],
            [
                "84589a1a.2cef78"
            ]
        ]
    },
    {
        "id": "23815642.3d669a",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "page=1",
        "func": "msg.payload = {\n    query: \"table:task_table AND page_id:\" + 1 ,\n    sort: \"_id<string>\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2441.136693902314,
        "y": 29.49609375,
        "wires": [
            [
                "7d6c5e7a.7cb09"
            ]
        ]
    },
    {
        "id": "31239e35.d60112",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "page=11",
        "func": "msg.payload = {\n    query: \"table:task_table AND page_id:\" + 11 ,\n    sort : \"_id<string>\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2439.140625,
        "y": 100.48828125,
        "wires": [
            [
                "7d6c5e7a.7cb09"
            ]
        ]
    },
    {
        "id": "84589a1a.2cef78",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "page",
        "func": "var page_id = parseInt(msg.payload_content.page_id);\nmsg.payload = {\n    query: \"table:task_table AND page_id:\" + page_id ,\n    sort : \"_id<string>\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2432.12890625,
        "y": 179.5,
        "wires": [
            [
                "7d6c5e7a.7cb09"
            ]
        ]
    },
    {
        "id": "7d6c5e7a.7cb09",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2694.8333435058594,
        "y": 97.66666412353516,
        "wires": [
            [
                "f36c8ac9.38ce18"
            ]
        ]
    },
    {
        "id": "f36c8ac9.38ce18",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "populate_record",
        "func": "if(isEmpty(msg.payload)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status : 400, error: true, msg: \"Unable to get the page with the `page_id`\", data: null};\n}else{\n    msg.api_status = \"API_SUCCESS\";\n    msg.task_obj = msg.payload[0];\n    msg.payload = {\n        query : \"table:details AND task_id:\" + msg.task_obj._id ,\n        sort  : \"_id<string>\"\n    };\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1658.8333740234375,
        "y": 241.99999237060547,
        "wires": [
            [
                "7a03e152.5cdc4"
            ]
        ]
    },
    {
        "id": "c80b6939.11c258",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 1982.8333740234375,
        "y": 219.6666488647461,
        "wires": []
    },
    {
        "id": "7a03e152.5cdc4",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1823.1666768391926,
        "y": 243.00000762939453,
        "wires": [
            [
                "c80b6939.11c258"
            ],
            [
                "1aed670.0607b99"
            ]
        ]
    },
    {
        "id": "1aed670.0607b99",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2005.1666259765625,
        "y": 270.99999237060547,
        "wires": [
            [
                "44519a7.1aa2e64"
            ]
        ]
    },
    {
        "id": "44519a7.1aa2e64",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "template_payload",
        "func": "if(isEmpty(msg.payload)){\n    msg.api_status  = \"API_ERROR\";\n    msg.payload     = {status: 400, error: true, msg: \"unable to fetch task_obj using page_id\", data: null};\n}else{\n    msg.api_status  = \"API_SUCCESS\";\n    msg.detail    = msg.payload;\n    msg.payload     = {\n        query   : \"table:template\",\n        sort    : \"_id<string>\" \n    };\n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2187.1668701171875,
        "y": 271.33333587646484,
        "wires": [
            [
                "6b2572d.d79ad8c"
            ]
        ]
    },
    {
        "id": "6b2572d.d79ad8c",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2352.5001220703125,
        "y": 321.99999237060547,
        "wires": [
            [
                "ee36d1de.0acb9"
            ],
            [
                "1ee53bd5.12ae84"
            ]
        ]
    },
    {
        "id": "ee36d1de.0acb9",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 2502.5003662109375,
        "y": 266.33333587646484,
        "wires": []
    },
    {
        "id": "1ee53bd5.12ae84",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2523.5003662109375,
        "y": 328.6666488647461,
        "wires": [
            [
                "923207e7.5ed858"
            ]
        ]
    },
    {
        "id": "71044f78.6770a",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "prepare taskObj",
        "func": "var template_data       = msg.tempteObj ,\n    task_data           = msg.task_obj,\n    templateObj         = {},\n    header_template_id  = task_data.header_template_id,\n    detail_template_id  = task_data.detail_template_id,\n    footer_template_id  = task_data.footer_template_id;\n\n\nfor(var ind=0; ind<template_data.length; ind++){\n    if(header_template_id == template_data[ind]._id){\n        templateObj.header = template_data[ind];\n    }\n    if(detail_template_id == template_data[ind]._id){\n        templateObj.detail = template_data[ind];\n    }\n    if(footer_template_id == template_data[ind]._id){\n        templateObj.footer = template_data[ind];\n    }\n}\n\n\nvar taskObj = {\n    \"task_id\":\t\t    task_data._id,\n    \"task_name\":\t\ttask_data.task_name,\n    \"template\": \t\ttemplateObj,\n    \"from_page_id\":\t\ttask_data.from_page_id,\n    \"child_task_id\":    task_data.child_default_task_id,\n    \"date_created\":     task_data.date_created\n};\n\nmsg.detail_arr  = msg.payload ;\nmsg.taskObj     = taskObj;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1639.5000101725261,
        "y": 413.00000762939453,
        "wires": [
            [
                "e19597e8.b6f6e8"
            ]
        ]
    },
    {
        "id": "e19597e8.b6f6e8",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "prepare detail_obj",
        "func": "var detail_data = msg.detail,\n    detailObj   = [];\n    \n//**********    detailObj     *******//\nvar detailRecord = {\n    \"_id\": \t\"\",\n    \"image\":\t\t\"\",\n    \"to_page_id\": \t\"\",\n    \"user_id\": \t\t\"\",\n    \"task_id\":      \"\",\n    \"page_id\":      \"\",\n    \"from_user_id\": \"\",\n\t\"user_incoming\":{},\n    \"watson_incoming\":{},\n    \"type\":         {},\n    \"date_created\": \"\",\n    \"from_user\":    {},\n    \"count\":{\"active\":0, \"unread\":0}\n};\n\nif(detail_data.length){\n    for(var d=0; d<detail_data.length; d++){\n        detail_data[d]._id = detail_data[d]._id;\n        detail_data[d].to_page_id = detail_data[d].to_page_id;\n        \n        if(check_isDisplay(detail_data[d].display_if_empty)){\n            detailObj[d] = get_obj_data(detailRecord, detail_data[d]);\n        }else{\n            detail_data.splice(d, 0)    ;\n        }\n    }\n    msg.detailObj = removeEmptyArrayElements(detailObj);     \n}else{\n    msg.detailObj = [] ;\n}\n\nmsg.user_task_payload = {query: \"table:user_task\", sort: \"_id<string>\"};\n\nreturn msg;\n\nfunction check_isDisplay(d){\n    \n    if(d === \"1\"){\n        return true;\n    }else if(d === 1){\n        return true;\n    }else if(d === \"true\"){\n        return true;\n    }else if(d === true){\n        return true;\n    }else{\n        return false ;\n    }\n}\n\nfunction removeEmptyArrayElements(arr) { \n   if (!isArray(arr)) {\n      return arr;\n   } else {\n       return arr.filter( function(elem) { \n          return elem !== null ;\n       } ).map(removeEmptyArrayElements);\n   }\n}\n\nfunction isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\nfunction get_obj_data(obj1, obj2){\n\tvar obj = {};\n\tfor (var key in obj1) {\n\t\tif(obj2.hasOwnProperty(key))\n\t\t\tobj[key] = obj2[key];\n\t\telse\n\t\t    obj[key] = obj1[key];\n\t}\n\treturn obj;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1860.1666259765625,
        "y": 411.6666488647461,
        "wires": [
            [
                "4c9fdaa7.6734c4"
            ]
        ]
    },
    {
        "id": "3f8ecaa4.829606",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "response",
        "func": "var page_id         = msg.payload_content.page_id;\nvar userObj         = msg.userObj;\nvar taskObj         = msg.taskObj;\nvar user_task_arr   = msg.payload ;\nvar apiResult       = {} ;\n\ntry{\n    if(page_id == 1 ){\n    \tapiResult.access_token = msg.payload_content.access_token;\n    } \n\n    var apiResult = {\n        \"page_id\":  page_id,\n        \"user\":     userObj,\n        \"task\":     taskObj,\n        \"detail\":   getpage()\n\t};\n    msg.payload = apiResult;\n}catch(e){\n    node.warn(JSON.stringify(e));\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"Exception occured while populating page\", data: null, exception: e};\n}\n\n\nreturn msg;\n\nfunction getpage(page_id){\n    var result = get_page_array(page_id) ,\n        detail = result.detail_array ;\n        //update_user_task_record({user_id: userObj.user_id, task_id: taskObj.task_id, synch : 1, count: result.count}, false);\n        \n    if(detail.length){\n        return detail ;\n    }else{\n        return [] ;\n    }\n}\n\nfunction get_page_array(page_id){\n    var detail_array = msg.detailObj,\n        active = 0, unread = 0;\n    //node.warn(\">>>>>>>>>>\", detail_array);        \n    for(var itr = 0 ; itr < detail_array.length; itr++){\n        var count = {} , current_count_active = 0, current_count_unread = 0;\n        if(detail_array[itr].to_page_id){\n            count = get_sub_child_count(detail_array[itr].to_page_id);\n            \n            if(count){\n                current_count_active = count.active ;\n                current_count_unread = count.unread ;\n                if(!isEmpty(userObj)){\n                    update_user_task_record({user_id: userObj.user_id, task_id: taskObj.task_id, synch : 1, count: count}, false);    \n                } \n            }\n        }else{\n            var user_task_obj = return_user_task_obj(detail_array[itr].user_id, detail_array[itr].task_id, detail_array[itr].page_id);\n            if (check_obj(user_task_obj) > 0){\n                 // do count_if check using user_task fields as do in update_user_task\n                current_count_active = user_task_obj.count.active ;\n                current_count_unread = user_task_obj.count.unread ;\n            }else{ // otherwise use defaults\n                 // do count_if check using detail fields as do in update_user_task\n                current_count_active = detail_array[itr].count.active ;\n                current_count_unread = detail_array[itr].count.unread ;\n            }\n            if(!isEmpty(userObj)) {\n                update_user_task_record({user_id: userObj.user_id, task_id: taskObj.task_id, synch : 1, count: {active: current_count_active, unread: current_count_unread}}, false);\n            }\n        }\n        active = active + current_count_active ;\n        unread = unread + current_count_unread ;\n        \n        detail_array[itr].count.active = active ;\n        detail_array[itr].count.unread = unread ;\n    }\n    \n    \n    return {\n        detail_array :   detail_array,\n        count        : {\n            active   : active ,\n            unread   : unread \n        }\n    };\n}\n\nfunction check_obj(obj){\n    return Object.keys(obj).length ;\n}\n\nfunction return_user_task_obj(user_id, task_id){\n    var obj = {};\n    if(user_task_arr !== null && user_task_arr !== undefined){\n        for(var i=0; i< user_task_arr.length; i++){\n            if(\n                user_task_arr[i].user_id    === user_id &&\n                user_task_arr[i].task_id    === task_id\n            ){\n                    obj = user_task_arr[i];\n            }\n        }\n    }\n    return obj ;\n}\n\nfunction update_user_task_record(obj, update_parent){\n    var user_task_obj = return_user_task_obj(obj.user_id, obj.task_id),\n        create_user_task_flag = true ;\n    \n    if (check_obj(user_task_obj) > 0){\n    \tif (user_task_obj.user_id == obj.user_id){\n    \t    create_user_task_flag = false ;// if one already exists then don’t create again    \n    \t} \n    \t\n    \tuser_task_obj.synchronized          = obj.synch ;\n        user_task_obj.date_updated          = new Date().toJSON();\n        \n        if(!user_task_obj.update_read){\n            if( user_task_obj.count_status.unread  && !user_task_obj.count_if.unread ){\n                user_task_obj.count.unread += 1 ;  \n            }\n        }\n    \n        if(!user_task_obj.update_active){\n            if( user_task_obj.count_status.active && user_task_obj.count_if.active){\n                user_task_obj.count.active += 1 ;  \n            }\n        }\n    \n        if(user_task_obj.parent_id && update_parent) update_user_task_record({user_id: user_task_obj.user_id, task_id: user_task_obj.parent_id, synch:1, count: {active:0, unread:0}}, false );\n        \n        user_task_obj.update_read   = 1 ;\n        user_task_obj.update_active = 1 ;\n        \n        \n    }\n    \n    if ( create_user_task_flag ) {\n\n        msg.updated_user_task = {\n            table           : \"user_task\",\n        \ttask_id \t\t: obj.task_id,\n        \tuser_id\t\t\t: obj.user_id,\n        \tpage_id         : parseInt(page_id),\n        \tupdate_read     : 0,\n        \tupdate_active   : 0, \n        \tsynchronized    : 1,\n            status          : 0, \n        \tdate_updated\t: null,\t\n        \tparent_id\t\t: null,\n        \tcount_status\t: {\n        \t   active       : 1,\n        \t   unread       : 0,\n        \t},\n        \tcount\t\t\t: {\n        \t    active      : 0,\n        \t    unread      : 0,\n        \t},\n        \tcount_if\t\t: {\n        \t    active      : 1,\n        \t    unread      : 0\n        \t},\n        \ttemplates\t\t: {},\n        \ttimeout\t\t\t: {}\n        };\n    }else{\n        msg.updated_user_task = user_task_obj ;\n    }\n    \n}\n\nfunction get_sub_child_count(to_page_id){\n    var count = {active:0, unread: 0}, details = msg.detail_arr;\n    for(var itr = 0; itr < details.length; itr++){\n        if(to_page_id == details[itr].page_id){\n            to_page_id = details[itr].to_page_id ;\n            count.active += details[itr].count.active ;\n            count.unread += details[itr].count.unread ;\n        }\n    }\n    return count;\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2383.8338623046875,
        "y": 407.6666793823242,
        "wires": [
            [
                "44d2d7fa.003488"
            ]
        ]
    },
    {
        "id": "5cb2250f.52b26c",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2211.5003662109375,
        "y": 409.6666488647461,
        "wires": [
            [
                "3f8ecaa4.829606"
            ]
        ]
    },
    {
        "id": "4c9fdaa7.6734c4",
        "type": "change",
        "z": "19d64182.cdd4de",
        "name": "change",
        "rules": [
            {
                "t": "move",
                "p": "user_task_payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2042.5,
        "y": 410.6666793823242,
        "wires": [
            [
                "5cb2250f.52b26c"
            ]
        ]
    },
    {
        "id": "44d2d7fa.003488",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2519.666748046875,
        "y": 405.6666564941406,
        "wires": [
            [
                "4febf507.2ffb4c"
            ],
            [
                "2444f649.16012a",
                "b1f1b512.a78d28",
                "8f56ba74.942768"
            ]
        ]
    },
    {
        "id": "4febf507.2ffb4c",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 2748.666748046875,
        "y": 309.6666564941406,
        "wires": []
    },
    {
        "id": "2444f649.16012a",
        "type": "change",
        "z": "19d64182.cdd4de",
        "name": "change",
        "rules": [
            {
                "t": "move",
                "p": "updated_user_task",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2758.666748046875,
        "y": 359.6666564941406,
        "wires": [
            [
                "4c2fa507.e8c12c",
                "bada04a.6b80bf8"
            ]
        ]
    },
    {
        "id": "4c2fa507.e8c12c",
        "type": "cloudant out",
        "z": "19d64182.cdd4de",
        "name": "Update User Task",
        "cloudant": "5e923e83.d5527",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2939.666748046875,
        "y": 357.6666564941406,
        "wires": []
    },
    {
        "id": "b1f1b512.a78d28",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "API Result",
        "x": 2767.666748046875,
        "y": 408.6666564941406,
        "wires": []
    },
    {
        "id": "8f56ba74.942768",
        "type": "debug",
        "z": "19d64182.cdd4de",
        "name": "get_page_payload",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 2790.666748046875,
        "y": 458.6666564941406,
        "wires": []
    },
    {
        "id": "1dd3ea1c.8ec786",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "validate params",
        "func": "var params = msg.payload_content ;\n\nif(isEmpty(params.access_token)){\n    msg.api_status    = \"API_ERROR\";\n    msg.payload       = {status: 400, error: true, msg: \"`access_token` is required to get_page.\", data: null};\n}else{\n    msg.api_status    = \"API_SUCCESS\";\n    msg.payload       = {\n        query   : \"table:users AND access_token:\" + params.access_token ,\n        sort    : \"_id<string>\"\n    };\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1262.5001220703125,
        "y": 495.3333740234375,
        "wires": [
            [
                "729cf817.e61648"
            ]
        ]
    },
    {
        "id": "729cf817.e61648",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1442.8334350585938,
        "y": 568.0000839233398,
        "wires": [
            [
                "77ac6db1.e253e4"
            ],
            [
                "a14c857e.2d83e8"
            ]
        ]
    },
    {
        "id": "77ac6db1.e253e4",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 1586.8333740234375,
        "y": 516.333366394043,
        "wires": []
    },
    {
        "id": "a14c857e.2d83e8",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1610.1666259765625,
        "y": 617.3333358764648,
        "wires": [
            [
                "a0956b6f.4f2f18"
            ]
        ]
    },
    {
        "id": "a0956b6f.4f2f18",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "validate user",
        "func": "if(isEmpty(msg.payload)){\n    msg.api_status  = \"API_ERROR\";\n    msg.payload     = {status: 400, error: true, msg: \"Unable to fetch user with this `access_token`\", data:null};\n}else{\n    msg.api_status  = \"API_SUCCESS\";\n    msg.user_obj    = msg.payload[0] ;\n    msg.payload     = {\n        selector    : {\n            synchronized : {\n                $eq : 0\n            }\n        },\n        query       : \"table:user_task AND user_id:\" + msg.user_obj._id ,\n        sort        : \"_id<string>\" \n    };\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1798.1666259765625,
        "y": 617.0000762939453,
        "wires": [
            [
                "9994ed7c.1d88c",
                "996085b2.1dd758"
            ]
        ]
    },
    {
        "id": "9994ed7c.1d88c",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1952.5,
        "y": 617.0000152587891,
        "wires": [
            [
                "1bb09ae7.bacba5"
            ],
            [
                "76421d92.4e9404"
            ]
        ]
    },
    {
        "id": "1bb09ae7.bacba5",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 2073.5001220703125,
        "y": 581.3333892822266,
        "wires": []
    },
    {
        "id": "76421d92.4e9404",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2096.1666259765625,
        "y": 649.3333892822266,
        "wires": [
            [
                "566a2e87.88ddd"
            ]
        ]
    },
    {
        "id": "566a2e87.88ddd",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "user_task",
        "func": "var users_task = msg.payload ,\n    req_body   = msg.payload_content ;\n\nvar filtred_user_task = get_filter_user_task(users_task);\nmsg.filtred_user_task_length = filtred_user_task.length;\nmsg.counter = 0 ;\nmsg.page_list = [];\nmsg.filtred_payload = filtred_user_task ;\nmsg.payload = {status: 200, data:null};\nreturn msg;\n\nfunction get_req_user_task(user_task){\n    try{\n        return JSON.parse(user_task);\n    }catch(e){\n        return {} ;\n    }\n}\n\nfunction check_obj(obj){\n    return Object.keys(obj).length ;\n}\n\nfunction get_filter_user_task(user_task){\n    var result = [];\n    if(!isEmpty(user_task)){\n        for(var itr = 0; itr < user_task.length; itr++){\n            if(user_task[itr].synchronized === 0){\n                result.push(user_task[itr]);\n            }   \n        }\n    }\n    return result ;\n}\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2260.8333435058594,
        "y": 649.0000076293945,
        "wires": [
            [
                "d691e444.6ce6e8"
            ]
        ]
    },
    {
        "id": "bada04a.6b80bf8",
        "type": "debug",
        "z": "19d64182.cdd4de",
        "name": "update_task_payload",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 2945.83349609375,
        "y": 304.66669845581055,
        "wires": []
    },
    {
        "id": "996085b2.1dd758",
        "type": "debug",
        "z": "19d64182.cdd4de",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1968,
        "y": 546,
        "wires": []
    },
    {
        "id": "d691e444.6ce6e8",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "filtred_user_task_length",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2439,
        "y": 650,
        "wires": [
            [
                "833ec246.48e22"
            ],
            [
                "80444140.4b696"
            ]
        ]
    },
    {
        "id": "fcf1c16b.dbc57",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "counter++",
        "func": "msg.counter++ ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2668,
        "y": 573,
        "wires": [
            [
                "d691e444.6ce6e8"
            ]
        ]
    },
    {
        "id": "afa3f6c0.52fd48",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "api_res",
        "func": "msg.page_list.push(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2931,
        "y": 655,
        "wires": [
            [
                "fcf1c16b.dbc57"
            ]
        ]
    },
    {
        "id": "80444140.4b696",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "res",
        "func": "if(msg.page_list.length){\n    msg.payload = {\n        status : 200,\n        error  : false ,\n        msg    : \"Record fecthed successfully\" ,\n        data   : msg.page_list \n    };\n    return msg;    \n}else{\n    msg.payload = {\n        status : 204,\n        error  : false ,\n        msg    : \"No record with current request\" ,\n        data   : null\n    };\n    return msg;    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2582.7421875,
        "y": 715.1640625,
        "wires": [
            [
                "be4cae3b.9f8a7"
            ]
        ]
    },
    {
        "id": "be4cae3b.9f8a7",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 2723.2421875,
        "y": 711.9609375,
        "wires": []
    },
    {
        "id": "833ec246.48e22",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "create_url",
        "func": "msg.url = msg.req.headers.host + '/master_api_handler?type=get_page&content={\"access_token\":\"' + msg.payload_content.access_token + '\", \"page_id\":' + msg.filtred_payload[msg.counter].page_id + '}';\nmsg.method  = \"GET\";\nnode.warn(msg.url);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2595.5078125,
        "y": 646.5234375,
        "wires": [
            [
                "4f9f1137.08099"
            ]
        ]
    },
    {
        "id": "4f9f1137.08099",
        "type": "http request",
        "z": "19d64182.cdd4de",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 2767.5078125,
        "y": 650.5234375,
        "wires": [
            [
                "afa3f6c0.52fd48"
            ]
        ]
    },
    {
        "id": "474671ce.062f3",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "payload",
        "func": "node.warn(msg.payload_content);\nmsg.payload = {\n    query : \"table:users AND access_token:\" + msg.payload_content.access_token ,\n    sort  : \"_id<string>\"\n};\n\nnode.warn(msg.payload);\nreturn msg ;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1243.7421875,
        "y": 699.6640625,
        "wires": [
            [
                "1480fe29.5843d2"
            ]
        ]
    },
    {
        "id": "38beca57.bd1d26",
        "type": "debug",
        "z": "19d64182.cdd4de",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 2138.2421875,
        "y": 731.0625,
        "wires": []
    },
    {
        "id": "1480fe29.5843d2",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1412.7421875,
        "y": 698.2734375,
        "wires": [
            [
                "219f03a1.394c6c"
            ]
        ]
    },
    {
        "id": "219f03a1.394c6c",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "validate user",
        "func": "if(isEmpty(msg.payload)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload    = {status: 400, error: true , msg: \"Unable to find user with access_token\", data: null};\n}else{\n    msg.api_status      = \"API_SUCCESS\";\n    msg.filter_obj      = msg.payload_content.filter ;\n    msg.user_task_list  = msg.payload_content.user_task_list ;\n    msg.user            = msg.payload[0];\n}\nreturn msg;\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1598.7578125,
        "y": 698.65625,
        "wires": [
            [
                "adeca021.ed0b"
            ]
        ]
    },
    {
        "id": "adeca021.ed0b",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1762.7578125,
        "y": 749.9765625,
        "wires": [
            [
                "106c3fb8.3df21"
            ],
            [
                "bc0a3533.510b68"
            ]
        ]
    },
    {
        "id": "106c3fb8.3df21",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 1934.2578125,
        "y": 680.4609375,
        "wires": []
    },
    {
        "id": "bc0a3533.510b68",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "payload",
        "func": "var filter          = msg.filter_obj ,\n    user_task_list  = msg.user_task_list ;\n    user            = msg.user ;\n    \n    msg.payload = {\n        selector    : create_selector(filter),\n        query       : create_filtred_query(user._id, filter)\n    };    \n    node.warn(msg.payload);\nreturn msg;\n\nfunction create_selector(filter){\n    var obj = {};\n    if(\"synchronized\" in filter){\n        if(parseInt(filter.synchronized) === 0){\n            obj.synchronized = {\n               \"$ne\" : 1\n            };\n            delete filter.synchronized ;\n        }\n    }\n    \n    if(\"status\" in filter){\n        if(parseInt(filter.status) === 0){\n            obj.status = {\n               \"$ne\" : 1\n            };\n            delete filter.status ;\n        }\n    }\n    return obj ;\n}\n\nfunction create_filtred_query(user_id, filter_obj){\n    var filter_string = \"\";\n    if(obj_length(filter_obj) > 0){\n\n        if(!(\"user_id\" in filter_obj)){\n            filter_string = create_query(filter_obj) + \" user_id:\" + user_id;\n        }\n\n        if((\"user_id\" in filter_obj)){\n            filter_string = create_query(filter_obj);\n        }\n\n    }else{\n        filter_string = \"user_id:\" + user_id  ;\n    }\n    return filter_string;\n}\n\nfunction check_obj_count(obj){\n    var length = Object.keys(obj).length ;\n    \n    if( (\"user_id\" in obj) ){\n        length = length - 1 ;\n    }\n    \n    return length;\n}\n\nfunction create_query(obj){\n    var length = check_obj_count(obj),\n        counter = 0,\n        string = \"\";\n\n    for(var key in obj){\n        if(counter < length){\n            string += key + \":\" + obj[key] + \" AND \";    \n        }else{\n            string += key + \":\" + obj[key] ;\n        }\n        counter++ ;\n    }\n    return string;    \n}\n\nfunction obj_length(obj){\n    return Object.keys(obj).length ;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1945.2421875,
        "y": 765.1640625,
        "wires": [
            [
                "38beca57.bd1d26",
                "45d34605.bc4cb8"
            ]
        ]
    },
    {
        "id": "45d34605.bc4cb8",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2139.242142617704,
        "y": 801.7656131535772,
        "wires": [
            [
                "b2194df9.3a7cd",
                "371e04e4.019fec"
            ]
        ]
    },
    {
        "id": "b2194df9.3a7cd",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "payload",
        "func": "msg.filtred_user_task_list = msg.payload ;\nmsg.payload = {\n    query : \"table:user_task\",\n    sort  : \"_id<string>\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2308.7421525865802,
        "y": 800.1718702614309,
        "wires": [
            [
                "23fd9507.c7c2ea"
            ]
        ]
    },
    {
        "id": "23fd9507.c7c2ea",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2498.7421875,
        "y": 813.2734375,
        "wires": [
            [
                "3744df0c.4d4c3"
            ]
        ]
    },
    {
        "id": "3744df0c.4d4c3",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "populate",
        "func": "\nmsg.updated_content = return_user_task_filtred_arr(msg.user_task_list, msg.payload) ;\nmsg.updated_content_length = msg.updated_content.length;\nmsg.res_user_task = [];\nmsg.counter = 0 ;\nmsg.api_response = {status : 200, error: false, msg: \"Record updated successfully\", data: msg.res_user_task, filtred: msg.filtred_user_task_list};\nreturn msg;\n\n\nfunction return_user_task_filtred_arr(req_user_task_list, user_tasks_list){\n    var selected_arr = [];\n    if(\n        user_tasks_list !== undefined && \n        user_tasks_list !== null &&\n        req_user_task_list !== undefined &&\n        req_user_task_list !== null \n    ){\n        for(var i=0; i< req_user_task_list.length; i++){\n            for(j =0; j<user_tasks_list.length; j++){\n                if(\n                    req_user_task_list[i].user_id == user_tasks_list[j].user_id &&\n                    req_user_task_list[i].task_id == user_tasks_list[j].task_id &&\n                    req_user_task_list[i].page_id == user_tasks_list[j].page_id \n                ){\n                  \n                  \n                    user_tasks_list[j].synchronized = req_user_task_list[i].synchronized ;\n                    user_tasks_list[j].status = req_user_task_list[i].status;\n                    user_tasks_list[j].date_updated = req_user_task_list[i].date_updated;\n                    user_tasks_list[j].count = req_user_task_list[i].count;\n                    selected_arr.push(user_tasks_list[j]);\n                }\n            }\n        }    \n        \n        return selected_arr;\n    }else{\n        return selected_arr ;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2656.7421875,
        "y": 814.671875,
        "wires": [
            [
                "7c79b274.444edc"
            ]
        ]
    },
    {
        "id": "7c79b274.444edc",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "updated_content_length",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2826.5078125,
        "y": 800.0234375,
        "wires": [
            [
                "799d9765.d3b458"
            ],
            [
                "b4f174b6.9e04e8"
            ]
        ]
    },
    {
        "id": "5f5b6b27.a49554",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "counter",
        "func": "msg.counter++ ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2927.5078125,
        "y": 742.0234375,
        "wires": [
            [
                "7c79b274.444edc"
            ]
        ]
    },
    {
        "id": "799d9765.d3b458",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "payload",
        "func": "    var counter = msg.counter ;\n    msg.payload = msg.updated_content[counter];\n    msg.res_user_task.push(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3016.5078125,
        "y": 789.0234375,
        "wires": [
            [
                "4baf3c7c.78ec54",
                "5f5b6b27.a49554"
            ]
        ]
    },
    {
        "id": "b4f174b6.9e04e8",
        "type": "change",
        "z": "19d64182.cdd4de",
        "name": "api_res",
        "rules": [
            {
                "t": "move",
                "p": "api_response",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3007.515625,
        "y": 878.546875,
        "wires": [
            [
                "b55562d8.44d3"
            ]
        ]
    },
    {
        "id": "b55562d8.44d3",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 3188.515625,
        "y": 876.546875,
        "wires": []
    },
    {
        "id": "4baf3c7c.78ec54",
        "type": "cloudant out",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 3213.515625,
        "y": 788.546875,
        "wires": []
    },
    {
        "id": "371e04e4.019fec",
        "type": "debug",
        "z": "19d64182.cdd4de",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 2319.7578125,
        "y": 855.0546875,
        "wires": []
    },
    {
        "id": "ef75de0.d20e52",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "validate_params",
        "func": "var params = msg.payload_content ;\n\nif(isEmpty(params.access_token)){\n    msg.api_status  = \"API_ERROR\";\n    msg.payload     = {status:400, error: true,  msg: \"`access_token` is required\", data: null};\n}else if(isEmpty(params.task_id)){\n    msg.api_status  = \"API_ERROR\";\n    msg.payload     = {status:400, error: true,  msg: \"`task_id` is required\", data: null};\n}else{\n    msg.api_status  = \"API_SUCCESS\";\n    msg.payload      = {\n        query : \"table:task_table AND _id:\"+ params.task_id,\n        sort  : \"_id<string>\"\n    };\n    msg.user_payload = {\n        query : \"table:users AND access_token:\"+ params.access_token,\n        sort  : \"_id<string>\"\n    };\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1261.140625,
        "y": 804.98828125,
        "wires": [
            [
                "81f0cb3.516b438"
            ]
        ]
    },
    {
        "id": "81f0cb3.516b438",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1417.6406105458739,
        "y": 806.1757782883942,
        "wires": [
            [
                "c24953b6.1a077"
            ],
            [
                "d16957ed.4ba5a8"
            ]
        ]
    },
    {
        "id": "c24953b6.1a077",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 1550.6288917958739,
        "y": 772.4062430895866,
        "wires": []
    },
    {
        "id": "ade805d1.80d038",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "validate task",
        "func": "var task_obj = msg.payload ;\n\nif(isEmpty(task_obj)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload    = {status: 400, error: true, msg: \"Unable to find task with `task_id`\", data: null};\n}else{\n    msg.api_status = \"API_SUCCESS\";\n    msg.task_obj   = task_obj[0];\n    msg.payload    = msg.user_payload ;\n}\n\nreturn msg;\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1739.640625,
        "y": 912.24609375,
        "wires": [
            [
                "4ba0f6d9.9aeea8"
            ]
        ]
    },
    {
        "id": "d16957ed.4ba5a8",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1575.1328125,
        "y": 858.0546875,
        "wires": [
            [
                "ade805d1.80d038"
            ]
        ]
    },
    {
        "id": "4ba0f6d9.9aeea8",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1903.3827918060126,
        "y": 910.9218680895866,
        "wires": [
            [
                "7f3d908f.2aec8"
            ],
            [
                "c121601.ca6a2a"
            ]
        ]
    },
    {
        "id": "7f3d908f.2aec8",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 2043.3828125,
        "y": 869.90625,
        "wires": []
    },
    {
        "id": "129fc626.023cca",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "validate user",
        "func": "var user_obj = msg.payload ;\n\nif(isEmpty(user_obj)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload    = {status: 400, error: true, msg: \"Unable to find task with `task_id`\", data: null};\n}else{\n    msg.user_obj   = user_obj[0];\n    if(msg.user_obj._id === msg.task_obj.user_id){\n        msg.api_status = \"API_SUCCESS\";\n        msg.payload = {status: 200, error: false, msg: \"Record fetched successfully\", data: msg.task_obj};\n    }else{\n        msg.api_status = \"API_ERROR\";\n        msg.payload    = {status: 403, error: true, msg: \"You are not authroized to get task.\", data: null};\n    }\n}\n\n\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2236.375,
        "y": 905.4921875,
        "wires": [
            [
                "cd584d31.0eeca"
            ]
        ]
    },
    {
        "id": "cd584d31.0eeca",
        "type": "switch",
        "z": "19d64182.cdd4de",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2404.375,
        "y": 906.4140625,
        "wires": [
            [
                "d35eed94.20aa8"
            ],
            [
                "d35eed94.20aa8"
            ]
        ]
    },
    {
        "id": "d35eed94.20aa8",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 2546.38671875,
        "y": 901.90625,
        "wires": []
    },
    {
        "id": "c121601.ca6a2a",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2063,
        "y": 938,
        "wires": [
            [
                "129fc626.023cca"
            ]
        ]
    },
    {
        "id": "2e3b2403.b34c6c",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "else case",
        "func": "msg.payload = {staus: 400, error: true, msg:\"Un specified table type\", data: null};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1238.8334350585938,
        "y": 893.0000305175781,
        "wires": [
            [
                "88f5fa0c.a83de8"
            ]
        ]
    },
    {
        "id": "88f5fa0c.a83de8",
        "type": "http response",
        "z": "19d64182.cdd4de",
        "name": "",
        "x": 1377.8333435058594,
        "y": 894.6667048136394,
        "wires": []
    },
    {
        "id": "923207e7.5ed858",
        "type": "function",
        "z": "19d64182.cdd4de",
        "name": "detail_arr",
        "func": "msg.tempteObj = msg.payload;\nmsg.payload = {\n    query: \"table:details\",\n    sort: \"_id<string>\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2155.500244140625,
        "y": 343.33333587646484,
        "wires": [
            [
                "a359c1b1.2fa55"
            ]
        ]
    },
    {
        "id": "a359c1b1.2fa55",
        "type": "cloudant in",
        "z": "19d64182.cdd4de",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1890.5,
        "y": 354.99999237060547,
        "wires": [
            [
                "71044f78.6770a"
            ]
        ]
    },
    {
        "id": "5281de41.649f",
        "type": "cloudant",
        "z": "",
        "host": "http://127.0.0.1",
        "name": "timeout-api-cloudantNoSQLDB"
    },
    {
        "id": "5e923e83.d5527",
        "type": "cloudant",
        "z": "",
        "host": "http://127.0.0.1",
        "name": "timeout-api-cloudantNoSQLDB"
    }
]
