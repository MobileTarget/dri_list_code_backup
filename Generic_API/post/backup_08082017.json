[
    {
        "id": "1bc13036.e3b82",
        "type": "tab",
        "label": "Generic Save"
    },
    {
        "id": "7c9bd36a.800dfc",
        "type": "http in",
        "z": "1bc13036.e3b82",
        "name": "API HANDLER",
        "url": "/master_api_handler",
        "method": "post",
        "swaggerDoc": "",
        "x": 94.00000762939453,
        "y": 215.0000171661377,
        "wires": [
            [
                "6ee54ff6.df69e"
            ]
        ]
    },
    {
        "id": "6ee54ff6.df69e",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "Handler",
        "func": "var req = msg.payload;\n\nif(isEmpty(req)){\n    msg.api_response = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"req body must be specified.\", data: null};\n}else{\n    msg.api_response = \"API_SUCCESS\";\n    // if(!(\"api\" in req)){\n    //     msg.api_response = \"API_ERROR\";\n    //     msg.payload = {status: 400, error: true, msg: \"Body must must be wrapped with `api` key.\", data: null};\n    // }else{\n    //     msg.req_body = req.api;\n    // }\n    msg.req_body = populate_content(req.app) ;\n}\nnode.warn(msg);\nreturn msg;\n\nfunction isEmpty(obj){\n    if(typeof obj === \"object\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}\n\nfunction populate_content(obj){\n    return obj.api;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 289.00001525878906,
        "y": 268.0000171661377,
        "wires": [
            [
                "7d44e24.4d6b11c"
            ]
        ]
    },
    {
        "id": "7d44e24.4d6b11c",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "api_response",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 455.0000228881836,
        "y": 289.0000171661377,
        "wires": [
            [
                "25d70d09.b4fa42"
            ],
            [
                "863d36a6.9affc8"
            ]
        ]
    },
    {
        "id": "25d70d09.b4fa42",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 613.0000076293945,
        "y": 266.000018119812,
        "wires": []
    },
    {
        "id": "863d36a6.9affc8",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "validate body",
        "func": "var body = msg.req_body;\n\nif(isEmpty(body.table)){\n    msg.api_response = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`table` parameter must be set to save record\", data: null};\n}else if(isEmpty(body.table_data)){\n    msg.api_response = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`table_data` parameter must be set to save record\", data: null};    \n}else{\n    msg.api_response = \"API_SUCCESS\";\n    msg.payload_table = body.table ;\n    msg.payload_data  = body.table_data ;\n    msg.access_token  = body.access_token ;\n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 632.0000076293945,
        "y": 322.000018119812,
        "wires": [
            [
                "2da8026d.28dc2e"
            ]
        ]
    },
    {
        "id": "2da8026d.28dc2e",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "api_response",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 792.0000152587891,
        "y": 321.000018119812,
        "wires": [
            [
                "a2ccf1f4.33b25"
            ],
            [
                "d6ab12c2.6dc92"
            ]
        ]
    },
    {
        "id": "a2ccf1f4.33b25",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 932.0000228881836,
        "y": 250.00001525878906,
        "wires": []
    },
    {
        "id": "d6ab12c2.6dc92",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "payload_table",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "users",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "template",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "task_table",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "timeout",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "location",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "add_detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "delete_detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update_task",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update_user",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update_short_detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "add_detail_to_task",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "add_assistants",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update_assistant",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "delete_assistant",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 15,
        "x": 756.0000953674316,
        "y": 636.0000381469727,
        "wires": [
            [
                "404d640c.c576dc"
            ],
            [
                "26ec6576.4cdf4a"
            ],
            [
                "bc40e3a9.7b9f1"
            ],
            [
                "d09cc088.14246"
            ],
            [
                "4a80fb90.223604"
            ],
            [
                "5a40e3c0.6a7c7c"
            ],
            [
                "7a1fa12a.ae0fc"
            ],
            [
                "af77daa4.7a3808"
            ],
            [
                "1ea39368.4d2cbd"
            ],
            [
                "910f835e.b1997"
            ],
            [
                "8047b1c2.00b14"
            ],
            [
                "b43c0e6e.e29ac"
            ],
            [
                "f22f6e7b.b09f7"
            ],
            [
                "d5a7251d.86fb18"
            ],
            [
                "9e907e9.bafc48"
            ]
        ]
    },
    {
        "id": "404d640c.c576dc",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "User Table",
        "func": "var body = msg.req_body ;\nmsg.payload = {\n    table               : body.table,\n    long_url            : null,\n    access_token        : access_token(),\n    security_level      : body.security_level || 0,\n    virtual_phone       : body.phone,\n    email               : body.email,\n    converstation_id    : null,\n    firstname           : body.firstname,\n    lastname            : body.firstname,\n    code                : 1234,\n    password            : body.password,\n    image               : body.image || \"https://upload.wikimedia.org/wikipedia/commons/2/26/512pxIcon-sunset_photo_not_found.png\"\n};\nmsg.response = {status: 200, error: false, msg: \"Record created successfully\", data: msg.payload};\nreturn msg;\n\nfunction rand() {\n    return Math.random().toString(36).substr(2); // remove `0.`\n}\n\nfunction time() {\n    //return new Date().getTime().toString(36);\n    return new Date().getTime();\n}\n\nfunction access_token() {\n    return time()+'.'+rand(); // to make it longer\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1294,
        "y": 20,
        "wires": [
            [
                "648036c5.96d398",
                "19f03c04.6b4f04"
            ]
        ]
    },
    {
        "id": "26ec6576.4cdf4a",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "Template Table",
        "func": "var body = msg.req_body ;\nmsg.payload = {\n    _id         : body.table_data._id,\n    table       : body.table,\n    name        : body.table_data.name || \"\",\n    html        : body.table_data.html || \"\",\n    js          : body.table_data.js   || \"\"\n};\nmsg.response = {status: 200, error: false, msg: \"Record created successfully\", data: msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1303,
        "y": 103,
        "wires": [
            [
                "19f03c04.6b4f04",
                "648036c5.96d398"
            ]
        ]
    },
    {
        "id": "bc40e3a9.7b9f1",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "Task Table",
        "func": "var body        = msg.req_body.table_data,\n    table_name  = msg.req_body.table,\n    page_id     = generate_page_id();\n\nmsg.payload = {\n    _id                     : body._id,\n    table                   : table_name, \n    task_name               : body.name || \"\", \n    page_id                 : page_id, \n    from_page_id            : page_id,\n    parent_id               : page_id, \n    user_id                 : body.user_id || \"\",\n    header_template_id      : body.header_template_id || \"\",\n    detail_template_id      : body.details_template_id || \"\",\n    footer_template_id      : body.footer_template_id || \"\",\n    timeout_id              : body.timeout_id || \"\",\n    location_id             : body.location_id || \"\",\n    child_default_task_id   : body.child_default_task_id || \"\",\n    child_default_task_name : body.child_default_task_name || \"\",\n    date_created            : body.date_created || new Date().toJSON(),\n    status                  : body.status || 0,\n    category                : body.category || \"\",\n    additional_data_fn      : body.additional_data_fn || \"\",\n    optional_data           : body.optional_data || {},\n    required_data           : body.required_data || {},\n    offline_expiration_time : body.offline_expiration_time || 0,\n    display_if_empty        : body.display_if_empty || 1 ,\n    type                    : {\n        public              : body.type  || \"public\"\n    },\n    image                   : body.image || \"https://upload.wikimedia.org/wikipedia/commons/2/26/512pxIcon-sunset_photo_not_found.png\",\n    count_status\t: {\n\t   active       : 1,\n\t   unread       : 0,\n\t},\n\tcount\t\t\t: {\n\t    active      : 1,\n\t    unread      : 0,\n\t},\n\tcount_if\t\t: {\n\t    active      : 1,\n\t    unread      : 0\n\t},\n    defaults                : {\n        parent              : null,\n        next_child          : null,\n        all_children        : null,\n        user                : body.user_id\n    }\n    \n};\nmsg.response = {status: 200, error: false, msg: \"Record created successfully\", data: msg.payload};\nreturn msg;\n\nfunction generate_page_id() {\n    return new Date().getTime();\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1295,
        "y": 190,
        "wires": [
            [
                "648036c5.96d398",
                "19f03c04.6b4f04"
            ]
        ]
    },
    {
        "id": "d09cc088.14246",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "Timeout Table",
        "func": "var body        = msg.req_body ,\n    table_name  = msg.req_body.table;\nmsg.payload = {\n    table: table_name,\n    name: msg.timeout_data.name || \"\",\n    timeout_list: create_delivery_obj(body) \n};\nmsg.response = {status: 200, error: false, msg: \"Record created successfully\", data: msg.payload};\nreturn msg;\n\nfunction create_delivery_obj(body){\n    var obj = {};\n    var user_id = body.delivery_user_ids ? body.delivery_user_ids.split(',') : \"\";\n    \n    for(var i=0; i < body.delivery_count; i++){\n        obj[i] = {\n            delivery_count      : i , \n            delivery_status     :   body.delivery_status || 0, \n            delivery_due        :   body.delivery_due || new Date.toJSON(),\n            delivery_user_ids   :   user_id[i] ? user_id[i] : body.delivery_user_ids,\n            delivery_via        :   body.delivery_via || \"\",\n            delivery_task_id    :   body.delivery_task_id || \"\",\n            delivery_task_name  :   body.delivery_task_name || \"\", \n            message_id          :   body.message_id || \"\",\n            from_user_id        :   body.from_user_id || \"\"\n        };\n    }\n    return obj ;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1308,
        "y": 279,
        "wires": [
            [
                "648036c5.96d398",
                "19f03c04.6b4f04"
            ]
        ]
    },
    {
        "id": "4a80fb90.223604",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "Location Table",
        "func": "var body = msg.req_body ;\nmsg.payload = {\n    table         : body.table,\n    location_name : body.name,\n    location_type : body.type,\n    location_data : {\n        lat : body.lat ? Number(body.lat) : 0,\n        lon : body.lon ? Number(body.lon) : 0,\n        dist: body.dist ? Number(body.dist) : 0,\n        web: body.web || \"\"\n    }\n};\nmsg.response = {status: 200, error: false, msg: \"Record created successfully\", data: msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1307,
        "y": 379,
        "wires": [
            [
                "648036c5.96d398",
                "19f03c04.6b4f04"
            ]
        ]
    },
    {
        "id": "5a40e3c0.6a7c7c",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "Create Detail",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1298,
        "y": 545,
        "wires": [
            [
                "8340ddf2.852ea"
            ]
        ]
    },
    {
        "id": "9e907e9.bafc48",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "UnExpacted Case",
        "func": "msg.payload = {status: 400, error: true, msg: \"`table` field value is unexpacted.\", data: null};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1321.0002899169922,
        "y": 1719.0003747940063,
        "wires": [
            [
                "4925e8a7.371308"
            ]
        ]
    },
    {
        "id": "4925e8a7.371308",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 1509.0002899169922,
        "y": 1732.0003747940063,
        "wires": []
    },
    {
        "id": "648036c5.96d398",
        "type": "cloudant out",
        "z": "1bc13036.e3b82",
        "name": "Master Table",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 1541,
        "y": 146.99999523162842,
        "wires": []
    },
    {
        "id": "8d2408fe.0d0618",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 1723,
        "y": 207,
        "wires": []
    },
    {
        "id": "19f03c04.6b4f04",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "API_RESPONSE",
        "rules": [
            {
                "t": "move",
                "p": "response",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1564,
        "y": 206,
        "wires": [
            [
                "8d2408fe.0d0618"
            ]
        ]
    },
    {
        "id": "fc1044e8.8cfd28",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "detail_calculation",
        "func": "var big_record_tables   = {} , \n    detail              = {},\n    templates_arr       = msg.templates_arr ,\n    child_task          = msg.child_task ? msg.child_task[0] : null,\n    timeout             = msg.timeout ? msg.timeout[0] : null ,\n    location            = msg.location ? msg.location[0] : null,\n    user                = msg.user_obj ? msg.user_obj[0] : null ,\n    task                = msg.task_obj ? msg.task_obj[0] : null,\n    user_arr            = msg.user_arr ,\n    form_data           = msg.form_data ,\n    details_arr         = [];\n    msg.doCreate_optional_detail = false ;\n     \n     \n    //sort the detail_arr as by created at\n    details_arr =  msg.details_arr.sort(function(a,b){\n        details_arr = details_arr.sort(function(a,b){\n        \treturn (a.createdAt - b.createdAt);\t\n        });\n    });\n    \nbig_record_tables.user  = user ;\nbig_record_tables.task  = task ;\n\n//setting up some obj from big_record_tables\nbig_record_tables.task.details = {\n    timeout : create_timeout_list_obj(timeout, templates_arr, user_arr, \"timeout\") ,\n    user_calculated: create_timeout_list_obj(timeout, templates_arr, user_arr, \"user_calculated\"),\n    location : get_location_obj(location) \n} ;\n\n\n//create detail obj to save into master_table;\ndetail.table                            = \"details\";\ndetail.task_id                          = task._id ? [task._id] : null ;\ndetail.child_task_id                    = task.child_default_task_id || null;\ndetail.user_id                          = user._id || null;\ndetail.from_user_id                     = set_from_user(form_data.from_user_id) ;\n\ndetail.page_id                          = check_number(form_data.page_id) || generate_page_id();\ndetail.from_page_id                     = check_number(form_data.from_page_id) || generate_page_id();\ndetail.to_page_id                       = task.child_default_task_id ? return_page_id(form_data.page_id) : 0;\n\ndetail.synchronized                     = 0 ;\ndetail.processed                        = 0 ;\ndetail.status                           = 0 ;\ndetail.read                             = 0 ;\ndetail.display_if_empty                 = task.display_if_empty || 1;\ndetail.date_created                     = new Date().toJSON() ;\ndetail.due_date                         = big_record_tables.task.details.user_calculated.delivery_due;\ndetail.offline_expiration_seconds       = task.offline_expiration_time ;\ndetail.priority                         = 1;\ndetail.type                             = {\"private\": \"private\"};\ndetail.image                            = task.image ;\ndetail.from_user                        = {\n                                            firstname   : user.firstname || \"\" ,\n                                            lastname    : user.lastname || \"\" ,\n                                            email       : user.email || \"\",\n                                            phone       : user.phone || \"\"\n                                        };\ndetail.user_incoming                    = {\n                                            note    :   form_data.note ,\n                                            message :   form_data.note\n                                        } ;\n\ndetail.watson_incoming                  = {\n                                            message :   \"Watson response to : \" + form_data.note,\n                                            response : {},\n                                            \n                                        } ;\ndetail.template                         = {\n                                            details : get_template(task.detail_template_id, templates_arr)\n                                        };\n\ndetail.timeout                          = big_record_tables.task.details.timeout ;\ndetail.user_calculate                   = big_record_tables.task.details.user_calculated ;\ndetail.location                         = big_record_tables.task.details.location ;\ndetail.default                          = {\n                                            parent : null,\n                                            allchildren: null\n                                        };\ndetail.count_status\t                    = {\n                                            active : 1,\n                                            unread : 0\n                                        };\ndetail.count\t                        = {\n                                            active : 1,\n                                            unread : 1\n                                        };\ndetail.count_if                         = {\n                                            active : 1,\n                                            unread : 0\n                                        };\ndetail.createdAt                        = Number(new Date().getTime()) ;\n\nmsg.template_arr = templates_arr ;\nmsg.payload      = detail ;\n\nif(check_need_to_create_second_detail(form_data.from_user_id)){\n    var second_detail  = JSON.parse(JSON.stringify(detail));\n        second_detail.from_user_id  = form_data.from_user_id[1];\n        second_detail.user_incoming = {\n            note    :   form_data.to_note ,\n            message :   form_data.to_note\n        } ;\n\n        second_detail.watson_incoming = {\n            message :   \"Watson response to : \" + form_data.to_note,\n            response : {},\n        } ;\n        msg.doCreate_optional_detail = true;\n        msg.option_detail = second_detail;\n}\n\nmsg.api_response = {status:200, error: false, msg: \"Record created successfully\", data: detail};\nreturn msg;\n\nfunction create_timeout_list_obj(timeout_obj, templates, users, type){\n    if(timeout_obj === undefined || timeout_obj === null){\n        return {};\n    }\n    \n    switch(type){\n        case \"timeout\" : {\n            if(check_obj(timeout_obj.timeout_list) > 1){\n                var update_obj = JSON.parse(JSON.stringify(timeout_obj)) ;\n                \n                for(var list in timeout_obj.timeout_list){\n                    if(list !== getAttributeByIndex(timeout_obj.timeout_list, 0)){\n                        update_obj.timeout_list[list].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[list].delivery_user_ids, users);\n                        update_obj.timeout_list[list].message = timeout_obj.timeout_list[list].message_id ? get_template(timeout_obj.timeout_list[list].message_id, templates) : null;\n                        update_obj.timeout_list[list].from = timeout_obj.timeout_list[list].from_id ? get_template(timeout_obj.timeout_list[list].from_id, templates) : null;\n                    }\n                }\n                delete update_obj.timeout_list[getAttributeByIndex(timeout_obj.timeout_list, 0)];\n                return update_obj ;   \n            }else{\n                return {} ;\n            }\n            break;\n        }\n        \n        case \"user_calculated\" : {\n\n            if(timeout_obj.timeout_list){\n                for(var key in timeout_obj.timeout_list){\n                    if(key == getAttributeByIndex(timeout_obj.timeout_list, 0)){\n                        timeout_obj.timeout_list[key].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[key].delivery_user_ids, users);\n                        timeout_obj.timeout_list[key].template = {\n                            message : timeout_obj.timeout_list[key].message_id ? get_template(timeout_obj.timeout_list[key].message_id, templates) : null ,\n                            from    : timeout_obj.timeout_list[key].from_id ? get_template(timeout_obj.timeout_list[key].from_id, templates) : null\n                        };\n                    }\n                }\n\n                return timeout_obj.timeout_list[getAttributeByIndex(timeout_obj.timeout_list, 0)] ; \n            }else{\n                return {} ; \n            }\n            break;\n        }\n        \n        default: {\n            return {};\n        }\n    }\n}\n\nfunction check_obj(obj){\n    if(typeof obj === \"object\"){\n        return Object.keys(obj).length;\n    }else{\n        return 0 ;\n    }\n}\n\nfunction get_location_obj(locations){\n    if(locations === undefined || locations === null){\n        return {};\n    }\n    var obj = {};\n\n    if(locations !== null && locations !== undefined){\n        for(var i=0; i< locations.length; i++){\n            if(locations[i]){\n                obj[locations[i]._id] = locations[i] ;\n            }\n        }\n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction get_template(id, template){\n    if(template === undefined || template === null){\n        return {};\n    }\n    \n    var obj = {} ;\n    if(template !== null){\n        for(var i=0; i< template.length; i++){\n            if(id === template[i]._id){\n                obj = template[i] ;\n            }\n        }    \n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction check_number(n){\n    if(typeof n === \"string\" && n !== \"\"){\n        return parseInt(n);\n    }else{\n        return n ;\n    }\n}\n\nfunction generate_page_id(){\n    return new Date().getTime();\n}\n\nfunction getAttributeByIndex(obj, index){\n  var i = 0;\n  for (var attr in obj){\n    if (index === i){\n      return attr;\n    }\n    i++;\n  }\n  return null;\n}\n\nfunction get_obj_from_array(id, arr){\n    if(arr === null || arr === undefined){\n        return {};\n    }\n\n    if(id instanceof Object){\n        return id ;    \n    }\n\n    var obj = {} ;\n    if(arr !== null && arr.length){\n        for(var i=0; i< arr.length; i++){\n            if(arr[i]._id === id){\n                obj[arr[i]._id] = arr[i] ;\n            }\n        }\n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction calculate_to_page_id(task_obj, details_arr){\n\n    var page_id = false ;\n    if(task_obj !== null && details_arr !== undefined){\n        var task_id = task_obj._id ;\n        if(details_arr.length){\n            for(var i=0; i < details_arr.length; i++){\n                if(details_arr[i].task_id === task_id){\n                  page_id = details_arr[i].to_page_id ;\n                }\n            }\n            if(!page_id){\n              return generate_page_id(6);\n            }else{\n              return page_id;\n            }\n        }else{\n            page_id = task_obj.page_id ;\n        }\n    }else{\n        return generate_page_id(6);\n    }\n}\n\n\nfunction return_page_id(page_id){\n    return generate_page_id() ;\n}\n\nfunction set_from_user(item){\n    if(Object.prototype.toString.call(item) === \"[object Array]\"){\n        // node.warn(\">>>>>>>>>>>>>>>>>>>>>>> set_from_user\");\n        // node.warn(item);\n        return item[0] ;\n    }else{\n        // node.warn(\"set_from_user else case\");\n        return item || null;\n    }\n}\n\nfunction check_need_to_create_second_detail(item){\n    if(Object.prototype.toString.call(item) === \"[object Array]\"){\n        // node.warn(\"check_need_to_create_second_detail >>>>\");\n        // node.warn(item);\n        return true ;\n    }else{\n        // node.warn(\"else case >>>>\");\n        return false ;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2323.03125,
        "y": 404.046875,
        "wires": [
            [
                "27237117.a1f3ce",
                "72b3a1c3.d8c1",
                "3a83b028.174ce",
                "d4893bd6.73baf8"
            ]
        ]
    },
    {
        "id": "da2d3d3.052fac",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "log",
        "func": "node.warn(\"There isn't any Location for task obj\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2964.03125,
        "y": 303.046875,
        "wires": [
            [
                "fc1044e8.8cfd28"
            ]
        ]
    },
    {
        "id": "6825d36e.e902ec",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "location",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "location",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3378.03125,
        "y": 362.046875,
        "wires": [
            [
                "fc1044e8.8cfd28"
            ]
        ]
    },
    {
        "id": "27237117.a1f3ce",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "optional task",
        "property": "child_task_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2521.03125,
        "y": 521.046875,
        "wires": [
            [
                "76034db8.945264"
            ],
            [
                "fb3e5d3b.f550e"
            ]
        ]
    },
    {
        "id": "11862d00.8b1143",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "location",
        "property": "location_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2827.03125,
        "y": 309.046875,
        "wires": [
            [
                "da2d3d3.052fac"
            ],
            [
                "6c40a25e.7fc03c"
            ]
        ]
    },
    {
        "id": "21c61856.76f888",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 3156.03125,
        "y": 360.046875,
        "wires": [
            [
                "6825d36e.e902ec"
            ]
        ]
    },
    {
        "id": "76034db8.945264",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "log",
        "func": "node.warn(\"No need to create optional task\");\nmsg.detail = msg.payload ;\nmsg.isCreateOptionalTask = false ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2697.03125,
        "y": 542.046875,
        "wires": [
            [
                "aa1ef719.92f148"
            ]
        ]
    },
    {
        "id": "fb3e5d3b.f550e",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "optional task",
        "func": "var default_task        = msg.child_task ? msg.child_task[0] : null ,\n    detail              = msg.payload ,\n    user_obj            = msg.user_obj ? msg.user_obj[0]: {} ,\n    optional_task       = {}; \n    \nif(!isEmpty(default_task)){\n    optional_task = {\n        table                   : \"task_table\",\n        task_name               : detail.user_incoming.message, \n        user_id                 : user_obj._id || detail.user_id,\n        page_id                 : detail.to_page_id, \n        from_page_id            : detail.page_id,\n        parent_id               : detail.task_id, \n        header_template_id      : default_task.header_template_id || null,\n        detail_template_id      : default_task.detail_template_id || null,\n        footer_template_id      : default_task.footer_template_id || null,\n        timeout_id              : default_task.timeout_id || null,\n        location_id             : default_task.location_id || null,\n        child_default_task_id   : default_task.child_default_task_id || null,\n        child_default_task_name : default_task.child_default_task_name || null,\n        date_created            : new Date().toJSON(),\n        type                    : default_task.type || \"private\",\n        status                  : default_task.status || 0,\n        category                : default_task.category || null,\n        additional_data_fn      : default_task.additional_data_fn || null,\n        optional_data           : default_task.optional_data || {},\n        required_data           : default_task.required_data || {},\n        offline_expiration_time : default_task.offline_expiration_time || 0,\n        display_if_empty        : default_task.display_if_empty || 1 ,\n        count_status : {\n            active : 1,\n            unread : 0,\n        },\n        count : {\n            active : 1,\n            unread : 0,\n        },\n        count_if : {\n            active : 1,\n            unread : 0,\n        }\n    };\n    msg.isCreateOptionalTask = true ;\n    msg.detail = detail ;\n    msg.payload = optional_task ;\n}else{\n    msg.isCreateOptionalTask = false ;\n    msg.detail = detail ;\n    msg.payload = \"No need to create optional task\";\n}\n\nnode.warn(\"Before going to init loop method\");\nnode.warn(msg);\nreturn msg;\n\nfunction isEmpty(obj){\n    if(obj instanceof Object){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(obj instanceof Array){\n        if(obj.length){\n            return false ;\n        }else {\n            return true ;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2718.03125,
        "y": 584.046875,
        "wires": [
            [
                "aa1ef719.92f148"
            ]
        ]
    },
    {
        "id": "5ad3dfae.2f3a4",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "log",
        "func": "node.warn(\"There isn't any timeout for this task\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2368.03125,
        "y": 300.046875,
        "wires": [
            [
                "11862d00.8b1143"
            ]
        ]
    },
    {
        "id": "5451f377.b3346c",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "timeout",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "timeout",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2735.03125,
        "y": 356.046875,
        "wires": [
            [
                "11862d00.8b1143"
            ]
        ]
    },
    {
        "id": "6c40a25e.7fc03c",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "location",
        "func": "msg.payload = {\n    query: \"table:location AND _id:\" + msg.location_id\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2971.03125,
        "y": 362.046875,
        "wires": [
            [
                "21c61856.76f888"
            ]
        ]
    },
    {
        "id": "aa1ef719.92f148",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "isCreateOptionalTask",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2880.03125,
        "y": 555.046875,
        "wires": [
            [
                "f667d3d1.e4d44",
                "4aaf74bf.3f4cac"
            ],
            [
                "50f53f18.59ae5",
                "f667d3d1.e4d44"
            ]
        ]
    },
    {
        "id": "b103d9f4.3f09f8",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "timeout",
        "property": "timeout_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2224.03125,
        "y": 307.046875,
        "wires": [
            [
                "5ad3dfae.2f3a4"
            ],
            [
                "a2fb7435.fa2558"
            ]
        ]
    },
    {
        "id": "399c7862.457f88",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2562.03125,
        "y": 357.046875,
        "wires": [
            [
                "5451f377.b3346c"
            ]
        ]
    },
    {
        "id": "f667d3d1.e4d44",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "init loop",
        "func": "var detail_obj = msg.detail ;\nif(isEmpty(detail_obj.timeout)){\n    msg.timeoutLength = 0;\n}else{\n    msg.timeoutLength = check_obj(detail_obj.timeout.timeout_list) ;    \n}\nmsg.count = 0;\nreturn msg;\n\n\nfunction check_obj(obj){\n    if(obj !== undefined && obj !== null && obj !== \"\"){\n        return Object.keys(obj).length ;\n    }else{\n        return 0;\n    }\n}\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3272.03125,
        "y": 541.046875,
        "wires": [
            [
                "183d69a0.d38bf6"
            ]
        ]
    },
    {
        "id": "50f53f18.59ae5",
        "type": "debug",
        "z": "1bc13036.e3b82",
        "name": "Optional task log",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 3073.03125,
        "y": 582.046875,
        "wires": []
    },
    {
        "id": "d842b454.c33408",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "log",
        "func": "node.warn(\"there isn't any child default_task\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3272.03125,
        "y": 203.046875,
        "wires": [
            [
                "b103d9f4.3f09f8"
            ]
        ]
    },
    {
        "id": "5fee152d.c1b79c",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "child_task",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "child_task",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3669.03125,
        "y": 258.046875,
        "wires": [
            [
                "b103d9f4.3f09f8"
            ]
        ]
    },
    {
        "id": "a2fb7435.fa2558",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "timeout",
        "func": "msg.payload = {\n    query: \"table:timeout AND _id:\" + msg.timeout_id\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2378.03125,
        "y": 358.046875,
        "wires": [
            [
                "399c7862.457f88"
            ]
        ]
    },
    {
        "id": "183d69a0.d38bf6",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "counter",
        "property": "count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "timeoutLength",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 3470.03125,
        "y": 539.046875,
        "wires": [
            [
                "65c98f5a.2f37d"
            ],
            [
                "36a38d76.bf4c62"
            ]
        ]
    },
    {
        "id": "67fb59fb.34c6a8",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "child_task",
        "property": "child_task_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 3123.03125,
        "y": 227.046875,
        "wires": [
            [
                "d842b454.c33408"
            ],
            [
                "14cd5a97.861e15"
            ]
        ]
    },
    {
        "id": "7bc1c164.76c5e",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "master_table",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 3467.03125,
        "y": 259.046875,
        "wires": [
            [
                "5fee152d.c1b79c"
            ]
        ]
    },
    {
        "id": "7894a745.f32498",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "count++",
        "func": "msg.count++ ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3626.03125,
        "y": 479.046875,
        "wires": [
            [
                "183d69a0.d38bf6"
            ]
        ]
    },
    {
        "id": "65c98f5a.2f37d",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "Timeout Processor",
        "func": "var detail_obj      = msg.payload ,\n    template_arr    = msg.templates,\n    users_arr       = msg.user_arr;\n\nif(compare_dates(detail_obj.due_date)){\n    msg.payload = create_detail_by_timeout_processor();\n}else{\n  msg.apiStatus = {status: 400, msg: \"Due date already passout so cann't be processed details\"};\n}\n\nreturn msg;\n\nfunction compare_dates(due_date){\n    var current_unix_date   = new Date().getTime(),\n        due_unix_date       = new Date(due_date).getTime();\n        \n    if(due_unix_date > current_unix_date){\n        return true ;\n    }else{\n        return false ;\n    }\n}\n\nfunction create_detail_by_timeout_processor(){\n    var detail = JSON.parse(JSON.stringify(detail_obj));  \n    \n    if(detail.timeout !== null){\n        if(check_obj(detail.timeout.timeout_list) > 0){\n            var clone_obj = {\n                table                       : \"details\",\n                task_id                     : detail_obj.task_id ,\n                child_task_id               : detail_obj.child_task_id,\n                user_id                     : detail_obj.user_id,\n                page_id                     : detail_obj.page_id,\n                synchronized                : detail_obj.synchronized,\n                processed                   : detail_obj.processed,\n                status                      : detail_obj.status,\n                read                        : detail_obj.read,\n                display_if_empty            : detail_obj.display_if_empty,\n                date_created                : detail_obj.date_created,\n                due_date                    : detail_obj.due_date,\n                offline_expiration_seconds  : detail_obj.offline_expiration_seconds,\n                priority                    : detail_obj.priority,\n                user_incoming               : detail_obj.user_incoming ,\n                watson_incoming             : detail_obj.watson_incoming,\n                template                    : detail_obj.template,\n                timeout                     : create_timeout_list_obj(detail.timeout, template_arr, users_arr, \"timeout\") ,\n                user_calculated             : create_timeout_list_obj(detail_obj.timeout, template_arr, users_arr, \"user_calculated\"),\n                location                    : detail_obj.location,\n                default                     : detail_obj.default,\n                createdAt                   : detail_obj.createdAt,\n                count                       : detail_obj.count\n            };\n   \n            return clone_obj ;\n        }else{\n            return {} ;\n        }   \n    }else{\n        return {};\n    }\n}\n\nfunction create_timeout_list_obj(timeout_obj, templates, users, type){\n    switch(type){\n        case \"timeout\" : {\n            if(check_obj(timeout_obj.timeout_list) > 1){\n                \n                for(var list in timeout_obj.timeout_list){\n                    if(parseInt(list) !== getAttributeByIndex(timeout_obj.timeout_list, 0)){\n                        timeout_obj.timeout_list[list].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[list].delivery_user_ids, users);\n                        timeout_obj.timeout_list[list].message = timeout_obj.timeout_list[list].message_id ? get_template(timeout_obj.timeout_list[list].message_id, templates) : null;\n                        timeout_obj.timeout_list[list].from = timeout_obj.timeout_list[list].from_id ? get_template(timeout_obj.timeout_list[list].from_id, templates) : null;\n                    }\n                }\n                \n                delete timeout_obj.timeout_list[getAttributeByIndex(timeout_obj.timeout_list, 0)];\n                return timeout_obj ;   \n            }else{\n                return {} ;\n            }\n            break;\n        }\n        \n        case \"user_calculated\" : {\n            if(timeout_obj.timeout_list){\n                for(var key in timeout_obj.timeout_list){\n                    if(parseInt(key) == getAttributeByIndex(timeout_obj.timeout_list, 0)){\n                        timeout_obj.timeout_list[key].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[key].delivery_user_ids, users);\n                        timeout_obj.timeout_list[key].template = {\n                            message : timeout_obj.timeout_list[key].message_id ? get_template(timeout_obj.timeout_list[key].message_id, templates) : null ,\n                            from    : timeout_obj.timeout_list[key].from_id ? get_template(timeout_obj.timeout_list[key].from_id, templates) : null\n                        };\n                    }\n                }\n\n                return timeout_obj.timeout_list[getAttributeByIndex(timeout_obj.timeout_list, 0)] ; \n            }else{\n                return {} ; \n            }\n            break;\n        }\n        \n        default: {\n            return {};\n        }\n    }\n}\n\nfunction check_obj(obj){\n    return Object.keys(obj).length ;\n}\n\nfunction get_template(id, template){\n    var obj = {} ;\n    if(template !== null){\n        for(var i=0; i< template.length; i++){\n            if(id === template[i]._id){\n                obj = template[i] ;\n            }\n        }    \n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction get_obj_from_array(id, arr){\n\n    if(id instanceof Object){\n        return id ;    \n    }\n    \n    var obj = {} ;\n    if(arr !== null && arr.length){\n        for(var i=0; i< arr.length; i++){\n            if(arr[i]._id === id){\n                obj[arr[i]._id] = arr[i] ;\n            }\n        }\n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction getAttributeByIndex(obj, index){\n  var i = 0;\n  for (var attr in obj){\n    if (index === i){\n      return parseInt(attr);\n    }\n    i++;\n  }\n  return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3690.03125,
        "y": 533.046875,
        "wires": [
            [
                "7894a745.f32498",
                "7936c18d.ddbd1"
            ]
        ]
    },
    {
        "id": "36a38d76.bf4c62",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "indicator",
        "func": "msg.payload = \"Timeout processor executes sucessfully\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3664.03125,
        "y": 585.046875,
        "wires": [
            [
                "90317658.28beb8",
                "7cad6d6c.a42054"
            ]
        ]
    },
    {
        "id": "799f9f2c.20ce4",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2953.03125,
        "y": 169.046875,
        "wires": [
            [
                "236b74f3.1c448c"
            ],
            [
                "67fb59fb.34c6a8"
            ]
        ]
    },
    {
        "id": "14cd5a97.861e15",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "child task",
        "func": "msg.payload = {\n    query : \"table:task_table AND _id:\" + msg.child_task_id \n};\nnode.warn(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3280.03125,
        "y": 260.046875,
        "wires": [
            [
                "7bc1c164.76c5e"
            ]
        ]
    },
    {
        "id": "90317658.28beb8",
        "type": "debug",
        "z": "1bc13036.e3b82",
        "name": "Timeout processor",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 3901.03125,
        "y": 565.046875,
        "wires": []
    },
    {
        "id": "2e78e0d1.6e91c",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "validate",
        "func": "var task = msg.task_obj , user = msg.user_obj, detail = msg.details_obj;\n\nif(isEmpty(task)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"Unable to find `task obj` with `task_id`\", data: null};\n}else if(isEmpty(user)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"Unable to find `user obj` with `access_token`\", data: null};\n}else{\n    msg.api_status      = \"API_SUCCESS\";\n    msg.child_task_id   = msg.task_obj[0].child_default_task_id || null;\n    msg.timeout_id      = msg.task_obj[0].timeout_id || null;\n    msg.location_id     = msg.task_obj[0].location_id || null;\n}\nreturn msg;\n\n    \nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2790.03125,
        "y": 178.046875,
        "wires": [
            [
                "799f9f2c.20ce4"
            ]
        ]
    },
    {
        "id": "236b74f3.1c448c",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 3129.03125,
        "y": 173.046875,
        "wires": []
    },
    {
        "id": "de29f586.579be8",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "user arr",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "user_arr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3375.03125,
        "y": 38.046875,
        "wires": [
            [
                "89d29c64.61846"
            ]
        ]
    },
    {
        "id": "1159571.349ffa9",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "master_table",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 3217.03125,
        "y": 32.046875,
        "wires": [
            [
                "de29f586.579be8"
            ]
        ]
    },
    {
        "id": "63dfaf7f.0f8c7",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "payload",
        "func": "msg.payload = {\n    query: \"table:users\",\n    sort: \"_id<string>\"\n};\n\nmsg.detail_payload = {\n    query: \"table:details\",\n    sort : \"_id<string>\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3052.03125,
        "y": 32.046875,
        "wires": [
            [
                "1159571.349ffa9"
            ]
        ]
    },
    {
        "id": "9a874081.8b42e",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "user_obj",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "user_obj",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2894.03125,
        "y": 33.046875,
        "wires": [
            [
                "63dfaf7f.0f8c7"
            ]
        ]
    },
    {
        "id": "fa630876.88dc18",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2720.03125,
        "y": 34.046875,
        "wires": [
            [
                "9a874081.8b42e"
            ]
        ]
    },
    {
        "id": "f6c9dea8.5f06e",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "payload",
        "rules": [
            {
                "t": "move",
                "p": "user_payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2552.0313720703125,
        "y": 35.046875,
        "wires": [
            [
                "fa630876.88dc18"
            ]
        ]
    },
    {
        "id": "27d6a391.8b151c",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "task_obj",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "task_obj",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2390.0313720703125,
        "y": 35.046875,
        "wires": [
            [
                "f6c9dea8.5f06e"
            ]
        ]
    },
    {
        "id": "426e461f.b124a8",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "master_table",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2223.03125,
        "y": 35.046875,
        "wires": [
            [
                "27d6a391.8b151c"
            ]
        ]
    },
    {
        "id": "c2f887a2.0e44c8",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "payload",
        "rules": [
            {
                "t": "move",
                "p": "task_payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1949.03125,
        "y": 413.046875,
        "wires": [
            [
                "426e461f.b124a8"
            ]
        ]
    },
    {
        "id": "8340ddf2.852ea",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "validate",
        "func": "var access_token = msg.req_body.access_token ;\nvar table_data = msg.req_body.table_data ;\n\nif(table_data === null || table_data === undefined){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide valid json object as api request body.\"};\n    return msg;\n}else if(access_token === null || access_token === undefined || access_token === \"\"){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `access_token` in api request body\"};\n    return msg;\n}else if(table_data.note === null || table_data.note === undefined || table_data.note === \"\"){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `note` in api request body\"};\n    return msg;\n}else if(table_data.page_id === null || table_data.page_id === undefined || table_data.page_id === \"\"){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `page_id` in api request body\"};\n    return msg;\n}else if(table_data.from_page_id === null || table_data.from_page_id === undefined ){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `from_page_id` in api request body\"};\n    return msg;\n}else if(table_data.task_id === null || table_data.task_id === undefined ){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `task_id` in api request body\"};\n    return msg;\n}else{\n    msg.flow_status = \"API_SUCCESS\";\n    msg.form_data    = table_data ;\n    msg.task_payload = { \n        query: \"table:task_table AND _id:\" + table_data.task_id \n    };\n    msg.user_payload = {\n        query: \"table:users AND access_token:\" + access_token \n    };\n    msg.page_payload = {\n        query: \"table:details AND page_id:\" + table_data.page_id  \n    };\n    return msg;\n}\n\n\nfunction check_number(n){\n    if(!isNaN(parseInt(n))){\n        return parseInt(n);\n    }else{\n        return n ;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1544.03125,
        "y": 466.046875,
        "wires": [
            [
                "855a021b.8aaaa"
            ]
        ]
    },
    {
        "id": "de8ecfc0.1ca1c",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "template",
        "func": "msg.payload = {\n    query: \"table:template\",\n    sort: \"_id<string>\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2240.5390625,
        "y": 168.5703125,
        "wires": [
            [
                "524c9629.0a16d8"
            ]
        ]
    },
    {
        "id": "524c9629.0a16d8",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "Templates",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2383.5390625,
        "y": 168.5703125,
        "wires": [
            [
                "92ad8642.bc0738"
            ]
        ]
    },
    {
        "id": "92ad8642.bc0738",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "template arr",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "templates_arr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2614.2734375,
        "y": 176.9921875,
        "wires": [
            [
                "2e78e0d1.6e91c",
                "6fb274fe.71719c"
            ]
        ]
    },
    {
        "id": "34f7000c.78479",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "update_create_user_task",
        "func": "var detail_obj          = msg.detail ,\n    ancesstor_arr       = [] ,\n    user_task_arr       = msg.payload ,\n    task_obj            = msg.task_obj[0] ;\n    calculate_user_task = get_user_taskBy_id(detail_obj.user_id, detail_obj.task_id);\n    \nif(check_obj(calculate_user_task) > 0){\n    msg.payload = update_user_task(msg.payload[0], detail_obj.user_id, detail_obj.task_id, 0, 1);\n}else{\n    if(task_obj.parent_id){\n        var user_task = get_user_taskBy_id(detail_obj.user_id, task_obj.parent_id);\n        \n        if(check_obj(user_task) > 0){\n            ancesstor_arr = user_task.ancestors ;   \n            ancesstor_arr.push(task_obj.parent_id);\n        }else{\n            ancesstor_arr.push(task_obj.parent_id);\n        }\n    }\n    \n    msg.payload = {\n        table           : \"user_task\",\n    \ttask_id \t\t: detail_obj.task_id,\n    \tuser_id\t\t\t: detail_obj.user_id,\n    \tpage_id         : parseInt(detail_obj.page_id),\n    \tupdate_read     : 0,\n    \tupdate_active   : 0, \n    \tsynchronized    : 0,\n        status          : 0, \n    \tdate_updated\t: null,\t\n    \tparent_id\t\t: detail_obj.task_id,\n    \tancestors       : ancesstor_arr,\n    \tcount_status\t: {\n    \t   active       : 1,\n    \t   unread       : 1,\n    \t},\n    \tcount\t\t\t: {\n    \t    active      : 1,\n    \t    unread      : 1,\n    \t},\n    \tcount_if\t\t: {\n    \t    active      : 1,\n    \t    unread      : 1\n    \t},\n    \ttemplates\t\t: {},\n    \ttimeout\t\t\t: {},\n    \tcreatedAt       : new Date().getTime()\n    };\n}\nreturn msg;\n\nfunction update_user_task(user_task, user_id, task_id, status, synchronized){\n\n    user_task.synchronized          = synchronized  ;\n    user_task.date_updated          = new Date().toJSON();\n    user_task.templates             = detail_obj.template ;\n    user_task.timeout               = detail_obj.timeout ;\n    user_task.count_status.unread   = detail_obj.read ;\n    user_task.page_id               = parseInt(detail_obj.to_page_id) ;\n    user_task.status                = detail_obj.status || status;\n\n    if(!user_task.update_read){\n        if( ( user_task.count_status.unread === 1 || user_task.count_status.unread === \"1\") && !user_task.count_if.unread ){\n            user_task.count.unread += 1 ;  \n        }\n    }\n\n    if(!user_task.update_active){\n        if( user_task.count_status.active && user_task.count_if.active){\n            user_task.count.active += 1 ;  \n        }\n    }\n    \n    //if(user_task.parent_id) update_user_task(user_task, user_id, user_task.parent_id, 0, 1);\n    \n    user_task.update_read   = 1 ;\n    user_task.update_active = 1 ;\n    \n    return user_task;\n}\n\nfunction get_user_taskBy_id(user_id, task_id){\n    var obj = {};\n    if(user_task_arr !== null && user_task_arr !== undefined){\n        for(var i=0; i< user_task_arr.length; i++){\n            if(\n                user_task_arr[i].user_id        === user_id &&\n                user_task_arr[i].parent_id      === task_id \n            ){\n                    obj = user_task_arr[i];\n            }\n        }\n    }\n    return obj ;\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}\n\n\nfunction check_obj(obj){\n    return Object.keys(obj).length;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 4253.03125,
        "y": 621.046875,
        "wires": [
            [
                "b85632f.f6942d",
                "b3871104.b6593"
            ]
        ]
    },
    {
        "id": "7cad6d6c.a42054",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "payload",
        "func": "var task_id = msg.detail.task_id ,\n    user_id = msg.detail.user_id ;\n    \nmsg.payload = {\n    query: \"table:user_task AND user_id:\" + user_id ,\n    sort : \"_id<string>\"\n};\n\nnode.warn(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3873.03125,
        "y": 624.046875,
        "wires": [
            [
                "f49286a3.60bd48"
            ]
        ]
    },
    {
        "id": "f49286a3.60bd48",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "master_table",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 4039.03125,
        "y": 623.046875,
        "wires": [
            [
                "34f7000c.78479"
            ]
        ]
    },
    {
        "id": "855a021b.8aaaa",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "flow_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1744,
        "y": 385,
        "wires": [
            [
                "ebd20539.3bd978"
            ],
            [
                "c2f887a2.0e44c8"
            ]
        ]
    },
    {
        "id": "ebd20539.3bd978",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 1942,
        "y": 355,
        "wires": []
    },
    {
        "id": "b85632f.f6942d",
        "type": "cloudant out",
        "z": "1bc13036.e3b82",
        "name": "User Task",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 4467,
        "y": 552,
        "wires": []
    },
    {
        "id": "7936c18d.ddbd1",
        "type": "cloudant out",
        "z": "1bc13036.e3b82",
        "name": "Details",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 3911,
        "y": 515,
        "wires": []
    },
    {
        "id": "4aaf74bf.3f4cac",
        "type": "cloudant out",
        "z": "1bc13036.e3b82",
        "name": "Optional Task",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 3051,
        "y": 522,
        "wires": []
    },
    {
        "id": "72b3a1c3.d8c1",
        "type": "cloudant out",
        "z": "1bc13036.e3b82",
        "name": "Details",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2503,
        "y": 438,
        "wires": []
    },
    {
        "id": "3a83b028.174ce",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "API_RESPONSE",
        "rules": [
            {
                "t": "move",
                "p": "api_response",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2541,
        "y": 478,
        "wires": [
            [
                "d099693.f745198"
            ]
        ]
    },
    {
        "id": "d099693.f745198",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2697,
        "y": 499,
        "wires": []
    },
    {
        "id": "96c3c68.c7d7338",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2300.0157470703125,
        "y": 761.0000610351562,
        "wires": []
    },
    {
        "id": "af77daa4.7a3808",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "update_task",
        "func": "var access_token = msg.access_token ;\n    \n    if(isEmpty(access_token)){\n        msg.api_status = \"API_ERROR\";\n        msg.payload = {status: 400, error: true, msg: \"`access_token` is missing.\", data: null};\n    }else{\n        msg.api_status = \"API_SUCCESS\";\n        msg.payload = {\n            query : \"table:users AND access_token:\" + access_token ,\n            sort  : \"_id<string>\"\n        };\n    }\n    \nreturn msg;\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1298.015625,
        "y": 749,
        "wires": [
            [
                "71cf9c70.c94964"
            ]
        ]
    },
    {
        "id": "e46a487a.d682b8",
        "type": "cloudant out",
        "z": "1bc13036.e3b82",
        "name": "Update record",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2178.0157470703125,
        "y": 716.0001831054688,
        "wires": []
    },
    {
        "id": "3ed49608.46eeba",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "api result",
        "rules": [
            {
                "t": "move",
                "p": "api_result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2158.0157470703125,
        "y": 763.0000610351562,
        "wires": [
            [
                "96c3c68.c7d7338"
            ]
        ]
    },
    {
        "id": "1ea39368.4d2cbd",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "update_user",
        "func": "var req_body        = msg.payload_data ,\n    access_token    = msg.access_token ;\n\nif(isEmpty(access_token)){\n    msg.statusCode = 400 ;\n    msg.api_status = \"API_ERROR\" ;\n    msg.payload = {status: 400, error: true, msg: \"`access_token` is missing\", data: []};\n    return msg;\n    \n}else{\n    msg.api_status = \"API_SUCESS\" ;\n    msg.payload = {\n        query : \"table:\"+ req_body.table +\"AND access_token:\"+ access_token +\" AND _id:\" + req_body.user_id ,\n        sort  : \"_id<string>\"\n    };\n    msg.req_body = req_body;\n    return msg;\n}\n\n\nfunction isEmpty(obj){\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1295.265625,
        "y": 866.25,
        "wires": [
            [
                "1c62297c.51d5f7"
            ]
        ]
    },
    {
        "id": "1c62297c.51d5f7",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "split",
        "property": "API_STATUS",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1445.2656860351562,
        "y": 891.25,
        "wires": [
            [
                "d5520305.66f6a"
            ],
            [
                "580ba2f4.08d5ec"
            ]
        ]
    },
    {
        "id": "910f835e.b1997",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "update_short_detail",
        "func": "var body            = msg.payload_data ,\n    access_token    = msg.access_token ;\n    \nif(isEmpty(access_token)){\n    msg.statusCode = 400 ;\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`access_token` is required to update detail\", data: body};\n}else if(isEmpty(body.detail_id)){\n    msg.statusCode = 400 ;\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`detail_id` is required to update detail\", data: body};\n}else if(isEmpty(body.page_id)){\n    msg.statusCode = 400 ;\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`page_id` is required to update task detail\", data: body};\n}else{\n    msg.api_status = \"API_SUCCESS\";\n    msg.payload_content = {\n        access_token : access_token,\n        content: body\n    };\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1314.140625,
        "y": 1006.5,
        "wires": [
            [
                "3f0f1c5b.139264"
            ]
        ]
    },
    {
        "id": "580ba2f4.08d5ec",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "User",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1598.7656860351562,
        "y": 894.25,
        "wires": [
            [
                "7098655a.6d389c"
            ]
        ]
    },
    {
        "id": "7098655a.6d389c",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "payload",
        "func": "var req_body = msg.req_body;\n    user_obj = msg.payload[0] ;\n\nif(isEmpty(user_obj)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"Unable to find user with `access_token` and `user_id`.\", data: req_body};    \n}else{\n    var payload ={\n      _id               : user_obj._id,\n      _rev              : user_obj._rev,\n      table             : user_obj.table,\n      long_url          : user_obj.long_url,\n      access_token      : user_obj.access_token ,\n      security_level    : user_obj.security_level,\n      phone             : Number(req_body.phone) || user_obj.phone ,\n      virtual_phone     : user_obj.virtual_phone,\n      email             : req_body.email || user_obj.email,\n      converstation_id  : user_obj.converstation_id || \"\",\n      firstname         : req_body.firstname || user_obj.firstname,\n      lastname          : req_body.lastname || user_obj.lastname,\n      code              : user_obj.code,\n      password          : user_obj.password,\n      image             : user_obj.image,\n      type              : user_obj.type,\n      device_id         : user_obj.device_id,\n      push_accepted     : user_obj.push_accepted\n    };\n    \n    msg.api_status = \"API_SUCCESS\";\n    msg.payload = payload ;\n    msg.api_result = {status: 200, error: false, msg: \"Record udpated successfully\", data: msg.payload};    \n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1732.7656860351562,
        "y": 893.25,
        "wires": [
            [
                "ab068161.d3be6"
            ]
        ]
    },
    {
        "id": "db602985.e84178",
        "type": "cloudant out",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2059.7659301757812,
        "y": 864.25,
        "wires": []
    },
    {
        "id": "464e533f.20e15c",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "api result",
        "rules": [
            {
                "t": "move",
                "p": "api_result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2051.7658589680987,
        "y": 907.2500025431315,
        "wires": [
            [
                "92ee4dcb.6a568"
            ]
        ]
    },
    {
        "id": "92ee4dcb.6a568",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2231.765981038411,
        "y": 906.2500025431315,
        "wires": []
    },
    {
        "id": "d5520305.66f6a",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 1597.6289672851562,
        "y": 850.41015625,
        "wires": []
    },
    {
        "id": "89d29c64.61846",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "detail_payload",
        "rules": [
            {
                "t": "move",
                "p": "detail_payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2599.500244140625,
        "y": 93.00000762939453,
        "wires": [
            [
                "aecccef5.585b"
            ]
        ]
    },
    {
        "id": "69fa7a59.7b4134",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "detail_arr",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "details_arr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2993.833251953125,
        "y": 96.66666412353516,
        "wires": [
            [
                "de8ecfc0.1ca1c"
            ]
        ]
    },
    {
        "id": "6fb274fe.71719c",
        "type": "debug",
        "z": "1bc13036.e3b82",
        "name": "Comes her to log every thing",
        "active": true,
        "console": "true",
        "complete": "true",
        "x": 2847.8333435058594,
        "y": 224.3333511352539,
        "wires": []
    },
    {
        "id": "aecccef5.585b",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2796.33349609375,
        "y": 96.66666412353516,
        "wires": [
            [
                "69fa7a59.7b4134"
            ]
        ]
    },
    {
        "id": "ab068161.d3be6",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1871.5000610351562,
        "y": 892.6666870117188,
        "wires": [
            [
                "db602985.e84178",
                "464e533f.20e15c"
            ],
            [
                "16048eac.d74bc1"
            ]
        ]
    },
    {
        "id": "3f0f1c5b.139264",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1483.8333740234375,
        "y": 1006.3333740234375,
        "wires": [
            [
                "64cc674e.592e58"
            ],
            [
                "3686ccd8.9cc104"
            ]
        ]
    },
    {
        "id": "b3871104.b6593",
        "type": "debug",
        "z": "1bc13036.e3b82",
        "name": "create user_task after creating detail",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 4559.833740234375,
        "y": 595.6667022705078,
        "wires": []
    },
    {
        "id": "c10eb2f7.4f475",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1598.1666259765625,
        "y": 749.6666870117188,
        "wires": [
            [
                "c15cd6e0.e7c778"
            ],
            [
                "175f2640.7b875a"
            ]
        ]
    },
    {
        "id": "175f2640.7b875a",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 1722,
        "y": 790.3333740234375,
        "wires": []
    },
    {
        "id": "c15cd6e0.e7c778",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "payload & verify user",
        "func": "var task_obj = msg.payload_data;\n\nif(isEmpty(msg.payload)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload    = {status: 400, error: true, msg: \"Invalid access_token, Unable to find user with this access_token.\", data: null};\n}else{\n    \n    var user = msg.payload[0];\n    \n    if(user._id === task_obj.user_id){\n        msg.api_status = \"API_SUCCESS\";\n        msg.payload = {\n            _id                         : task_obj._id,\n            _rev                        : task_obj._rev,\n            table                       : task_obj.table, \n            task_name                   : task_obj.task_name,\n            user_id                     : task_obj.user_id,\n            page_id                     : task_obj.page_id,\n            from_page_id                : task_obj.from_page_id,\n            parent_id                   : task_obj.parent_id,\n            header_template_id          : task_obj.header_template_id,\n            detail_template_id          : task_obj.detail_template_id,\n            footer_template_id          : task_obj.footer_template_id,\n            timeout_id                  : task_obj.timeout_id,\n            child_default_task_id       : task_obj.child_default_task_id,\n            child_default_task_name     : task_obj.child_default_task_name,\n            date_created                : task_obj.date_created,\n            type                        : task_obj.type,\n            status                      : task_obj.status,\n            category                    : task_obj.category,\n            additional_data_fn          : task_obj.additional_data_fn,\n            optional_data               : task_obj.optional_data,\n            required_data               : task_obj.required_data,\n            offline_expiration_time     : task_obj.offline_expiration_time,\n            display_if_empty            : task_obj.display_if_empty,\n            image                       : task_obj.image\n        };\n        msg.api_result = {status: 200, error: false, msg: \"Record udpated successfully\", data: msg.payload};\n    }else{\n        msg.api_status = \"API_ERROR\";\n        msg.payload    = {status: 400, error: true, msg: \"You are not authrozied to update this record.\", data: null};\n    }\n}\nreturn msg;\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1772.1666768391929,
        "y": 742.6666437784831,
        "wires": [
            [
                "df43328c.e54dc"
            ]
        ]
    },
    {
        "id": "df43328c.e54dc",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1962.83349609375,
        "y": 776.6666870117188,
        "wires": [
            [
                "e46a487a.d682b8",
                "3ed49608.46eeba"
            ],
            [
                "97975b91.8cf308"
            ]
        ]
    },
    {
        "id": "97975b91.8cf308",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2149.6668090820312,
        "y": 811.3333435058594,
        "wires": []
    },
    {
        "id": "71cf9c70.c94964",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1458.1666259765625,
        "y": 748.3333129882812,
        "wires": [
            [
                "c10eb2f7.4f475"
            ]
        ]
    },
    {
        "id": "d4893bd6.73baf8",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "doCreate_optional_detail",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2611.390625,
        "y": 412.94140625,
        "wires": [
            [
                "d62930a9.21f02"
            ],
            [
                "f71aaf5f.47b0e"
            ]
        ]
    },
    {
        "id": "d62930a9.21f02",
        "type": "change",
        "z": "1bc13036.e3b82",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "option_detail",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2806.375,
        "y": 404.42578125,
        "wires": [
            [
                "56701aa1.5fe244"
            ]
        ]
    },
    {
        "id": "56701aa1.5fe244",
        "type": "cloudant out",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 3009.38671875,
        "y": 403.79296875,
        "wires": []
    },
    {
        "id": "f71aaf5f.47b0e",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "Log",
        "func": "node.warn(\"No need to create optional second task.\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2749.378876615316,
        "y": 442.75780855119234,
        "wires": [
            []
        ]
    },
    {
        "id": "7a1fa12a.ae0fc",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "delete_detail",
        "func": "var body = msg.req_body.table_data,\n    token = msg.req_body.access_token ;\n        \n    if(isEmpty(body)){\n        msg.api_status  = \"API_ERROR\";\n        msg.payload     = {status: 400, error: true, msg: \"Table data should be valid json object.\", data: null};\n    }else if(isEmpty(token)){\n        msg.api_status  = \"API_ERROR\";\n        msg.payload     = {status: 400, error: true, msg: \"`access_token` must be provided.\", data: null};\n    }else if(isEmpty(body.id)){\n        msg.api_status  = \"API_ERROR\";\n        msg.payload     = {status: 400, error: true, msg: \"`id` must be provided to remove detail.\", data: null};\n    }else{\n        msg.req_data    = {access_token: token, detail_id: body.id};\n        msg.api_status  = \"API_SUCCESS\";\n        msg.method      = \"GET\";\n        msg.url         = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_design/filterBy/_view/delete_view_data\";\n    }\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1296.0000610351562,
        "y": 639,
        "wires": [
            [
                "2f5e4f46.787e"
            ]
        ]
    },
    {
        "id": "2f5e4f46.787e",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1473.86328125,
        "y": 613.91796875,
        "wires": [
            [
                "ad69ce11.40c27"
            ],
            [
                "d07942b5.0e4be"
            ]
        ]
    },
    {
        "id": "ad69ce11.40c27",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 1644.86328125,
        "y": 570.39453125,
        "wires": []
    },
    {
        "id": "d07942b5.0e4be",
        "type": "http request",
        "z": "1bc13036.e3b82",
        "name": "bulk_delete_view",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1685.8671875,
        "y": 628.9296875,
        "wires": [
            [
                "9896f35d.a07e1"
            ]
        ]
    },
    {
        "id": "9896f35d.a07e1",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "populate_content",
        "func": "var req_body = msg.req_data,\n    body     = msg.payload ;\n    \nif(isEmpty(body.rows)){\n    node.warn(\">>>>>>>>>>>>>>>>>>>>>>\");\n    node.warn(body);\n    msg.api_status = \"API_ERROR\";\n    msg.payload    = {status: 400, error:true, msg: \"Unable to find data using view\", data: null};\n}else{\n    var result_obj          = populate_body(body.rows),\n        user_obj            = populate_user(result_obj.users, req_body.access_token);\n        \n    if(isEmpty(user_obj)){\n        msg.api_status  = \"API_ERROR\";\n        msg.payload     = {status: 400, error: true, msg: \"Unable to find user with `access_token`.\", data: null};\n        return msg;\n    }else{\n        var detail_obj  = populate_detail(result_obj.details, req_body.detail_id);\n        \n        if(isEmpty(detail_obj)){\n            msg.api_status = \"API_ERROR\";\n            msg.payload     = {status: 400, error: true, msg: \"Unable to find detail with `detail_id`.\", data: null};\n            return msg;\n        }else{\n            \n            if(detail_obj.user_id === user_obj._id){\n                var child_details   = populate_sub_detail(result_obj.details, detail_obj.to_page_id),\n                grand_child_details = populate_grand_child(result_obj.details, child_details),\n                user_tasks          = populate_user_task(result_obj.user_task, detail_obj.page_id, user_obj._id),\n                response            = [];\n                \n                grand_child_details.push(detail_obj);\n                delete_records(grand_child_details);\n                delete_records(user_tasks);\n              \n                msg.api_status = \"API_SUCCESS\";\n                msg.method = \"POST\";\n                msg.url    = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_bulk_docs\";\n                msg.payload = {docs: response} ;\n                return msg;\n            }else{\n                var user_tasks      = populate_user_task(result_obj.user_task, detail_obj.page_id, user_obj._id), response=[];\n                delete_records(user_tasks);\n                \n                msg.api_status = \"API_SUCCESS\";\n                msg.method = \"POST\";\n                msg.url    = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_bulk_docs\";\n                msg.payload = {docs: response};\n                return msg;\n            }\n        }\n    }\n}\n\nreturn msg;\n\nfunction delete_records(records){\n    if(records.length){\n        for(var i=0; i <records.length; i++){\n            response.push({\n                _id     : records[i]._id,\n                _rev    : records[i]._rev,\n                _deleted: true\n            });\n        }\n    }\n}\n\nfunction populate_user_task(user_tasks, page_id, user_id){\n    var arr = [];\n    for(var i=0; i<user_tasks.length; i++){\n        if( ( parseInt(user_tasks[i].page_id) === parseInt(page_id) ) &&\n            ( user_tasks[i].user_id === user_id )\n        ){\n            arr.push(user_tasks[i]);    \n        }\n    }\n    return arr;\n}\n\nfunction populate_grand_child(all_details, child_details){\n    var grand_childs = [];\n    if(!isEmpty(child_details)){\n        for(var i=0; i<all_details.length; i++){\n            for(var k=0; k<child_details.length; k++){\n                if(parseInt(all_details[i].page_id) === parseInt(child_details[k].to_page_id)){\n                    grand_childs.push(all_details[i]);\n                }\n            }\n        }\n    }\n    if(grand_childs.length){\n        return child_details.concat(grand_childs);\n    }else{\n        return child_details;\n    }\n}\n\nfunction populate_sub_detail(details, to_page_id){\n    var arr = [];\n    for(var i=0; i<details.length; i++){\n        if(details[i].page_id === to_page_id){\n            arr.push(details[i]);\n        }\n    }\n    return arr;\n}\n\nfunction populate_detail(details, detail_id){\n    var obj = {};\n    for(var i=0; i<details.length; i++){\n        if(details[i]._id === detail_id){\n            obj = details[i];\n        }\n    }\n    return obj ;\n}\n\nfunction populate_user(users, access_token){\n    var obj = {};\n    for(var i=0; i<users.length; i++){\n        if(users[i].access_token === access_token){\n            obj = users[i] ;\n        }\n    }\n    return obj;\n}\n\nfunction populate_body(rows){\n    var details = [], users=[], user_task=[] ;\n    for(var i=0; i<rows.length; i++){\n        if(rows[i].value.table === \"details\"){\n            details.push(rows[i].value);\n        }\n        \n        if(rows[i].value.table === \"users\"){\n            users.push(rows[i].value);\n        }\n        \n        if(rows[i].value.table === \"user_task\"){\n            user_task.push(rows[i].value);\n        }\n    }\n    return {details: details, users: users, user_task: user_task};\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1895.36328125,
        "y": 628.49609375,
        "wires": [
            [
                "fe7e63dc.d9f8e"
            ]
        ]
    },
    {
        "id": "fe7e63dc.d9f8e",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2067.609375,
        "y": 628.9296875,
        "wires": [
            [
                "529712dd.73ea7c"
            ],
            [
                "df3a22ee.0c8c9"
            ]
        ]
    },
    {
        "id": "529712dd.73ea7c",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2237.359375,
        "y": 605.3984375,
        "wires": []
    },
    {
        "id": "df3a22ee.0c8c9",
        "type": "http request",
        "z": "1bc13036.e3b82",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 2257.875,
        "y": 652.43359375,
        "wires": [
            [
                "1b4af4f1.9977bb"
            ]
        ]
    },
    {
        "id": "1b4af4f1.9977bb",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "response",
        "func": "if(isEmpty(msg.payload)){\n    msg.payload = {status: 400, error: true, msg: \"Error while removing record from database\", data: msg.payload};\n}else{\n    msg.payload = {status: 200, error: false, msg: \"Record removed successfully from database.\", data: msg.payload};\n}\nreturn msg;\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2416.86328125,
        "y": 652.2421875,
        "wires": [
            [
                "a784b7dc.0735d8"
            ]
        ]
    },
    {
        "id": "a784b7dc.0735d8",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2541.75,
        "y": 652,
        "wires": []
    },
    {
        "id": "16048eac.d74bc1",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2042.5003051757812,
        "y": 952,
        "wires": []
    },
    {
        "id": "3686ccd8.9cc104",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 1617.5000101725261,
        "y": 1041.333351135254,
        "wires": []
    },
    {
        "id": "64cc674e.592e58",
        "type": "http request",
        "z": "1bc13036.e3b82",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_design/filterBy/_view/get_short_details",
        "tls": "",
        "x": 1635.5,
        "y": 995.6666870117188,
        "wires": [
            [
                "bfab0f04.e55c1"
            ]
        ]
    },
    {
        "id": "bfab0f04.e55c1",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "populate_records",
        "func": "var payload         = msg.payload,\n    access_token    = msg.payload_content.access_token,\n    req_body        = msg.payload_content.content;\n    \nif(isEmpty(payload.rows)){\n    msg.statusCode = 400 ;\n    msg.api_status = \"API_ERROR\";\n    msg.payload    = {status: 400, error: true, msg: \"Unable to fetch record via using views\", data: null};\n}else{\n    var db_records = populate_records(payload.rows),\n        user_obj   = populate_user(db_records.users, access_token),\n        detail_obj = populate_details(db_records.details, req_body.detail_id),\n        task_obj   = populate_task(db_records.tasks_arr, req_body.page_id);\n        \n        if(isEmpty(user_obj)){\n            msg.statusCode = 400 ;\n            msg.api_status = \"API_ERROR\";\n            msg.payload    = {status: 400, error: true, msg: \"Invalid `access_token`. Please retry after logout.\", data: null};\n        }else{\n            if(user_obj._id == detail_obj.user_id){\n                //update detail_obj\n                detail_obj.display_if_empty         = req_body.display_if_empty;\n                detail_obj.user_incoming.note       = req_body.message ;\n                detail_obj.user_incoming.message    = req_body.message ;\n                detail_obj.type                     = req_body.type;\n         \n                //update task_obj \n                task_obj.display_if_empty = req_body.display_if_empty;\n                task_obj.task_name        = req_body.message ;\n                task_obj.type             = req_body.type;\n                \n                msg.api_status = \"API_SUCCESS\";\n                msg.payload = {\n                    docs: [detail_obj, task_obj]\n                };\n            }else{\n                msg.statusCode = 401 ;\n                msg.api_status = \"API_ERROR\";\n                msg.payload    = {status: 400, error: true, msg: \"You are not authrozied to update this record.\", data: null};\n            }\n        }\n}   \n\nreturn msg;\n\nfunction populate_user(users, access_token){\n    var user = {};\n    for(var i=0; i<users.length; i++){\n        if(users[i].access_token == access_token){\n            user = users[i];\n        }\n    }\n    return user;\n}\n\nfunction populate_details(details, detail_id){\n    var obj = {};\n    for(var i=0; i<details.length; i++){\n        if(details[i]._id == detail_id){\n            obj = details[i];\n        }\n    }\n    return obj;\n}\n\nfunction populate_task(tasks, page_id){\n    var obj = {};\n    for(var i=0; i<tasks.length; i++){\n        if((tasks[i].page_id == page_id) && (tasks[i].table == \"task_table\") ){\n            obj = tasks[i];\n        }\n    }\n    return obj;\n}\n\nfunction populate_records(rows){\n    var users = [], details = [], tasks=[];\n    \n    for(var i=0; i<rows.length; i++){\n        if(rows[i].value.table == \"users\"){\n            users.push(rows[i].value);   \n        }\n        \n        if(rows[i].value.table == \"details\"){\n            details.push(rows[i].value);\n        }\n        \n        if(rows[i].value.table == \"task_table\"){\n            tasks.push(rows[i].value);\n        }\n    }\n    return {users: users, details:details, tasks_arr:tasks };\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1816.8333435058594,
        "y": 1035.333351135254,
        "wires": [
            [
                "db8b90a6.16022"
            ]
        ]
    },
    {
        "id": "a89ee394.95a9d",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2099.83349609375,
        "y": 1097.6666870117188,
        "wires": []
    },
    {
        "id": "db8b90a6.16022",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1977.8333435058594,
        "y": 1068.333351135254,
        "wires": [
            [
                "b250faeb.be6e78"
            ],
            [
                "a89ee394.95a9d"
            ]
        ]
    },
    {
        "id": "b250faeb.be6e78",
        "type": "http request",
        "z": "1bc13036.e3b82",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_bulk_docs",
        "tls": "",
        "x": 2116.8333740234375,
        "y": 1040.6666870117188,
        "wires": [
            [
                "affb5a04.b9f238"
            ]
        ]
    },
    {
        "id": "affb5a04.b9f238",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "res",
        "func": "if(isEmpty(msg.payload)){\n    msg.payload = {status: 400, error: true, msg: \"Unable to update provided documents\", data: msg.payload};\n}else{\n    msg.payload = {status: 200, error: true, msg: \"Record updated successfully.\", data: msg.payload};\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2266.83349609375,
        "y": 1040.3334350585938,
        "wires": [
            [
                "3edc137a.66ec4c"
            ]
        ]
    },
    {
        "id": "3edc137a.66ec4c",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2384.1667378743487,
        "y": 1084.6666641235352,
        "wires": []
    },
    {
        "id": "8047b1c2.00b14",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "add_detail_to_task",
        "func": "var content         = msg.payload_data ,\n    access_token    = msg.access_token ;\n    \nif(isEmpty(content.detail_id)){\n    msg.statusCode  = 400 ;\n    msg.payload     = {status: 400, msg: \"`detaik_id`is missing\", data: content};\n}else if(isEmpty(content.task_id)){\n    msg.statusCode  = 400 ;\n    msg.payload     = {status: 400, msg: \"`task_id`is missing\", data: content};\n}else if(isEmpty(access_token)){\n    msg.statusCode  = 400 ;\n    msg.payload     = {status: 400, msg: \"`access_token`is missing\", data: content};\n}else{\n    msg.url     = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_design/filterBy/_view/add_detail_to_task\";\n    msg.method  = \"GET\";\n}\n\nreturn msg;\n\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1311.5000305175781,
        "y": 1140.333351135254,
        "wires": [
            [
                "b009fcf1.982cd"
            ]
        ]
    },
    {
        "id": "418ae6bc.5f2e38",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 1984.500244140625,
        "y": 1145.6667852401733,
        "wires": []
    },
    {
        "id": "b009fcf1.982cd",
        "type": "http request",
        "z": "1bc13036.e3b82",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1504.5000076293945,
        "y": 1140.0000267028809,
        "wires": [
            [
                "647749b5.f11ce8"
            ]
        ]
    },
    {
        "id": "647749b5.f11ce8",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "populate_data",
        "func": "var content         = msg.payload_data,\n    access_token    = msg.access_token,\n    db_records      = msg.payload;\n\nif(isEmpty(db_records.rows)){\n    msg.statusCode = 400;\n    msg.payload    = {status: 400, msg: \"Unable to fetch data via using cloudant view 'add_detail_to_task'\", data: null};\n}else{\n    var records     = populate_record(db_records.rows),\n        detail_obj  = populate_details(records.details, content.detail_id),\n        user_obj    = populate_user(records.users, access_token);\n        \n    if(isEmpty(user_obj)){\n        msg.statusCode  = 400;\n        msg.payload     = {status: 400, msg: \"`access_token` is not valid.\", data: null};\n    }else if(isEmpty(detail_obj)){\n        msg.statusCode  = 400;\n        msg.payload     = {status: 400, msg: \"`detail_id` is not valid.\", data: null};\n    }else{\n\n        if(isEmpty(detail_obj.task_id)){\n            msg.statusCode  = 400;\n            msg.payload     = {status: 400, msg: \"`detail_obj` doesn't contains task_id. please check it once.\", data: null};\n        }\n        else if(Object.prototype.toString.call(detail_obj.task_id) !== \"[object Array]\"){\n            detail_obj.task_id = detail_obj.task_id.push(task_id);    \n            msg.statusCode  = 400;\n            msg.payload     = {status: 400, msg: \"Invalid detail.task_id. Plesae check details_obj once.\", data: null};\n        }else{\n            msg.statusCode     = 200;\n            detail_obj.task_id.push(content.task_id);    \n            msg.payload        = detail_obj;\n        }\n    }\n}\nreturn msg;\n\nfunction populate_user(arr, token){\n    if(isEmpty(token)) return {};\n    \n    if(isEmpty(arr)){\n        return {};\n    }else{\n        for(var i=0; i<arr.length; i++){\n            if(arr[i].access_token == token){\n                return arr[i];\n            }\n        }\n    }    \n    \n    return {};\n}\n\nfunction populate_details(arr, id){\n    if(isEmpty(id)) return {};\n    \n    if(isEmpty(arr)){\n        return {};\n    }else{\n        for(var i=0; i<arr.length; i++){\n            if(arr[i]._id == id){\n                return arr[i];\n            }\n        }\n    }    \n    \n    return {};\n}\n\nfunction populate_record(list){\n    var users = [],details=[], sorted_detail=[];\n    for(var i=0; i<list.length; i++){\n        if(list[i].value.table == \"details\"){\n            details.push(list[i].value);\n        }\n        \n        if(list[i].value.table == \"users\"){\n            users.push(list[i].value);\n        }\n        \n    }\n    \n    if(!isEmpty(details)){\n        sorted_detail =  details.sort(function(a,b){\n            sorted_detail = sorted_detail.sort(function(a,b){\n        \t\treturn (a.createdAt - b.createdAt);\t\n            });\n        });\n    }else{\n        sorted_detail = details ;\n    }\n    \n    return {users: users, details: sorted_detail} ;\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1673.8333435058594,
        "y": 1183.6666641235352,
        "wires": [
            [
                "ced53a41.ba8868"
            ]
        ]
    },
    {
        "id": "ced53a41.ba8868",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "400",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1840.8333435058594,
        "y": 1184.0000076293945,
        "wires": [
            [
                "418ae6bc.5f2e38"
            ],
            [
                "d674a9dd.e79dd8",
                "fb340adc.026378"
            ]
        ]
    },
    {
        "id": "fb340adc.026378",
        "type": "cloudant out",
        "z": "1bc13036.e3b82",
        "name": "master_table",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2006.8336181640625,
        "y": 1199.3334197998047,
        "wires": []
    },
    {
        "id": "d674a9dd.e79dd8",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "response",
        "func": "var data = msg.payload ;\n\nmsg.payload = {status: 200, msg: \"Record updated successfully.\", data: data};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1998.8333435058594,
        "y": 1256.0000076293945,
        "wires": [
            [
                "b1560562.e65e68"
            ]
        ]
    },
    {
        "id": "b1560562.e65e68",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2134.8334045410156,
        "y": 1257.333351135254,
        "wires": []
    },
    {
        "id": "b43c0e6e.e29ac",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "add_assistants",
        "func": "var access_token = msg.access_token ,\n    payload      = msg.payload_data ;\n\n\nif(isEmpty(access_token)){\n    msg.API_ERROR  = \"API_ERROR\";\n    msg.statusCode = 400;\n    msg.payload    = {status: 400, msg: \"`access_token` is missing\", data: null};\n}else if(isEmpty(payload.number)){\n    msg.statusCode = 400;\n    msg.payload    = {status: 400, msg: \"`User number` is missing to add as assistants\", data: null};\n}else{\n    msg.API_ERROR  = \"API_SUCCESS\";\n    msg.payload    = {\n        query : \"table:users\",\n        sort  : \"_id<string>\"\n    };\n}\n\nreturn msg;\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1305.5000305175781,
        "y": 1273.0000381469727,
        "wires": [
            [
                "6be264e8.9c21ec"
            ]
        ]
    },
    {
        "id": "de63dc2b.8b5da",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 1603.5000534057617,
        "y": 1237.3334074020386,
        "wires": []
    },
    {
        "id": "6be264e8.9c21ec",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "API_ERROR",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1465.833381652832,
        "y": 1272.6667442321777,
        "wires": [
            [
                "de63dc2b.8b5da"
            ],
            [
                "f447ca2.b3ac138"
            ]
        ]
    },
    {
        "id": "f447ca2.b3ac138",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1625.8333892822266,
        "y": 1287.3334121704102,
        "wires": [
            [
                "d6ab8f0a.e368"
            ]
        ]
    },
    {
        "id": "d6ab8f0a.e368",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "populate",
        "func": "var access_token = msg.access_token ,\n    req_body     = msg.payload_data ,\n    payload      = msg.payload ;\n    \nif(isEmpty(payload)){\n    msg.API_ERROR   = \"API_ERROR\";\n    msg.statusCode  = 400;\n    msg.payload     = {status: 400, msg: \"Unable to fetch all users\", data: []};\n}else{\n    if(isUserAuthenticated(payload, access_token)){\n        var user_obj = isUserExits(payload, req_body.number);\n        if( isEmpty(user_obj) ){\n            msg.API_ERROR   = \"API_ERROR\";\n            msg.statusCode  = 400;\n            msg.payload     = {status: 400, msg: \"Entred phone number doesn't exits in database.\", data: []};    \n        }else{\n\n            if((\"dri_main\" in user_obj.type)){\n                msg.API_ERROR   = \"API_ERROR\";\n                msg.statusCode  = 400;\n                msg.payload     = {status: 400, msg: \"User already added into this group\", data: []};    \n            }else{\n                msg.API_ERROR   = \"API_SUCCESS\";\n                user_obj.type.dri_main  = \"dri_main\";\n                msg.payload             = user_obj ;\n                msg.api_response        =  {status: 200, msg: \"User added into group successfully\", data: user_obj};\n            }\n        }\n    }else{\n        msg.API_ERROR   = \"API_ERROR\";\n        msg.statusCode  = 400;\n        msg.payload     = {status: 400, msg: \"Invalid `access_token`. Plesae check access_token.\", data: []};\n    }\n}\nreturn msg;\n\nfunction isUserExits(users, number){\n    var obj = {};\n    for(var itr in users){\n        if(users[itr].virtual_phone == parseInt(number)){\n            obj = users[itr];\n        }\n    }\n    return obj ;\n}\n\nfunction isUserAuthenticated(users, access_token){\n    for(var itr in users){\n        if(users[itr].access_token == access_token){\n            return true ;\n        }\n    }\n    return false;\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1786.833396911621,
        "y": 1355.6667051315308,
        "wires": [
            [
                "9b02b6e0.6589a8"
            ]
        ]
    },
    {
        "id": "9b02b6e0.6589a8",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "API_ERROR",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1943.833408355713,
        "y": 1357.333370923996,
        "wires": [
            [
                "1aee5fb3.c2032",
                "17f6f0f5.e8e08f"
            ],
            [
                "f4598763.13ee78"
            ]
        ]
    },
    {
        "id": "f4598763.13ee78",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2108.8332920074463,
        "y": 1417.0000414848328,
        "wires": []
    },
    {
        "id": "1aee5fb3.c2032",
        "type": "cloudant out",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2133.833293914795,
        "y": 1298.6667041778564,
        "wires": []
    },
    {
        "id": "17f6f0f5.e8e08f",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "response",
        "func": "node.warn(\"added assistant\");\nnode.warn(msg.payload);\n\nmsg.payload = msg.api_response;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2123.8333435058594,
        "y": 1346.0000076293945,
        "wires": [
            [
                "2ddd3c2d.d3aba4"
            ]
        ]
    },
    {
        "id": "2ddd3c2d.d3aba4",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2269.8334045410156,
        "y": 1348.333351135254,
        "wires": []
    },
    {
        "id": "f22f6e7b.b09f7",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "update_assistant",
        "func": "var access_token = msg.access_token;\n    user_data    = msg.payload_data;\n\nif(isEmpty(access_token)){\n    msg.API_ERROR   = \"API_ERROR\";\n    msg.statusCode  = 400;\n    msg.payload     = {status:400, msg: \"`access_token` is missing\", record: []};\n}else if(isEmpty(user_data)){\n    msg.API_ERROR   = \"API_ERROR\";\n    msg.statusCode  = 400;\n    msg.payload     = {status:400, msg: \"`user_data` is missing\", record: []};\n}else{\n    msg.API_ERROR   = \"API_SUCCESS\";\n    msg.payload = {\n        query: \"table:users\",\n        sort: \"_id<string>\"\n    };\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1319.1667938232422,
        "y": 1420.3333778381348,
        "wires": [
            [
                "fbc9d9ee.646bc8"
            ]
        ]
    },
    {
        "id": "fbc9d9ee.646bc8",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "API_ERROR",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1484.6667175292969,
        "y": 1422.666708946228,
        "wires": [
            [
                "2da7884a.8e2688"
            ],
            [
                "7f739e74.47a5a"
            ]
        ]
    },
    {
        "id": "2da7884a.8e2688",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 1632.3333129882812,
        "y": 1395.0001254081726,
        "wires": []
    },
    {
        "id": "7f739e74.47a5a",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1651.333309173584,
        "y": 1443.6667103767395,
        "wires": [
            [
                "6ce77516.2a0b0c"
            ]
        ]
    },
    {
        "id": "6ce77516.2a0b0c",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "response",
        "func": "var user_data    = msg.payload_data ,\n    access_token = msg.access_token,\n    payload      = msg.payload ;\n\nif(isUserAuthenticated(payload, access_token)){\n    var user_obj = isUserExists(payload, user_data.user_id);\n    if(isEmpty(user_obj)){\n        msg.API_ERROR   = \"API_ERROR\";\n        msg.statusCode  = 400;\n        msg.payload     = {status:400, msg: \"user doesn't exits with provided `user_id`.\", record: null};    \n    }else{\n        msg.API_ERROR   = \"API_SUCCESS\";\n        user_obj.firstname = user_data.first_name;\n        user_obj.lastname  = user_data.last_name;\n        user_obj.email     = user_data.email;\n        user_obj.device_id = user_data.deviceId;\n        user_obj.push_accepted = user_data.push_accepted;\n        msg.payload = user_obj;\n        msg.api_response = {status: 200, msg: \"Record fetched successfully\", records: user_obj};\n    }\n}else{\n    msg.API_ERROR   = \"API_ERROR\";\n    msg.statusCode  = 400;\n    msg.payload     = {status:400, msg: \"`access_token` is invalid. Plesae check it once.\", record: null};\n}\nreturn msg;\n\nfunction isUserExists(users, user_id){\n    var obj = {};\n    for(var itr in users){\n        if(users[itr]._id == user_id){\n            obj = users[itr] ;    \n        }\n    }\n    return obj;\n}\n\nfunction isUserAuthenticated(users, access_token){\n    for(var itr in users){\n        if(users[itr].access_token == access_token){\n            return true ;\n        }\n    }\n    return false;\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1809.8334007263184,
        "y": 1498.6667137145996,
        "wires": [
            [
                "fb59f203.9f2f"
            ]
        ]
    },
    {
        "id": "fb59f203.9f2f",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "API_ERROR",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1957.8333435058594,
        "y": 1500.0000076293945,
        "wires": [
            [
                "f4598763.13ee78"
            ],
            [
                "6592bd8f.ec7434",
                "ac1fc897.22f068"
            ]
        ]
    },
    {
        "id": "6592bd8f.ec7434",
        "type": "cloudant out",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2129.833293914795,
        "y": 1477.0000476837158,
        "wires": []
    },
    {
        "id": "ac1fc897.22f068",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "response",
        "func": "node.warn(\"updated user_paylaod \");\nnode.warn(msg.payload);\n\nmsg.payload = msg.api_resposne;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2118.8333435058594,
        "y": 1524.333351135254,
        "wires": [
            [
                "ed80efa5.97463"
            ]
        ]
    },
    {
        "id": "ed80efa5.97463",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2285.8333435058594,
        "y": 1520.6666641235352,
        "wires": []
    },
    {
        "id": "d5a7251d.86fb18",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "delete_assistant",
        "func": "var access_token = msg.access_token;\n    data         = msg.payload_data;\n    \nif(isEmpty(access_token)){\n    msg.API_ERROR   = \"API_ERROR\";\n    msg.statusCode  = 400;\n    msg.payload     = {status:400, msg: \"`access_token` is missing\", record: []};\n}else if(isEmpty(data)){\n    msg.API_ERROR   = \"API_ERROR\";\n    msg.statusCode  = 400;\n    msg.payload     = {status:400, msg: \"`user_id` is missing\", record: []};\n}else{\n    msg.API_ERROR   = \"API_SUCCESS\";\n    msg.payload = {\n        query: \"table:users\",\n        sort: \"_id<string>\"\n    };\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1315.5,
        "y": 1576,
        "wires": [
            [
                "4bb56912.8fefc8"
            ]
        ]
    },
    {
        "id": "4bb56912.8fefc8",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "API_ERROR",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1506.333251953125,
        "y": 1582,
        "wires": [
            [
                "833797ef.08e588"
            ],
            [
                "e93c0294.21bb5"
            ]
        ]
    },
    {
        "id": "833797ef.08e588",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 1653.9998474121094,
        "y": 1554.3334164619446,
        "wires": []
    },
    {
        "id": "e93c0294.21bb5",
        "type": "cloudant in",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1672.999843597412,
        "y": 1603.0000014305115,
        "wires": [
            [
                "6f803e00.6ce044"
            ]
        ]
    },
    {
        "id": "6f803e00.6ce044",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "response",
        "func": "var body         = msg.payload_data ,\n    access_token = msg.access_token,\n    payload      = msg.payload ;\n    \nif(isUserAuthenticated(payload, access_token)){\n    var user_obj = isUserExists(payload, body.id);\n    if( isEmpty(user_obj) ){\n        msg.API_ERROR   = \"API_ERROR\";\n        msg.statusCode  = 400;\n        msg.payload     = {status: 400, msg: \"User doesn't exists in database.\", data: []};    \n    }else{\n\n        if(!(\"dri_main\" in user_obj.type)){\n            msg.API_ERROR   = \"API_ERROR\";\n            msg.statusCode  = 400;\n            msg.payload     = {status: 400, msg: \"User doesn't exits in this group\", data: []};    \n        }else{\n            msg.API_ERROR   = \"API_SUCCESS\";\n            delete user_obj.type.dri_main;\n            msg.payload             = user_obj ;\n            msg.api_response        =  {status: 200, msg: \"User removed successfully.\", data: user_obj};\n        }\n    }\n}else{\n    msg.API_ERROR   = \"API_ERROR\";\n    msg.statusCode  = 400;\n    msg.payload     = {status: 400, msg: \"Invalid `access_token`. Plesae check access_token.\", data: []};\n}\n    \nreturn msg;\n\nfunction isUserExists(users, user_id){\n    var obj = {};\n    for(var itr in users){\n        if(users[itr]._id == user_id){\n            obj = users[itr] ;    \n        }\n    }\n    return obj;\n}\n\nfunction isUserAuthenticated(users, access_token){\n    for(var itr in users){\n        if(users[itr].access_token == access_token){\n            return true ;\n        }\n    }\n    return false;\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1833.5000305175781,
        "y": 1631.333381652832,
        "wires": [
            [
                "4fa2c52f.da0f8c"
            ]
        ]
    },
    {
        "id": "4fa2c52f.da0f8c",
        "type": "switch",
        "z": "1bc13036.e3b82",
        "name": "",
        "property": "API_ERROR",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1966,
        "y": 1633.6666259765625,
        "wires": [
            [
                "d3c981ad.a37fe",
                "3c39a2d7.282fde"
            ],
            [
                "5d7cbcb.3699944"
            ]
        ]
    },
    {
        "id": "5d7cbcb.3699944",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2130.9998836517334,
        "y": 1693.3332965373993,
        "wires": []
    },
    {
        "id": "d3c981ad.a37fe",
        "type": "cloudant out",
        "z": "1bc13036.e3b82",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "dev-platform-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2155.999885559082,
        "y": 1574.999959230423,
        "wires": []
    },
    {
        "id": "3c39a2d7.282fde",
        "type": "function",
        "z": "1bc13036.e3b82",
        "name": "response",
        "func": "node.warn(\"added assistant\");\nnode.warn(msg.payload);\n\nmsg.payload = msg.api_response;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2145.9999351501465,
        "y": 1622.333262681961,
        "wires": [
            [
                "a90df879.2e92a8"
            ]
        ]
    },
    {
        "id": "a90df879.2e92a8",
        "type": "http response",
        "z": "1bc13036.e3b82",
        "name": "",
        "x": 2291.9999961853027,
        "y": 1624.6666061878204,
        "wires": []
    }
]
