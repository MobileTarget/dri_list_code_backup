[{"id":"1bc13036.e3b82","type":"tab","label":"Generic Save"},{"id":"7c9bd36a.800dfc","type":"http in","z":"1bc13036.e3b82","name":"API HANDLER","url":"/master_api_handler","method":"post","swaggerDoc":"","x":85,"y":131.00001525878906,"wires":[["6ee54ff6.df69e"]]},{"id":"6ee54ff6.df69e","type":"function","z":"1bc13036.e3b82","name":"Handler","func":"var req = msg.payload;\n\nif(isEmpty(req)){\n    msg.api_response = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"req body must be specified.\", data: null};\n}else{\n    msg.api_response = \"API_SUCCESS\";\n    // if(!(\"api\" in req)){\n    //     msg.api_response = \"API_ERROR\";\n    //     msg.payload = {status: 400, error: true, msg: \"Body must must be wrapped with `api` key.\", data: null};\n    // }else{\n    //     msg.req_body = req.api;\n    // }\n    msg.req_body = populate_content(req.app) ;\n}\nreturn msg;\n\nfunction isEmpty(obj){\n    if(typeof obj === \"object\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}\n\nfunction populate_content(obj){\n    return obj.api;\n}","outputs":1,"noerr":0,"x":245.00001525878906,"y":248.00001525878906,"wires":[["7d44e24.4d6b11c"]]},{"id":"7d44e24.4d6b11c","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_response","propertyType":"msg","rules":[{"t":"eq","v":"API_ERROR","vt":"str"},{"t":"else"}],"checkall":"true","outputs":2,"x":371.0000305175781,"y":389.0000305175781,"wires":[["25d70d09.b4fa42"],["863d36a6.9affc8"]]},{"id":"25d70d09.b4fa42","type":"http response","z":"1bc13036.e3b82","name":"","x":525,"y":266.00001525878906,"wires":[]},{"id":"863d36a6.9affc8","type":"function","z":"1bc13036.e3b82","name":"validate body","func":"var body = msg.req_body;\n\nif(isEmpty(body.table)){\n    msg.api_response = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`table` parameter must be set to save record\", data: null};\n}else if(isEmpty(body.table_data)){\n    msg.api_response = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`table_data` parameter must be set to save record\", data: null};    \n}else{\n    msg.api_response = \"API_SUCCESS\";\n    msg.payload_table = body.table ;\n    msg.payload_data  = body.table_data ;\n    msg.access_token  = body.access_token ;\n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":548,"y":530.0000305175781,"wires":[["2da8026d.28dc2e"]]},{"id":"2da8026d.28dc2e","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_response","propertyType":"msg","rules":[{"t":"eq","v":"API_ERROR","vt":"str"},{"t":"else"}],"checkall":"true","outputs":2,"x":668,"y":673.0000305175781,"wires":[["a2ccf1f4.33b25"],["d6ab12c2.6dc92"]]},{"id":"a2ccf1f4.33b25","type":"http response","z":"1bc13036.e3b82","name":"","x":784,"y":590.0000152587891,"wires":[]},{"id":"d6ab12c2.6dc92","type":"switch","z":"1bc13036.e3b82","name":"","property":"payload_table","propertyType":"msg","rules":[{"t":"eq","v":"add_detail","vt":"str"},{"t":"eq","v":"delete_detail","vt":"str"},{"t":"eq","v":"update_task","vt":"str"},{"t":"eq","v":"update_user","vt":"str"},{"t":"eq","v":"update_short_detail","vt":"str"},{"t":"eq","v":"add_detail_to_task","vt":"str"},{"t":"eq","v":"add_assistant_to_groups","vt":"str"},{"t":"eq","v":"add_assistant_into_group","vt":"str"},{"t":"eq","v":"update_message_schedule","vt":"str"},{"t":"eq","v":"delete_schedule_message","vt":"str"},{"t":"eq","v":"update_counts","vt":"str"},{"t":"else"}],"checkall":"true","outputs":12,"x":815.0001831054688,"y":940.0001220703125,"wires":[["5a40e3c0.6a7c7c"],["7a1fa12a.ae0fc"],["af77daa4.7a3808"],["1ea39368.4d2cbd"],["910f835e.b1997"],["8047b1c2.00b14"],["2c021dd8.471292"],["6ba779a9.034fd8"],["c824032e.2a235"],["ff7f2320.a0c9c"],["c3156f83.76fc2"],["9e907e9.bafc48"]]},{"id":"5a40e3c0.6a7c7c","type":"function","z":"1bc13036.e3b82","name":"Create Detail","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1281.9999961853027,"y":51.000041007995605,"wires":[["8340ddf2.852ea"]]},{"id":"9e907e9.bafc48","type":"function","z":"1bc13036.e3b82","name":"UnExpacted Case","func":"msg.payload = {status: 400, error: true, msg: \"`table` field value is unexpacted.\", data: null};\nreturn msg;","outputs":1,"noerr":0,"x":1324.0003509521484,"y":1690.0009388923645,"wires":[["4925e8a7.371308"]]},{"id":"4925e8a7.371308","type":"http response","z":"1bc13036.e3b82","name":"","x":1517.0005340576172,"y":1690.0008578300476,"wires":[]},{"id":"fc1044e8.8cfd28","type":"function","z":"1bc13036.e3b82","name":"detail_calculation","func":"var big_record_tables   = {} , \n    detail              = {},\n    templates_arr       = msg.templates_arr ,\n    child_task          = isEmpty(msg.child_task_obj) ? null : msg.child_task_obj,\n    timeout             = isEmpty(msg.timeout_obj) ? null : msg.timeout_obj ,\n    location            = isEmpty(msg.location_obj) ? null : msg.location_obj,\n    user                = isEmpty(msg.user_obj) ? null : msg.user_obj,\n    task                = isEmpty(msg.task_obj) ? null : msg.task_obj,\n    user_arr            = msg.users_arr ,\n    form_data           = msg.form_data ,\n    details_arr         = [];\n    msg.doCreate_optional_detail = false ;\n \n     \n    //sort the detail_arr as by created at\n    details_arr =  msg.details_arr.sort(function(a,b){\n        details_arr = details_arr.sort(function(a,b){\n        \treturn (a.createdAt - b.createdAt);\t\n        });\n    });\n    \nbig_record_tables.user  = user ;\nbig_record_tables.task  = task ;\n\n//setting up some obj from big_record_tables\nbig_record_tables.task.details = {\n    timeout : create_timeout_list_obj(timeout, templates_arr, user_arr, \"timeout\") ,\n    user_calculated: create_timeout_list_obj(timeout, templates_arr, user_arr, \"user_calculated\"),\n    location : get_location_obj(location) \n} ;\n\n\n//create detail obj to save into master_table;\ndetail.table                            = \"details\";\ndetail.task_id                          = task.page_id ? [task.page_id] : null ;\ndetail.intent_task_id                   = task._id ;\ndetail.child_task_id                    = task.child_default_task_id || null;\ndetail.user_id                          = user._id || null;\ndetail.from_user_id                     = set_from_user(form_data.from_user_id) ;\n\ndetail.page_id                          = check_number(form_data.page_id) || generate_page_id();\ndetail.from_page_id                     = check_number(form_data.from_page_id) || generate_page_id();\ndetail.to_page_id                       = task.child_default_task_id ? return_page_id(form_data.page_id) : 0;\n\ndetail.synchronized                     = 0 ;\ndetail.processed                        = 0 ;\ndetail.status                           = 0 ;\ndetail.read                             = 0 ;\ndetail.display_if_empty                 = task.display_if_empty || 1;\ndetail.date_created                     = new Date().toJSON() ;\ndetail.due_date                         = big_record_tables.task.details.user_calculated.delivery_due;\ndetail.offline_expiration_seconds       = task.offline_expiration_time ;\ndetail.priority                         = 1;\ndetail.type                             = {\"private\": \"private\"};\ndetail.image                            = task.image ;\ndetail.from_user                        = {\n                                            firstname   : user.firstname || \"\" ,\n                                            lastname    : user.lastname || \"\" ,\n                                            email       : user.email || \"\",\n                                            phone       : user.phone || \"\"\n                                        };\ndetail.user_incoming                    = {\n                                            note    :   form_data.note ,\n                                            message :   form_data.note\n                                        } ;\n\n//as per discussion with client on 11th August evening and on Google doc(DoMeNow) Item 8.0 there is no need of \n//detail.watson_incoming messages. so just commneted here may be nedded in future.\n// detail.watson_incoming                  = { \n//                                             message :   \"Watson response to : \" + form_data.note,\n//                                             response : {},\n                                            \n//                                         } ;\ndetail.template                         = {\n                                            details : get_template(task.detail_template_id, templates_arr)\n                                        };\n\ndetail.timeout                          = big_record_tables.task.details.timeout ;\ndetail.user_calculate                   = big_record_tables.task.details.user_calculated ;\ndetail.location                         = big_record_tables.task.details.location ;\ndetail.default                          = {\n                                            parent : null,\n                                            allchildren: null\n                                        };\ndetail.count_status\t                    = {\n                                            active : 1,\n                                            unread : 0\n                                        };\ndetail.count\t                        = {\n                                            active : 1,\n                                            unread : 1\n                                        };\ndetail.count_if                         = {\n                                            active : 1,\n                                            unread : 0\n                                        };\ndetail.createdAt                        = Number(new Date().getTime()) ;\n\nmsg.template_arr = templates_arr ;\nmsg.payload      = detail ;\n\nif(check_need_to_create_second_detail(form_data.from_user_id)){\n    var second_detail  = JSON.parse(JSON.stringify(detail));\n        second_detail.from_user_id  = form_data.from_user_id[1];\n        second_detail.user_incoming = {\n            note    :   form_data.to_note ,\n            message :   form_data.to_note\n        } ;\n\n        second_detail.watson_incoming = {\n            message :   \"Watson response to : \" + form_data.to_note,\n            response : {},\n        } ;\n        msg.doCreate_optional_detail = true;\n        msg.option_detail = second_detail;\n}\n\nmsg.api_response = {status:200, error: false, msg: \"Record created successfully\", data: detail};\nreturn msg;\n\nfunction create_timeout_list_obj(timeout_obj, templates, users, type){\n    if(timeout_obj === undefined || timeout_obj === null){\n        return {};\n    }\n    \n    switch(type){\n        case \"timeout\" : {\n            if(check_obj(timeout_obj.timeout_list) > 1){\n                var update_obj = JSON.parse(JSON.stringify(timeout_obj)) ;\n                \n                for(var list in timeout_obj.timeout_list){\n                    if(list !== getAttributeByIndex(timeout_obj.timeout_list, 0)){\n                        update_obj.timeout_list[list].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[list].delivery_user_ids, users);\n                        update_obj.timeout_list[list].message = timeout_obj.timeout_list[list].message_id ? get_template(timeout_obj.timeout_list[list].message_id, templates) : null;\n                        update_obj.timeout_list[list].from = timeout_obj.timeout_list[list].from_id ? get_template(timeout_obj.timeout_list[list].from_id, templates) : null;\n                    }\n                }\n                delete update_obj.timeout_list[getAttributeByIndex(timeout_obj.timeout_list, 0)];\n                return update_obj ;   \n            }else{\n                return {} ;\n            }\n            break;\n        }\n        \n        case \"user_calculated\" : {\n\n            if(timeout_obj.timeout_list){\n                for(var key in timeout_obj.timeout_list){\n                    if(key == getAttributeByIndex(timeout_obj.timeout_list, 0)){\n                        timeout_obj.timeout_list[key].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[key].delivery_user_ids, users);\n                        timeout_obj.timeout_list[key].template = {\n                            message : timeout_obj.timeout_list[key].message_id ? get_template(timeout_obj.timeout_list[key].message_id, templates) : null ,\n                            from    : timeout_obj.timeout_list[key].from_id ? get_template(timeout_obj.timeout_list[key].from_id, templates) : null\n                        };\n                    }\n                }\n\n                return timeout_obj.timeout_list[getAttributeByIndex(timeout_obj.timeout_list, 0)] ; \n            }else{\n                return {} ; \n            }\n            break;\n        }\n        \n        default: {\n            return {};\n        }\n    }\n}\n\nfunction check_obj(obj){\n    if(typeof obj === \"object\"){\n        return Object.keys(obj).length;\n    }else{\n        return 0 ;\n    }\n}\n\nfunction get_location_obj(locations){\n    if(locations === undefined || locations === null){\n        return {};\n    }\n    var obj = {};\n\n    if(locations !== null && locations !== undefined){\n        for(var i=0; i< locations.length; i++){\n            if(locations[i]){\n                obj[locations[i]._id] = locations[i] ;\n            }\n        }\n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction get_template(id, template){\n    if(template === undefined || template === null){\n        return {};\n    }\n    \n    var obj = {} ;\n    if(template !== null){\n        for(var i=0; i< template.length; i++){\n            if(id === template[i]._id){\n                obj = template[i] ;\n            }\n        }    \n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction check_number(n){\n    if(typeof n === \"string\" && n !== \"\"){\n        return parseInt(n);\n    }else{\n        return n ;\n    }\n}\n\nfunction generate_page_id(){\n    return new Date().getTime();\n}\n\nfunction getAttributeByIndex(obj, index){\n  var i = 0;\n  for (var attr in obj){\n    if (index === i){\n      return attr;\n    }\n    i++;\n  }\n  return null;\n}\n\nfunction get_obj_from_array(id, arr){\n    if(arr === null || arr === undefined){\n        return {};\n    }\n\n    if(id instanceof Object){\n        return id ;    \n    }\n\n    var obj = {} ;\n    if(arr !== null && arr.length){\n        for(var i=0; i< arr.length; i++){\n            if(arr[i]._id === id){\n                obj[arr[i]._id] = arr[i] ;\n            }\n        }\n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction calculate_to_page_id(task_obj, details_arr){\n\n    var page_id = false ;\n    if(task_obj !== null && details_arr !== undefined){\n        var task_id = task_obj._id ;\n        if(details_arr.length){\n            for(var i=0; i < details_arr.length; i++){\n                if(details_arr[i].task_id === task_id){\n                  page_id = details_arr[i].to_page_id ;\n                }\n            }\n            if(!page_id){\n              return generate_page_id(6);\n            }else{\n              return page_id;\n            }\n        }else{\n            page_id = task_obj.page_id ;\n        }\n    }else{\n        return generate_page_id(6);\n    }\n}\n\n\nfunction return_page_id(page_id){\n    return generate_page_id() ;\n}\n\nfunction set_from_user(item){\n    if(Object.prototype.toString.call(item) === \"[object Array]\"){\n        return item[0] ;\n    }else{\n        return item || null;\n    }\n}\n\nfunction check_need_to_create_second_detail(item){\n    if(Object.prototype.toString.call(item) === \"[object Array]\"){\n        return true ;\n    }else{\n        return false ;\n    }\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}\n","outputs":1,"noerr":0,"x":2599.0006408691406,"y":126.62107467651367,"wires":[["27237117.a1f3ce","72b3a1c3.d8c1","3a83b028.174ce","d4893bd6.73baf8","b9ef6f80.eb9b1","aa6e064d.f28708"]]},{"id":"27237117.a1f3ce","type":"switch","z":"1bc13036.e3b82","name":"optional task","property":"child_task_id","propertyType":"msg","rules":[{"t":"null"},{"t":"else"}],"checkall":"true","outputs":2,"x":2832.0001678466797,"y":275.6211438179016,"wires":[["76034db8.945264"],["fb3e5d3b.f550e"]]},{"id":"76034db8.945264","type":"function","z":"1bc13036.e3b82","name":"log","func":"node.warn(\"No need to create optional task\");\nmsg.detail = msg.payload ;\nmsg.isCreateOptionalTask = false ;\nreturn msg;","outputs":1,"noerr":0,"x":3029.000175476074,"y":255.62113344669342,"wires":[["aa1ef719.92f148"]]},{"id":"fb3e5d3b.f550e","type":"function","z":"1bc13036.e3b82","name":"optional task","func":"var default_task        = msg.child_task ? msg.child_task[0] : null ,\n    detail              = msg.payload ,\n    user_obj            = msg.user_obj ? msg.user_obj[0]: {} ,\n    optional_task       = {}; \n    \nif(!isEmpty(default_task)){\n    optional_task = {\n        table                   : \"task_table\",\n        task_name               : detail.user_incoming.message, \n        user_id                 : user_obj._id || detail.user_id,\n        page_id                 : detail.to_page_id, \n        from_page_id            : detail.page_id,\n        parent_id               : detail.page_id, \n        header_template_id      : default_task.header_template_id || null,\n        detail_template_id      : default_task.detail_template_id || null,\n        footer_template_id      : default_task.footer_template_id || null,\n        timeout_id              : default_task.timeout_id || null,\n        location_id             : default_task.location_id || null,\n        child_default_task_id   : default_task.child_default_task_id || null,\n        child_default_task_name : default_task.child_default_task_name || null,\n        date_created            : new Date().toJSON(),\n        type                    : default_task.type || \"private\",\n        status                  : default_task.status || 0,\n        category                : default_task.category || null,\n        additional_data_fn      : default_task.additional_data_fn || null,\n        optional_data           : default_task.optional_data || {},\n        required_data           : default_task.required_data || {},\n        offline_expiration_time : default_task.offline_expiration_time || 0,\n        display_if_empty        : default_task.display_if_empty || 1 ,\n        count_status : {\n            active : 1,\n            unread : 0,\n        },\n        count : {\n            active : 1,\n            unread : 0,\n        },\n        count_if : {\n            active : 1,\n            unread : 0,\n        }\n    };\n    msg.isCreateOptionalTask = true ;\n    msg.detail = detail ;\n    msg.payload = optional_task ;\n}else{\n    msg.isCreateOptionalTask = false ;\n    msg.detail = detail ;\n    msg.payload = \"No need to create optional task\";\n}\n\nnode.warn(\"Before going to init loop method\");\nnode.warn(msg);\nreturn msg;\n\nfunction isEmpty(obj){\n    if(obj instanceof Object){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(obj instanceof Array){\n        if(obj.length){\n            return false ;\n        }else {\n            return true ;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":3050.000175476074,"y":297.6211334466934,"wires":[["aa1ef719.92f148"]]},{"id":"aa1ef719.92f148","type":"switch","z":"1bc13036.e3b82","name":"","property":"isCreateOptionalTask","propertyType":"msg","rules":[{"t":"true"},{"t":"else"}],"checkall":"true","outputs":2,"x":3254.000762939453,"y":256.6211395263672,"wires":[["f667d3d1.e4d44","4aaf74bf.3f4cac","79a95d3b.fee184"],["f667d3d1.e4d44"]]},{"id":"f667d3d1.e4d44","type":"function","z":"1bc13036.e3b82","name":"init loop","func":"var detail_obj = msg.detail ;\nif(isEmpty(detail_obj.timeout)){\n    msg.timeoutLength = 0;\n}else{\n    msg.timeoutLength = check_obj(detail_obj.timeout.timeout_list) ;    \n}\nmsg.count = 0;\nreturn msg;\n\n\nfunction check_obj(obj){\n    if(obj !== undefined && obj !== null && obj !== \"\"){\n        return Object.keys(obj).length ;\n    }else{\n        return 0;\n    }\n}\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":3446.000778198242,"y":300.62116146087646,"wires":[["183d69a0.d38bf6"]]},{"id":"183d69a0.d38bf6","type":"switch","z":"1bc13036.e3b82","name":"counter","property":"count","propertyType":"msg","rules":[{"t":"lt","v":"timeoutLength","vt":"msg"},{"t":"else"}],"checkall":"true","outputs":2,"x":3722.1968307495117,"y":294.62118434906006,"wires":[["65c98f5a.2f37d"],["36a38d76.bf4c62"]]},{"id":"7894a745.f32498","type":"function","z":"1bc13036.e3b82","name":"count++","func":"msg.count++ ;\nreturn msg;","outputs":1,"noerr":0,"x":3825.1970748901367,"y":189.62118339538574,"wires":[["183d69a0.d38bf6"]]},{"id":"65c98f5a.2f37d","type":"function","z":"1bc13036.e3b82","name":"Timeout Processor","func":"var detail_obj      = msg.payload ,\n    template_arr    = msg.templates,\n    users_arr       = msg.user_arr;\n\nif(compare_dates(detail_obj.due_date)){\n    msg.payload = create_detail_by_timeout_processor();\n}else{\n    msg.payload = null;\n    msg.apiStatus = {status: 400, msg: \"Due date already passout so cann't be processed details\"};\n}\n\nreturn msg;\n\nfunction compare_dates(due_date){\n    var current_unix_date   = new Date().getTime(),\n        due_unix_date       = new Date(due_date).getTime();\n        \n    if(due_unix_date > current_unix_date){\n        return true ;\n    }else{\n        return false ;\n    }\n}\n\nfunction create_detail_by_timeout_processor(){\n    var detail = JSON.parse(JSON.stringify(detail_obj));  \n    \n    if(detail.timeout !== null){\n        if(check_obj(detail.timeout.timeout_list) > 0){\n            var clone_obj = {\n                table                       : \"details\",\n                task_id                     : detail_obj.task_id ,\n                child_task_id               : detail_obj.child_task_id,\n                user_id                     : detail_obj.user_id,\n                page_id                     : detail_obj.page_id,\n                synchronized                : detail_obj.synchronized,\n                processed                   : detail_obj.processed,\n                status                      : detail_obj.status,\n                read                        : detail_obj.read,\n                display_if_empty            : detail_obj.display_if_empty,\n                date_created                : detail_obj.date_created,\n                due_date                    : detail_obj.due_date,\n                offline_expiration_seconds  : detail_obj.offline_expiration_seconds,\n                priority                    : detail_obj.priority,\n                user_incoming               : detail_obj.user_incoming ,\n                watson_incoming             : detail_obj.watson_incoming,\n                template                    : detail_obj.template,\n                timeout                     : create_timeout_list_obj(detail.timeout, template_arr, users_arr, \"timeout\") ,\n                user_calculated             : create_timeout_list_obj(detail_obj.timeout, template_arr, users_arr, \"user_calculated\"),\n                location                    : detail_obj.location,\n                default                     : detail_obj.default,\n                createdAt                   : detail_obj.createdAt,\n                count                       : detail_obj.count\n            };\n   \n            return clone_obj ;\n        }else{\n            return {} ;\n        }   \n    }else{\n        return {};\n    }\n}\n\nfunction create_timeout_list_obj(timeout_obj, templates, users, type){\n    switch(type){\n        case \"timeout\" : {\n            if(check_obj(timeout_obj.timeout_list) > 1){\n                \n                for(var list in timeout_obj.timeout_list){\n                    if(parseInt(list) !== getAttributeByIndex(timeout_obj.timeout_list, 0)){\n                        timeout_obj.timeout_list[list].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[list].delivery_user_ids, users);\n                        timeout_obj.timeout_list[list].message = timeout_obj.timeout_list[list].message_id ? get_template(timeout_obj.timeout_list[list].message_id, templates) : null;\n                        timeout_obj.timeout_list[list].from = timeout_obj.timeout_list[list].from_id ? get_template(timeout_obj.timeout_list[list].from_id, templates) : null;\n                    }\n                }\n                \n                delete timeout_obj.timeout_list[getAttributeByIndex(timeout_obj.timeout_list, 0)];\n                return timeout_obj ;   \n            }else{\n                return {} ;\n            }\n            break;\n        }\n        \n        case \"user_calculated\" : {\n            if(timeout_obj.timeout_list){\n                for(var key in timeout_obj.timeout_list){\n                    if(parseInt(key) == getAttributeByIndex(timeout_obj.timeout_list, 0)){\n                        timeout_obj.timeout_list[key].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[key].delivery_user_ids, users);\n                        timeout_obj.timeout_list[key].template = {\n                            message : timeout_obj.timeout_list[key].message_id ? get_template(timeout_obj.timeout_list[key].message_id, templates) : null ,\n                            from    : timeout_obj.timeout_list[key].from_id ? get_template(timeout_obj.timeout_list[key].from_id, templates) : null\n                        };\n                    }\n                }\n\n                return timeout_obj.timeout_list[getAttributeByIndex(timeout_obj.timeout_list, 0)] ; \n            }else{\n                return {} ; \n            }\n            break;\n        }\n        \n        default: {\n            return {};\n        }\n    }\n}\n\nfunction check_obj(obj){\n    return Object.keys(obj).length ;\n}\n\nfunction get_template(id, template){\n    var obj = {} ;\n    if(template !== null){\n        for(var i=0; i< template.length; i++){\n            if(id === template[i]._id){\n                obj = template[i] ;\n            }\n        }    \n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction get_obj_from_array(id, arr){\n\n    if(id instanceof Object){\n        return id ;    \n    }\n    \n    var obj = {} ;\n    if(arr !== null && arr.length){\n        for(var i=0; i< arr.length; i++){\n            if(arr[i]._id === id){\n                obj[arr[i]._id] = arr[i] ;\n            }\n        }\n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction getAttributeByIndex(obj, index){\n  var i = 0;\n  for (var attr in obj){\n    if (index === i){\n      return parseInt(attr);\n    }\n    i++;\n  }\n  return null;\n}","outputs":1,"noerr":0,"x":3935.197090148926,"y":289.04706382751465,"wires":[["7894a745.f32498","3216a994.9589e6","277523b2.49c11c"]]},{"id":"36a38d76.bf4c62","type":"function","z":"1bc13036.e3b82","name":"indicator","func":"msg.payload = \"Timeout processor executes sucessfully\";\nreturn msg;","outputs":1,"noerr":0,"x":3865.1971588134766,"y":352.6211853027344,"wires":[["90317658.28beb8","7cad6d6c.a42054"]]},{"id":"799f9f2c.20ce4","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_status","propertyType":"msg","rules":[{"t":"eq","v":"API_ERROR","vt":"str"},{"t":"else"}],"checkall":"true","outputs":2,"x":2429.031234741211,"y":96.0468807220459,"wires":[["236b74f3.1c448c"],["fc1044e8.8cfd28"]]},{"id":"90317658.28beb8","type":"debug","z":"1bc13036.e3b82","name":"Timeout processor","active":true,"console":"false","complete":"payload","x":4072.196762084961,"y":335.04700660705566,"wires":[]},{"id":"2e78e0d1.6e91c","type":"function","z":"1bc13036.e3b82","name":"validate","func":"var payload         = msg.payload ,\n    task            = msg.task_obj , \n    user            = msg.user_obj, \n    task_id         = msg.task_id; \n    access_token    = msg.access_token;\n    page_id         = msg.page_id;\n    detail          = msg.details_obj;\n\nif(isEmpty(payload.rows)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"Unable to populate records from cloudant views\", data: null};\n}else{\n    var db_records  = populate_records(payload.rows),\n        task_obj    = populate_obj(db_records.tasks, task_id),\n        user        = populate_user(db_records.users, access_token);\n    \n    if(isEmpty(task_obj)){\n        msg.api_status = \"API_ERROR\";\n        msg.payload = {status: 400, error: true, msg: \"Unable to find `task obj` with `task_id`\", data: null};\n    }else if(isEmpty(user)){\n        msg.api_status = \"API_ERROR\";\n        msg.payload = {status: 400, error: true, msg: \"Unable to find `user obj` with `access_token`\", data: null};\n    }else{\n        msg.api_status      = \"API_SUCCESS\";\n        msg.user_obj        = user ;\n        msg.task_obj        = task_obj ;\n        msg.templates_arr   = db_records.templates;\n        msg.details_arr     = db_records.details;\n        msg.users_arr       = db_records.users ;\n        msg.child_task_obj  = task_obj.child_default_task_id ? populate_obj(db_records.tasks, task_obj.child_default_task_id) : null ;\n        msg.timeout_obj     = task_obj.timeout_id ? populate_obj(db_records.timeouts, task_obj.timeout_id) : null;\n        msg.location_obj    = task_obj.location_id ? populate_obj(db_records.locations, task_obj.location_id): null;\n    }\n}\n\nreturn msg;\n\nfunction populate_records(list){\n    var task_arr = [], detail_arr = [], user_arr = [], templates_arr = [], location_arr = [], timeout_arr = [];\n    \n    for(var itr in list){\n        var records = list[itr].value;\n        if(records.table == \"task_table\"){\n            task_arr.push(records);\n        }\n        \n        if(records.table == \"details\"){\n            detail_arr.push(records);\n        }\n        \n        if(records.table == \"users\"){\n            user_arr.push(records);\n        }\n        \n        if(records.table == \"templates\"){\n            templates_arr.push(records);\n        }\n        \n        if(records.table == \"location\"){\n            location_arr.push(records);\n        }\n        \n        if(records.table == \"timeout\"){\n            timeout_arr.push(records);\n        }\n    }\n    var obj = {tasks: task_arr, details: detail_arr, users: user_arr, templates: templates_arr, locations: location_arr, timeouts: timeout_arr};\n    return obj;\n}\n\nfunction populate_obj(list, id){\n    var obj = {};\n    if(isEmpty(list)) return obj;\n    if(isEmpty(id)) return obj;\n    \n    for(var itr in list){\n        if(id == list[itr]._id){\n            obj = list[itr];\n        }\n    }\n    \n    return obj;\n}\n\nfunction populate_user(users, access_token){\n    var obj = {};\n    if(isEmpty(users)) return obj;\n    if(isEmpty(access_token)) return obj;\n    \n    for(var itr in users){\n        if(access_token == users[itr].access_token){\n            obj = users[itr];\n        }\n    }\n    \n    return obj;\n}\n    \nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":2301.0312271118164,"y":132.04687309265137,"wires":[["799f9f2c.20ce4"]]},{"id":"236b74f3.1c448c","type":"http response","z":"1bc13036.e3b82","name":"","x":2562.0312423706055,"y":66.04689884185791,"wires":[]},{"id":"8340ddf2.852ea","type":"function","z":"1bc13036.e3b82","name":"validate","func":"var access_token = msg.req_body.access_token ;\nvar table_data = msg.req_body.table_data ;\n\nif(table_data === null || table_data === undefined){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide valid json object as api request body.\"};\n    return msg;\n}else if(access_token === null || access_token === undefined || access_token === \"\"){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `access_token` in api request body\"};\n    return msg;\n}else if(table_data.note === null || table_data.note === undefined || table_data.note === \"\"){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `note` in api request body\"};\n    return msg;\n}else if(table_data.page_id === null || table_data.page_id === undefined || table_data.page_id === \"\"){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `page_id` in api request body\"};\n    return msg;\n}else if(table_data.from_page_id === null || table_data.from_page_id === undefined ){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `from_page_id` in api request body\"};\n    return msg;\n}else if(table_data.task_id === null || table_data.task_id === undefined ){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `task_id` in api request body\"};\n    return msg;\n}else{\n    msg.flow_status = \"API_SUCCESS\";\n    msg.form_data    = table_data ;\n    msg.task_id = table_data.task_id ; \n    msg.access_token = access_token ;\n    msg.page_id = table_data.page_id  ;\n    return msg;\n}\n\n\nfunction check_number(n){\n    if(!isNaN(parseInt(n))){\n        return parseInt(n);\n    }else{\n        return n ;\n    }\n}\n","outputs":1,"noerr":0,"x":1522.031265258789,"y":50.04690933227539,"wires":[["855a021b.8aaaa"]]},{"id":"34f7000c.78479","type":"function","z":"1bc13036.e3b82","name":"update_create_user_task","func":"var detail_obj          = msg.detail ,\n    ancesstor_arr       = [] ,\n    user_task_arr       = msg.payload ,\n    task_obj            = msg.task_obj[0] ;\n    calculate_user_task = get_user_taskBy_id(detail_obj.user_id, detail_obj.task_id);\n    \nif(check_obj(calculate_user_task) > 0){\n    msg.payload = update_user_task(msg.payload[0], detail_obj.user_id, detail_obj.task_id, 0, 1);\n}else{\n    if(task_obj.parent_id){\n        var user_task = get_user_taskBy_id(detail_obj.user_id, task_obj.parent_id);\n        \n        if(check_obj(user_task) > 0){\n            ancesstor_arr = user_task.ancestors ;   \n            ancesstor_arr.push(task_obj.parent_id);\n        }else{\n            ancesstor_arr.push(task_obj.parent_id);\n        }\n    }\n    \n    msg.payload = {\n        table           : \"user_task\",\n    \ttask_id \t\t: detail_obj.task_id,\n    \tuser_id\t\t\t: detail_obj.user_id,\n    \tpage_id         : parseInt(detail_obj.page_id),\n    \tupdate_read     : 0,\n    \tupdate_active   : 0, \n    \tsynchronized    : 0,\n        status          : 0, \n    \tdate_updated\t: null,\t\n    \tparent_id\t\t: detail_obj.task_id,\n    \tancestors       : ancesstor_arr,\n    \tcount_status\t: {\n    \t   active       : 1,\n    \t   unread       : 1,\n    \t},\n    \tcount\t\t\t: {\n    \t    active      : 1,\n    \t    unread      : 1,\n    \t},\n    \tcount_if\t\t: {\n    \t    active      : 1,\n    \t    unread      : 1\n    \t},\n    \ttemplates\t\t: {},\n    \ttimeout\t\t\t: {},\n    \tcreatedAt       : new Date().getTime()\n    };\n}\nreturn msg;\n\nfunction update_user_task(user_task, user_id, task_id, status, synchronized){\n\n    user_task.synchronized          = synchronized  ;\n    user_task.date_updated          = new Date().toJSON();\n    user_task.templates             = detail_obj.template ;\n    user_task.timeout               = detail_obj.timeout ;\n    user_task.count_status.unread   = detail_obj.read ;\n    user_task.page_id               = parseInt(detail_obj.to_page_id) ;\n    user_task.status                = detail_obj.status || status;\n\n    if(!user_task.update_read){\n        if( ( user_task.count_status.unread === 1 || user_task.count_status.unread === \"1\") && !user_task.count_if.unread ){\n            user_task.count.unread += 1 ;  \n        }\n    }\n\n    if(!user_task.update_active){\n        if( user_task.count_status.active && user_task.count_if.active){\n            user_task.count.active += 1 ;  \n        }\n    }\n    \n    //if(user_task.parent_id) update_user_task(user_task, user_id, user_task.parent_id, 0, 1);\n    \n    user_task.update_read   = 1 ;\n    user_task.update_active = 1 ;\n    \n    return user_task;\n}\n\nfunction get_user_taskBy_id(user_id, task_id){\n    var obj = {};\n    if(user_task_arr){\n        for(var i=0; i< user_task_arr.length; i++){\n            if(\n                user_task_arr[i].user_id        == user_id &&\n                user_task_arr[i].task_id        == task_id \n            ){\n                obj = user_task_arr[i];\n            }\n        }\n    }\n    return obj ;\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}\n\n\nfunction check_obj(obj){\n    return Object.keys(obj).length;\n}","outputs":1,"noerr":0,"x":4442.198181152344,"y":384.04706478118896,"wires":[["b85632f.f6942d","60ebc840.c4c168"]]},{"id":"7cad6d6c.a42054","type":"function","z":"1bc13036.e3b82","name":"payload","func":"var task_id = msg.detail.task_id ,\n    user_id = msg.detail.user_id ;\n    \nmsg.payload = {\n    query: \"table:user_page AND user_id:\" + user_id ,\n    sort : \"_id<string>\"\n};\n\nnode.warn(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":4039.1967544555664,"y":389.0470190048218,"wires":[["f49286a3.60bd48"]]},{"id":"f49286a3.60bd48","type":"cloudant in","z":"1bc13036.e3b82","name":"master_table","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","search":"_idx_","design":"filterBy","index":"filterBy","x":4212.198379516602,"y":388.0470218658447,"wires":[["34f7000c.78479"]]},{"id":"855a021b.8aaaa","type":"switch","z":"1bc13036.e3b82","name":"","property":"flow_status","propertyType":"msg","rules":[{"t":"eq","v":"API_ERROR","vt":"str"},{"t":"else"}],"checkall":"true","outputs":2,"x":1799.0000228881836,"y":127.0000228881836,"wires":[["ebd20539.3bd978"],["c8e697b5.8cbfb8"]]},{"id":"ebd20539.3bd978","type":"http response","z":"1bc13036.e3b82","name":"","x":1975,"y":101.0000114440918,"wires":[]},{"id":"b85632f.f6942d","type":"cloudant out","z":"1bc13036.e3b82","name":"User Task","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","payonly":true,"operation":"insert","x":4669.000930786133,"y":346.0002098083496,"wires":[]},{"id":"7936c18d.ddbd1","type":"cloudant out","z":"1bc13036.e3b82","name":"Details","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","payonly":true,"operation":"insert","x":4307.165946960449,"y":195.00018692016602,"wires":[]},{"id":"4aaf74bf.3f4cac","type":"cloudant out","z":"1bc13036.e3b82","name":"Optional Task","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","payonly":true,"operation":"insert","x":3458.9696044921875,"y":188.57428121566772,"wires":[]},{"id":"72b3a1c3.d8c1","type":"cloudant out","z":"1bc13036.e3b82","name":"Details","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","payonly":true,"operation":"insert","x":2800.9694862365723,"y":101.00000381469727,"wires":[]},{"id":"3a83b028.174ce","type":"change","z":"1bc13036.e3b82","name":"API_RESPONSE","rules":[{"t":"move","p":"api_response","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":2848.9691619873047,"y":40.00001037120819,"wires":[["d099693.f745198"]]},{"id":"d099693.f745198","type":"http response","z":"1bc13036.e3b82","name":"","x":3025.969169616699,"y":20,"wires":[]},{"id":"96c3c68.c7d7338","type":"http response","z":"1bc13036.e3b82","name":"","x":2269.016086578369,"y":353.00010681152344,"wires":[]},{"id":"af77daa4.7a3808","type":"function","z":"1bc13036.e3b82","name":"update_task","func":"var access_token = msg.access_token ;\n    \n    if(isEmpty(access_token)){\n        msg.api_status = \"API_ERROR\";\n        msg.payload = {status: 400, error: true, msg: \"`access_token` is missing.\", data: null};\n    }else{\n        msg.api_status = \"API_SUCCESS\";\n        msg.payload = {\n            query : \"table:users AND access_token:\" + access_token ,\n            sort  : \"_id<string>\"\n        };\n    }\n    \nreturn msg;\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1289.0156211853027,"y":332.0000648498535,"wires":[["71cf9c70.c94964"]]},{"id":"e46a487a.d682b8","type":"cloudant out","z":"1bc13036.e3b82","name":"Update record","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","payonly":true,"operation":"insert","x":2136.0160789489746,"y":311.0001850128174,"wires":[]},{"id":"3ed49608.46eeba","type":"change","z":"1bc13036.e3b82","name":"api result","rules":[{"t":"move","p":"api_result","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":2122.0162391662598,"y":355.0001029968262,"wires":[["96c3c68.c7d7338"]]},{"id":"1ea39368.4d2cbd","type":"function","z":"1bc13036.e3b82","name":"update_user","func":"var req_body        = msg.payload_data ,\n    access_token    = msg.access_token ;\n\nif(isEmpty(access_token)){\n    msg.statusCode = 400 ;\n    msg.api_status = \"API_ERROR\" ;\n    msg.payload = {status: 400, error: true, msg: \"`access_token` is missing\", data: []};\n    return msg;\n    \n}else{\n    msg.api_status = \"API_SUCESS\" ;\n    msg.payload = {\n        query : \"table:\"+ req_body.table +\"AND access_token:\"+ access_token +\" AND _id:\" + req_body._id ,\n        sort  : \"_id<string>\"\n    };\n    msg.req_body = req_body;\n    return msg;\n}\n\n\nfunction isEmpty(obj){\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1288.265625,"y":419.25002098083496,"wires":[["1c62297c.51d5f7"]]},{"id":"1c62297c.51d5f7","type":"switch","z":"1bc13036.e3b82","name":"split","property":"API_STATUS","propertyType":"msg","rules":[{"t":"eq","v":"SUCESS","vt":"str"},{"t":"else"}],"checkall":"true","outputs":2,"x":1436.2656288146973,"y":419.250057220459,"wires":[["d5520305.66f6a"],["580ba2f4.08d5ec"]]},{"id":"910f835e.b1997","type":"function","z":"1bc13036.e3b82","name":"update_short_detail","func":"var body            = msg.payload_data ,\n    access_token    = msg.access_token ;\n    \nif(isEmpty(access_token)){\n    msg.statusCode = 400 ;\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`access_token` is required to update detail\", data: body};\n}else if(isEmpty(body.detail_id)){\n    msg.statusCode = 400 ;\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`detail_id` is required to update detail\", data: body};\n}else if(isEmpty(body.page_id)){\n    msg.statusCode = 400 ;\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`page_id` is required to update task detail\", data: body};\n}else{\n    msg.api_status = \"API_SUCCESS\";\n    msg.payload_content = {\n        access_token : access_token,\n        content: body\n    };\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1321.1408081054688,"y":529.5001735687256,"wires":[["3f0f1c5b.139264"]]},{"id":"580ba2f4.08d5ec","type":"cloudant in","z":"1bc13036.e3b82","name":"User","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","search":"_idx_","design":"filterBy","index":"filterBy","x":1591.7656860351562,"y":447.25002098083496,"wires":[["7098655a.6d389c"]]},{"id":"7098655a.6d389c","type":"function","z":"1bc13036.e3b82","name":"payload","func":"var req_body = msg.req_body;\n    user_obj = msg.payload[0] ;\n\nif(isEmpty(user_obj)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"Unable to find user with `access_token` and `user_id`.\", data: req_body};    \n}else{\n    user_obj.firstname  = req_body.firstname ;\n    user_obj.lastname   = req_body.lastname  ;\n    user_obj.email      = req_body.email     ;\n    user_obj.phone      = req_body.phone     ;\n    //user_obj.image      = req_body.image     ;\n    user_obj.timezone   = req_body.timezone  ;\n    \n    msg.api_status = \"API_SUCCESS\";\n    msg.payload = user_obj ;\n    \n    msg.api_result = {status: 200, error: false, msg: \"Record udpated successfully\", data: msg.payload};    \n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1732.7658920288086,"y":448.2500591278076,"wires":[["ab068161.d3be6"]]},{"id":"db602985.e84178","type":"cloudant out","z":"1bc13036.e3b82","name":"","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","payonly":true,"operation":"insert","x":2135.766399383545,"y":464.25014209747314,"wires":[]},{"id":"464e533f.20e15c","type":"change","z":"1bc13036.e3b82","name":"api result","rules":[{"t":"move","p":"api_result","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":2127.7666066487627,"y":516.2501293818156,"wires":[["92ee4dcb.6a568","a8a5a4a.1688658"]]},{"id":"92ee4dcb.6a568","type":"http response","z":"1bc13036.e3b82","name":"","x":2288.767063140869,"y":482.25018310546875,"wires":[]},{"id":"d5520305.66f6a","type":"http response","z":"1bc13036.e3b82","name":"","x":1590.6289672851562,"y":403.41017723083496,"wires":[]},{"id":"ab068161.d3be6","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_status","propertyType":"msg","rules":[{"t":"else"},{"t":"eq","v":"API_SUCCESS","vt":"str"}],"checkall":"true","outputs":2,"x":1897.5007629394531,"y":443.6668472290039,"wires":[["97975b91.8cf308"],["db602985.e84178","464e533f.20e15c"]]},{"id":"3f0f1c5b.139264","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_status","propertyType":"msg","rules":[{"t":"else"},{"t":"eq","v":"API_SUCCESS","vt":"str"}],"checkall":"true","outputs":2,"x":1490.8335571289062,"y":529.3335475921631,"wires":[["3686ccd8.9cc104"],["64cc674e.592e58"]]},{"id":"c10eb2f7.4f475","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_status","propertyType":"msg","rules":[{"t":"eq","v":"API_SUCCESS","vt":"str"},{"t":"else"}],"checkall":"true","outputs":2,"x":1589.1666221618652,"y":332.66675186157227,"wires":[["c15cd6e0.e7c778"],["175f2640.7b875a"]]},{"id":"175f2640.7b875a","type":"http response","z":"1bc13036.e3b82","name":"","x":1712.9999961853027,"y":373.333438873291,"wires":[]},{"id":"c15cd6e0.e7c778","type":"function","z":"1bc13036.e3b82","name":"payload & verify user","func":"var task_obj = msg.payload_data;\n\nif(isEmpty(msg.payload)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload    = {status: 400, error: true, msg: \"Invalid access_token, Unable to find user with this access_token.\", data: null};\n}else{\n    \n    var user = msg.payload[0];\n    \n    if(user._id === task_obj.user_id){\n        msg.api_status = \"API_SUCCESS\";\n        msg.payload = {\n            _id                         : task_obj._id,\n            _rev                        : task_obj._rev,\n            table                       : task_obj.table, \n            task_name                   : task_obj.task_name,\n            user_id                     : task_obj.user_id,\n            page_id                     : task_obj.page_id,\n            from_page_id                : task_obj.from_page_id,\n            parent_id                   : task_obj.parent_id,\n            header_template_id          : task_obj.header_template_id,\n            detail_template_id          : task_obj.detail_template_id,\n            footer_template_id          : task_obj.footer_template_id,\n            timeout_id                  : task_obj.timeout_id,\n            child_default_task_id       : task_obj.child_default_task_id,\n            child_default_task_name     : task_obj.child_default_task_name,\n            date_created                : task_obj.date_created,\n            type                        : task_obj.type,\n            status                      : task_obj.status,\n            category                    : task_obj.category,\n            additional_data_fn          : task_obj.additional_data_fn,\n            optional_data               : task_obj.optional_data,\n            required_data               : task_obj.required_data,\n            offline_expiration_time     : task_obj.offline_expiration_time,\n            display_if_empty            : task_obj.display_if_empty,\n            image                       : task_obj.image\n        };\n        msg.api_result = {status: 200, error: false, msg: \"Record udpated successfully\", data: msg.payload};\n    }else{\n        msg.api_status = \"API_ERROR\";\n        msg.payload    = {status: 400, error: true, msg: \"You are not authrozied to update this record.\", data: null};\n    }\n}\nreturn msg;\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1763.1666730244956,"y":325.66670862833666,"wires":[["df43328c.e54dc"]]},{"id":"df43328c.e54dc","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_status","propertyType":"msg","rules":[{"t":"eq","v":"API_SUCCESS","vt":"str"},{"t":"else"}],"checkall":"true","outputs":2,"x":1935.8336906433105,"y":325.6667003631592,"wires":[["e46a487a.d682b8","3ed49608.46eeba"],["97975b91.8cf308"]]},{"id":"97975b91.8cf308","type":"http response","z":"1bc13036.e3b82","name":"","x":2115.6672019958496,"y":418.333345413208,"wires":[]},{"id":"71cf9c70.c94964","type":"cloudant in","z":"1bc13036.e3b82","name":"","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","search":"_idx_","design":"filterBy","index":"filterBy","x":1449.1666221618652,"y":331.33337783813477,"wires":[["c10eb2f7.4f475"]]},{"id":"d4893bd6.73baf8","type":"switch","z":"1bc13036.e3b82","name":"","property":"doCreate_optional_detail","propertyType":"msg","rules":[{"t":"true"},{"t":"else"}],"checkall":"true","outputs":2,"x":2803.3597869873047,"y":150.51562118530273,"wires":[["d62930a9.21f02"],["f71aaf5f.47b0e"]]},{"id":"d62930a9.21f02","type":"change","z":"1bc13036.e3b82","name":"","rules":[{"t":"move","p":"option_detail","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":2991.3439178466797,"y":107.99999713897705,"wires":[["56701aa1.5fe244"]]},{"id":"56701aa1.5fe244","type":"cloudant out","z":"1bc13036.e3b82","name":"","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","payonly":true,"operation":"insert","x":3207.3554916381836,"y":62.367183685302734,"wires":[]},{"id":"f71aaf5f.47b0e","type":"function","z":"1bc13036.e3b82","name":"Log","func":"node.warn(\"No need to create optional second task.\");\nnode.warn(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":2933.3478202819824,"y":162.3320188522339,"wires":[[]]},{"id":"7a1fa12a.ae0fc","type":"function","z":"1bc13036.e3b82","name":"delete_detail","func":"var body = msg.req_body.table_data,\n    token = msg.req_body.access_token ;\n        \n    if(isEmpty(body)){\n        msg.api_status  = \"API_ERROR\";\n        msg.payload     = {status: 400, error: true, msg: \"Table data should be valid json object.\", data: null};\n    }else if(isEmpty(token)){\n        msg.api_status  = \"API_ERROR\";\n        msg.payload     = {status: 400, error: true, msg: \"`access_token` must be provided.\", data: null};\n    }else if(isEmpty(body.id)){\n        msg.api_status  = \"API_ERROR\";\n        msg.payload     = {status: 400, error: true, msg: \"`id` must be provided to remove detail.\", data: null};\n    }else{\n        msg.req_data    = {access_token: token, detail_id: body.id};\n        msg.api_status  = \"API_SUCCESS\";\n        msg.method      = \"GET\";\n        msg.url         = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_design/filterBy/_view/delete_view_data\";\n    }\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1282.0000762939453,"y":230.00009727478027,"wires":[["2f5e4f46.787e"]]},{"id":"2f5e4f46.787e","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_status","propertyType":"msg","rules":[{"t":"eq","v":"API_ERROR","vt":"str"},{"t":"eq","v":"API_SUCCESS","vt":"str"}],"checkall":"true","outputs":2,"x":1435.8635330200195,"y":228.918062210083,"wires":[["ad69ce11.40c27"],["d07942b5.0e4be"]]},{"id":"ad69ce11.40c27","type":"http response","z":"1bc13036.e3b82","name":"","x":1586.863380432129,"y":188.3946032524109,"wires":[]},{"id":"d07942b5.0e4be","type":"http request","z":"1bc13036.e3b82","name":"bulk_delete_view","method":"use","ret":"obj","url":"","tls":"","x":1625.8672943115234,"y":253.9297637939453,"wires":[["9896f35d.a07e1"]]},{"id":"9896f35d.a07e1","type":"function","z":"1bc13036.e3b82","name":"populate_content","func":"var req_body = msg.req_data,\n    body     = msg.payload ;\n    \nif(isEmpty(body.rows)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload    = {status: 400, error:true, msg: \"Unable to find data using view\", data: null};\n}else{\n    var result_obj          = populate_body(body.rows),\n        user_obj            = populate_user(result_obj.users, req_body.access_token);\n        \n    if(isEmpty(user_obj)){\n        msg.api_status  = \"API_ERROR\";\n        msg.payload     = {status: 400, error: true, msg: \"Unable to find user with `access_token`.\", data: null};\n        return msg;\n    }else{\n        var detail_obj  = populate_detail(result_obj.details, req_body.detail_id);\n        \n        if(isEmpty(detail_obj)){\n            msg.api_status = \"API_ERROR\";\n            msg.payload     = {status: 400, error: true, msg: \"Unable to find detail with `detail_id`.\", data: null};\n            return msg;\n        }else{\n            \n            if(detail_obj.user_id === user_obj._id){\n                var child_details   = populate_sub_detail(result_obj.details, detail_obj.to_page_id),\n                grand_child_details = populate_grand_child(result_obj.details, child_details),\n                user_tasks          = populate_user_task(result_obj.user_task, detail_obj.page_id, user_obj._id),\n                response            = [];\n                \n                grand_child_details.push(detail_obj);\n                delete_records(grand_child_details);\n                delete_records(user_tasks);\n              \n                msg.api_status = \"API_SUCCESS\";\n                msg.method = \"POST\";\n                msg.url    = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_bulk_docs\";\n                msg.payload = {docs: response} ;\n                return msg;\n            }else{\n                var user_tasks      = populate_user_task(result_obj.user_task, detail_obj.page_id, user_obj._id), response=[];\n                delete_records(user_tasks);\n                \n                msg.api_status = \"API_SUCCESS\";\n                msg.method = \"POST\";\n                msg.url    = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_bulk_docs\";\n                msg.payload = {docs: response};\n                return msg;\n            }\n        }\n    }\n}\n\nreturn msg;\n\nfunction delete_records(records){\n    if(records.length){\n        for(var i=0; i <records.length; i++){\n            response.push({\n                _id     : records[i]._id,\n                _rev    : records[i]._rev,\n                _deleted: true\n            });\n        }\n    }\n}\n\nfunction populate_user_task(user_tasks, page_id, user_id){\n    var arr = [];\n    for(var i=0; i<user_tasks.length; i++){\n        if( ( parseInt(user_tasks[i].page_id) === parseInt(page_id) ) &&\n            ( user_tasks[i].user_id === user_id )\n        ){\n            arr.push(user_tasks[i]);    \n        }\n    }\n    return arr;\n}\n\nfunction populate_grand_child(all_details, child_details){\n    var grand_childs = [];\n    if(!isEmpty(child_details)){\n        for(var i=0; i<all_details.length; i++){\n            for(var k=0; k<child_details.length; k++){\n                if(parseInt(all_details[i].page_id) === parseInt(child_details[k].to_page_id)){\n                    grand_childs.push(all_details[i]);\n                }\n            }\n        }\n    }\n    if(grand_childs.length){\n        return child_details.concat(grand_childs);\n    }else{\n        return child_details;\n    }\n}\n\nfunction populate_sub_detail(details, to_page_id){\n    var arr = [];\n    for(var i=0; i<details.length; i++){\n        if(details[i].page_id === to_page_id){\n            arr.push(details[i]);\n        }\n    }\n    return arr;\n}\n\nfunction populate_detail(details, detail_id){\n    var obj = {};\n    for(var i=0; i<details.length; i++){\n        if(details[i]._id === detail_id){\n            obj = details[i];\n        }\n    }\n    return obj ;\n}\n\nfunction populate_user(users, access_token){\n    var obj = {};\n    for(var i=0; i<users.length; i++){\n        if(users[i].access_token === access_token){\n            obj = users[i] ;\n        }\n    }\n    return obj;\n}\n\nfunction populate_body(rows){\n    var details = [], users=[], user_task=[] ;\n    for(var i=0; i<rows.length; i++){\n        if(rows[i].value.table === \"details\"){\n            details.push(rows[i].value);\n        }\n        \n        if(rows[i].value.table === \"users\"){\n            users.push(rows[i].value);\n        }\n        \n        if(rows[i].value.table === \"user_task\"){\n            user_task.push(rows[i].value);\n        }\n    }\n    return {details: details, users: users, user_task: user_task};\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1835.3633880615234,"y":253.4961700439453,"wires":[["fe7e63dc.d9f8e"]]},{"id":"fe7e63dc.d9f8e","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_status","propertyType":"msg","rules":[{"t":"eq","v":"API_ERROR","vt":"str"},{"t":"eq","v":"API_SUCCESS","vt":"str"}],"checkall":"true","outputs":2,"x":2001.60982131958,"y":251.92978382110596,"wires":[["529712dd.73ea7c"],["df3a22ee.0c8c9"]]},{"id":"529712dd.73ea7c","type":"http response","z":"1bc13036.e3b82","name":"","x":2140.3598403930664,"y":221.39851570129395,"wires":[]},{"id":"df3a22ee.0c8c9","type":"http request","z":"1bc13036.e3b82","name":"","method":"use","ret":"obj","url":"","tls":"","x":2160.8754653930664,"y":268.43367195129395,"wires":[["1b4af4f1.9977bb"]]},{"id":"1b4af4f1.9977bb","type":"function","z":"1bc13036.e3b82","name":"response","func":"if(isEmpty(msg.payload)){\n    msg.payload = {status: 400, error: true, msg: \"Error while removing record from database\", data: msg.payload};\n}else{\n    msg.payload = {status: 200, error: false, msg: \"Record removed successfully from database.\", data: msg.payload};\n}\nreturn msg;\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":2328.8640060424805,"y":264.24230098724365,"wires":[["a784b7dc.0735d8"]]},{"id":"a784b7dc.0735d8","type":"http response","z":"1bc13036.e3b82","name":"","x":2483.7506437301636,"y":246.0000982284546,"wires":[]},{"id":"3686ccd8.9cc104","type":"http response","z":"1bc13036.e3b82","name":"","x":1615.500343322754,"y":497.3335666656494,"wires":[]},{"id":"64cc674e.592e58","type":"http request","z":"1bc13036.e3b82","name":"","method":"GET","ret":"obj","url":"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_design/filterBy/_view/get_short_details","tls":"","x":1637.5003395080566,"y":551.6669044494629,"wires":[["bfab0f04.e55c1"]]},{"id":"bfab0f04.e55c1","type":"function","z":"1bc13036.e3b82","name":"populate_records","func":"var payload         = msg.payload,\n    access_token    = msg.payload_content.access_token,\n    req_body        = msg.payload_content.content;\n    \nif(isEmpty(payload.rows)){\n    msg.statusCode = 400 ;\n    msg.api_status = \"API_ERROR\";\n    msg.payload    = {status: 400, error: true, msg: \"Unable to fetch record via using views\", data: null};\n}else{\n    var db_records = populate_records(payload.rows),\n        user_obj   = populate_user(db_records.users, access_token),\n        detail_obj = populate_details(db_records.details, req_body.detail_id),\n        task_obj   = populate_task(db_records.tasks_arr, req_body.page_id);\n        \n        if(isEmpty(user_obj)){\n            msg.statusCode = 400 ;\n            msg.api_status = \"API_ERROR\";\n            msg.payload    = {status: 400, error: true, msg: \"Invalid `access_token`. Please retry after logout.\", data: null};\n        }else{\n            if(user_obj._id == detail_obj.user_id){\n                //update detail_obj\n                detail_obj.display_if_empty         = req_body.display_if_empty;\n                detail_obj.user_incoming.note       = req_body.message ;\n                detail_obj.user_incoming.message    = req_body.message ;\n                detail_obj.type                     = req_body.type;\n         \n                //update task_obj \n                task_obj.display_if_empty = req_body.display_if_empty;\n                task_obj.task_name        = req_body.message ;\n                task_obj.type             = req_body.type;\n                \n                msg.api_status = \"API_SUCCESS\";\n                msg.payload = {\n                    docs: [detail_obj, task_obj]\n                };\n            }else{\n                msg.statusCode = 401 ;\n                msg.api_status = \"API_ERROR\";\n                msg.payload    = {status: 400, error: true, msg: \"You are not authrozied to update this record.\", data: null};\n            }\n        }\n}   \n\nreturn msg;\n\nfunction populate_user(users, access_token){\n    var user = {};\n    for(var i=0; i<users.length; i++){\n        if(users[i].access_token == access_token){\n            user = users[i];\n        }\n    }\n    return user;\n}\n\nfunction populate_details(details, detail_id){\n    var obj = {};\n    for(var i=0; i<details.length; i++){\n        if(details[i]._id == detail_id){\n            obj = details[i];\n        }\n    }\n    return obj;\n}\n\nfunction populate_task(tasks, page_id){\n    var obj = {};\n    for(var i=0; i<tasks.length; i++){\n        if((tasks[i].page_id == page_id) && (tasks[i].table == \"task_table\") ){\n            obj = tasks[i];\n        }\n    }\n    return obj;\n}\n\nfunction populate_records(rows){\n    var users = [], details = [], tasks=[];\n    \n    for(var i=0; i<rows.length; i++){\n        if(rows[i].value.table == \"users\"){\n            users.push(rows[i].value);   \n        }\n        \n        if(rows[i].value.table == \"details\"){\n            details.push(rows[i].value);\n        }\n        \n        if(rows[i].value.table == \"task_table\"){\n            tasks.push(rows[i].value);\n        }\n    }\n    return {users: users, details:details, tasks_arr:tasks };\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1829.8335266113281,"y":549.3335304260254,"wires":[["db8b90a6.16022"]]},{"id":"a89ee394.95a9d","type":"http response","z":"1bc13036.e3b82","name":"","x":2247.8336868286133,"y":645.6667976379395,"wires":[]},{"id":"db8b90a6.16022","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_status","propertyType":"msg","rules":[{"t":"eq","v":"API_SUCCESS","vt":"str"},{"t":"else"}],"checkall":"true","outputs":2,"x":2125.8335342407227,"y":616.3334617614746,"wires":[["b250faeb.be6e78"],["a89ee394.95a9d"]]},{"id":"b250faeb.be6e78","type":"http request","z":"1bc13036.e3b82","name":"","method":"POST","ret":"obj","url":"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_bulk_docs","tls":"","x":2264.833564758301,"y":588.6667976379395,"wires":[["affb5a04.b9f238"]]},{"id":"affb5a04.b9f238","type":"function","z":"1bc13036.e3b82","name":"res","func":"if(isEmpty(msg.payload)){\n    msg.payload = {status: 400, error: true, msg: \"Unable to update provided documents\", data: msg.payload};\n}else{\n    msg.payload = {status: 200, error: true, msg: \"Record updated successfully.\", data: msg.payload};\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":2414.8336868286133,"y":588.3335456848145,"wires":[["3edc137a.66ec4c"]]},{"id":"3edc137a.66ec4c","type":"http response","z":"1bc13036.e3b82","name":"","x":2552.166660308838,"y":586.6668643951416,"wires":[]},{"id":"8047b1c2.00b14","type":"function","z":"1bc13036.e3b82","name":"add_detail_to_task","func":"var content         = msg.payload_data ,\n    access_token    = msg.access_token ;\n    \nif(isEmpty(content.detail_id)){\n    msg.statusCode  = 400 ;\n    msg.payload     = {status: 400, msg: \"`detaik_id`is missing\", data: content};\n}else if(isEmpty(content.task_id)){\n    msg.statusCode  = 400 ;\n    msg.payload     = {status: 400, msg: \"`task_id`is missing\", data: content};\n}else if(isEmpty(access_token)){\n    msg.statusCode  = 400 ;\n    msg.payload     = {status: 400, msg: \"`access_token`is missing\", data: content};\n}else{\n    msg.url     = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_design/filterBy/_view/add_detail_to_task\";\n    msg.method  = \"GET\";\n}\n\nreturn msg;\n\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1310.4999923706055,"y":639.3333950042725,"wires":[["b009fcf1.982cd"]]},{"id":"418ae6bc.5f2e38","type":"http response","z":"1bc13036.e3b82","name":"","x":1987.5002365112305,"y":642.6668062210083,"wires":[]},{"id":"b009fcf1.982cd","type":"http request","z":"1bc13036.e3b82","name":"","method":"use","ret":"obj","url":"","tls":"","x":1507.5,"y":637.0000476837158,"wires":[["647749b5.f11ce8"]]},{"id":"647749b5.f11ce8","type":"function","z":"1bc13036.e3b82","name":"populate_data","func":"var content         = msg.payload_data,\n    access_token    = msg.access_token,\n    db_records      = msg.payload;\n\nif(isEmpty(db_records.rows)){\n    msg.statusCode = 400;\n    msg.payload    = {status: 400, msg: \"Unable to fetch data via using cloudant view 'add_detail_to_task'\", data: null};\n}else{\n    var records     = populate_record(db_records.rows),\n        detail_obj  = populate_details(records.details, content.detail_id),\n        user_obj    = populate_user(records.users, access_token);\n        \n    if(isEmpty(user_obj)){\n        msg.statusCode  = 400;\n        msg.payload     = {status: 400, msg: \"`access_token` is not valid.\", data: null};\n    }else if(isEmpty(detail_obj)){\n        msg.statusCode  = 400;\n        msg.payload     = {status: 400, msg: \"`detail_id` is not valid.\", data: null};\n    }else{\n\n        if(isEmpty(detail_obj.task_id)){\n            msg.statusCode  = 400;\n            msg.payload     = {status: 400, msg: \"`detail_obj` doesn't contains task_id. please check it once.\", data: null};\n        }\n        else if(Object.prototype.toString.call(detail_obj.task_id) !== \"[object Array]\"){\n            detail_obj.task_id = detail_obj.task_id.push(task_id);    \n            msg.statusCode  = 400;\n            msg.payload     = {status: 400, msg: \"Invalid detail.task_id. Plesae check details_obj once.\", data: null};\n        }else{\n            msg.statusCode     = 200;\n            detail_obj.task_id.push(content.task_id);    \n            msg.payload        = detail_obj;\n        }\n    }\n}\nreturn msg;\n\nfunction populate_user(arr, token){\n    if(isEmpty(token)) return {};\n    \n    if(isEmpty(arr)){\n        return {};\n    }else{\n        for(var i=0; i<arr.length; i++){\n            if(arr[i].access_token == token){\n                return arr[i];\n            }\n        }\n    }    \n    \n    return {};\n}\n\nfunction populate_details(arr, id){\n    if(isEmpty(id)) return {};\n    \n    if(isEmpty(arr)){\n        return {};\n    }else{\n        for(var i=0; i<arr.length; i++){\n            if(arr[i]._id == id){\n                return arr[i];\n            }\n        }\n    }    \n    \n    return {};\n}\n\nfunction populate_record(list){\n    var users = [],details=[], sorted_detail=[];\n    for(var i=0; i<list.length; i++){\n        if(list[i].value.table == \"details\"){\n            details.push(list[i].value);\n        }\n        \n        if(list[i].value.table == \"users\"){\n            users.push(list[i].value);\n        }\n        \n    }\n    \n    if(!isEmpty(details)){\n        sorted_detail =  details.sort(function(a,b){\n            sorted_detail = sorted_detail.sort(function(a,b){\n        \t\treturn (a.createdAt - b.createdAt);\t\n            });\n        });\n    }else{\n        sorted_detail = details ;\n    }\n    \n    return {users: users, details: sorted_detail} ;\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1695.833381652832,"y":682.6667203903198,"wires":[["ced53a41.ba8868"]]},{"id":"ced53a41.ba8868","type":"switch","z":"1bc13036.e3b82","name":"","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"400","vt":"num"},{"t":"eq","v":"200","vt":"str"}],"checkall":"true","outputs":2,"x":1843.8333358764648,"y":681.0000286102295,"wires":[["418ae6bc.5f2e38"],["d674a9dd.e79dd8","fb340adc.026378"]]},{"id":"fb340adc.026378","type":"cloudant out","z":"1bc13036.e3b82","name":"master_table","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","payonly":true,"operation":"insert","x":2009.833610534668,"y":696.3334407806396,"wires":[]},{"id":"d674a9dd.e79dd8","type":"function","z":"1bc13036.e3b82","name":"response","func":"var data = msg.payload ;\n\nmsg.payload = {status: 200, msg: \"Record updated successfully.\", data: data};\nreturn msg;","outputs":1,"noerr":0,"x":2001.8333358764648,"y":753.0000286102295,"wires":[["b1560562.e65e68"]]},{"id":"b1560562.e65e68","type":"http response","z":"1bc13036.e3b82","name":"","x":2137.833396911621,"y":754.3333721160889,"wires":[]},{"id":"2c021dd8.471292","type":"function","z":"1bc13036.e3b82","name":"add_assistant_to_groups","func":"var access_token = msg.access_token;\n    data         = msg.payload_data;\n\nif(isEmpty(access_token)){\n    msg.API_ERROR   = \"API_ERROR\";\n    msg.statusCode  = 400;\n    msg.payload     = {status:400, msg: \"`access_token` is missing\", record: []};\n}else if(isEmpty(data.assistants)){\n    msg.API_ERROR   = \"API_ERROR\";\n    msg.statusCode  = 400;\n    msg.payload     = {status:400, msg: \"Assistants list is missing\", record: []};\n}else{\n    msg.API_ERROR   = \"API_SUCCESS\";\n    msg.payload = {\n        query: \"table:users\",\n        sort: \"_id<string>\"\n    };\n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1324.5001220703125,"y":822,"wires":[["61d507ca.0f3a28"]]},{"id":"61d507ca.0f3a28","type":"switch","z":"1bc13036.e3b82","name":"","property":"API_ERROR","propertyType":"msg","rules":[{"t":"eq","v":"API_ERROR","vt":"str"},{"t":"eq","v":"API_SUCCESS","vt":"str"}],"checkall":"true","outputs":2,"x":1534.666748046875,"y":820.6665649414062,"wires":[["aa8444ff.e07818"],["d2ef871e.0585d8"]]},{"id":"aa8444ff.e07818","type":"http response","z":"1bc13036.e3b82","name":"","x":1726.3333740234375,"y":767,"wires":[]},{"id":"d2ef871e.0585d8","type":"cloudant in","z":"1bc13036.e3b82","name":"","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","search":"_idx_","design":"filterBy","index":"filterBy","x":1745.3333740234375,"y":835.6666259765625,"wires":[["dfdd06d4.43f328"]]},{"id":"dfdd06d4.43f328","type":"function","z":"1bc13036.e3b82","name":"populate","func":"var access_token    = msg.access_token,\n    assistants      = msg.payload_data.assistants,\n    payload         = msg.payload ,\n    group_id        = randomString(32);\n    \nif(isEmpty(payload)){\n    msg.API_ERROR   = \"API_ERROR\";\n    msg.statusCode  = 400;\n    msg.payload     = {status:400, msg: \"Unable to get user records from database.\", record: []};\n}else{\n    \n    var user_obj    = populate_user(access_token, payload);\n    if(isEmpty(user_obj)){\n        msg.API_ERROR   = \"API_ERROR\";\n        msg.statusCode  = 400;\n        msg.payload     = {status:400, msg: \"Invalid `access_token`. Please check it once.\", record: []};\n    }else{\n        msg.API_ERROR   = \"API_SUCCESS\";\n        msg.payload     = {\n            _id  : group_id,\n            table: \"group_table\",\n            owner_id: payload[0]._id,\n            group_name: getRandomGroupName()\n        };\n        \n        msg.update_user =  {\n            docs: populate_updated_users(group_id, payload, assistants)\n        };\n    }\n}\nreturn msg;\n\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}\n\nfunction getRandomGroupName(){\n    var groupName = [\"dri_main\", \"demo_group\", \"test_group\", \"first_responder\", \"second_responder\", \"third_responder\"];\n    return groupName[Math.floor(Math.random() * groupName.length)];\n}\n\nfunction randomString(length) {\n    var result = '',\n        chars  = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    \n    for (var i = length; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\n    return result;\n}\n\nfunction populate_user(access_token, users){\n    var obj = {};\n    \n    if(isEmpty(access_token)) return obj;\n    if(isEmpty(users)) return obj;\n    \n    for(var itr in users){\n        if(users[itr].access_token == access_token){\n            obj = users[itr];\n        }\n    }\n    return obj;\n}\n\nfunction populate_updated_users(group_id, users, assistants){\n    var assis = [];\n    for(var ass in assistants){\n        for(var itr in users){\n            if(assistants[ass].detail_id == users[itr]._id){\n                delete users[itr].type.virtual_group ;\n                users[itr].data = {groups: {}};\n                users[itr].data.groups[group_id] = true;\n                assis.push(users[itr]);\n            }\n        }\n    }\n    return assis;\n}","outputs":1,"noerr":0,"x":1909.8333740234375,"y":860.3336791992188,"wires":[["5b71aba.73a7154"]]},{"id":"5b71aba.73a7154","type":"switch","z":"1bc13036.e3b82","name":"","property":"API_ERROR","propertyType":"msg","rules":[{"t":"eq","v":"API_ERROR","vt":"str"},{"t":"eq","v":"API_SUCCESS","vt":"str"}],"checkall":"true","outputs":2,"x":2053.6665992736816,"y":859.000226020813,"wires":[["8b45b1b1.fc0b9"],["2caf8cad.c39244","44778f46.48233"]]},{"id":"8b45b1b1.fc0b9","type":"http response","z":"1bc13036.e3b82","name":"","x":2189.333438873291,"y":817.3337635993958,"wires":[]},{"id":"2caf8cad.c39244","type":"cloudant out","z":"1bc13036.e3b82","name":"","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","payonly":true,"operation":"insert","x":2211.833427429199,"y":869.3333415985107,"wires":[]},{"id":"44778f46.48233","type":"function","z":"1bc13036.e3b82","name":"bulk_update","func":"msg.payload = msg.update_user;\nmsg.url     = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_bulk_docs\";\nmsg.method  = \"POST\";\nreturn msg;","outputs":1,"noerr":0,"x":2214.8334197998047,"y":914.0000238418579,"wires":[["50e1b16d.5265d"]]},{"id":"50e1b16d.5265d","type":"http request","z":"1bc13036.e3b82","name":"","method":"use","ret":"obj","url":"","tls":"","x":2378.833267211914,"y":911.6666898727417,"wires":[["26f92c93.f688c4"]]},{"id":"26f92c93.f688c4","type":"function","z":"1bc13036.e3b82","name":"response","func":"node.warn(\"update assistants are as follows\");\nnode.warn(msg.payload);\nmsg.payload = {\n    status: 200,\n    msg: \"Assistants added successfully\",\n    record: msg.updated_user\n};\nreturn msg;","outputs":1,"noerr":0,"x":2546.833366394043,"y":913.6666250228882,"wires":[["a6f58eda.58d83"]]},{"id":"a6f58eda.58d83","type":"http response","z":"1bc13036.e3b82","name":"","x":2696.8333053588867,"y":915.6665334701538,"wires":[]},{"id":"b9ef6f80.eb9b1","type":"function","z":"1bc13036.e3b82","name":"payload","func":"msg.url             = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_design/filterBy/_view/get_selected_user_task\";\nmsg.method          = \"GET\";\nmsg.detail_obj      = msg.payload;\nreturn msg;","outputs":1,"noerr":0,"x":2822.8021030426025,"y":220.5742645263672,"wires":[["47dad7f1.96d4e8"]]},{"id":"47dad7f1.96d4e8","type":"http request","z":"1bc13036.e3b82","name":"","method":"GET","ret":"obj","url":"","tls":"","x":3009.802177429199,"y":201.24091815948486,"wires":[["a4b64678.912108"]]},{"id":"a4b64678.912108","type":"function","z":"1bc13036.e3b82","name":"populate","func":"var detail_obj = msg.detail_obj,\n    payload    = msg.payload ;\n\nif(isEmpty(payload)){\n    msg.statusCode = 400 ;\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`access_token` is required to update detail\", data: body};\n}else{\n    msg.api_status  = \"API_ERROR\";\n    var user_tasks  = populate_user_task(payload.rows, detail_obj);\n    msg.payload     = {detail_obj: detail_obj, subscribed_users: user_tasks};\n}    \nreturn msg;\n\nfunction populate_user_task(lists, obj){\n    var user_tasks = [];\n    \n    for(var itr in lists){\n        if(\n            ( if_exists_in_arr(lists[itr].value.task_id, obj.task_id) )&&\n            (lists[itr].value.page_id  == obj.page_id)\n        ){\n            lists[itr].value.synchronized = 0;\n            lists[itr].value.status       = 0;\n            user_tasks.push(lists[itr].value);\n        }\n    }\n    return user_tasks;\n}\n\n\nfunction if_exists_in_arr(key, array){\n    return array.indexOf(key) > -1;\n}\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":3184.8021965026855,"y":117.57430720329285,"wires":[["cedd9c33.0f069","3fe194ce.c5304c"]]},{"id":"10ee25dc.1f551a","type":"http request","z":"1bc13036.e3b82","name":"Bulk Update","method":"use","ret":"obj","url":"","tls":"","x":3567.802215576172,"y":53.90766406059265,"wires":[["ea798a93.b276a8"]]},{"id":"cedd9c33.0f069","type":"http request","z":"1bc13036.e3b82","name":"Notify socket server","method":"POST","ret":"obj","url":"https://socket-server.mybluemix.net/accept_request","tls":"","x":3457.469528198242,"y":138.90762209892273,"wires":[["ea798a93.b276a8"]]},{"id":"3fe194ce.c5304c","type":"function","z":"1bc13036.e3b82","name":"payload","func":"msg.url         = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_bulk_docs\";\nmsg.method      = \"POST\";\n\nnode.warn(\">>>>>>>>>>>>>>>>>>>>>>>>\");\nnode.warn(msg.payload);\n\nmsg.payload     = {\n  docs: msg.payload   \n};\nreturn msg;","outputs":1,"noerr":0,"x":3411.4688720703125,"y":68.57432436943054,"wires":[["10ee25dc.1f551a"]]},{"id":"ea798a93.b276a8","type":"debug","z":"1bc13036.e3b82","name":"Logger","active":true,"console":"false","complete":"true","x":3707.0007934570312,"y":118.00008964538574,"wires":[]},{"id":"c8e697b5.8cbfb8","type":"function","z":"1bc13036.e3b82","name":"payload","func":"msg.url = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_design/filterBy/_view/add_detail_data\";\nmsg.method = \"GET\";\nreturn msg;","outputs":1,"noerr":0,"x":1985.4999694824219,"y":149.66666412353516,"wires":[["963697ec.033ba8"]]},{"id":"963697ec.033ba8","type":"http request","z":"1bc13036.e3b82","name":"","method":"use","ret":"obj","url":"","tls":"","x":2146.500045776367,"y":142.00001907348633,"wires":[["2e78e0d1.6e91c"]]},{"id":"60ebc840.c4c168","type":"debug","z":"1bc13036.e3b82","name":"After update_create_user_task","active":true,"console":"false","complete":"true","x":4741.500930786133,"y":404.33334255218506,"wires":[]},{"id":"79a95d3b.fee184","type":"debug","z":"1bc13036.e3b82","name":"create_optional_task","active":true,"console":"false","complete":"payload","x":3478.1668701171875,"y":232.33333730697632,"wires":[]},{"id":"aa6e064d.f28708","type":"debug","z":"1bc13036.e3b82","name":"addDetail payload","active":true,"console":"false","complete":"payload","x":2854.500099182129,"y":327.3333282470703,"wires":[]},{"id":"3216a994.9589e6","type":"debug","z":"1bc13036.e3b82","name":"Under Timeout processor","active":true,"console":"false","complete":"payload","x":4368.166923522949,"y":248.00004482269287,"wires":[]},{"id":"277523b2.49c11c","type":"switch","z":"1bc13036.e3b82","name":"","property":"payload","propertyType":"msg","rules":[{"t":"else"},{"t":"null"}],"checkall":"true","outputs":2,"x":4144.499923706055,"y":193.33333778381348,"wires":[["7936c18d.ddbd1"],["3216a994.9589e6"]]},{"id":"6ba779a9.034fd8","type":"function","z":"1bc13036.e3b82","name":"add_assistant_into_group","func":"var payload         = msg.payload ,\n    req_user_id     = msg.req_body.table_data.user_id,\n    req_group_id    = msg.req_body.table_data.group_id,\n    phone           = msg.req_body.table_data.phone,\n    type            = msg.req_body.table_data.type,\n    screen          = msg.req_body.table_data.screen,\n    access_token    = msg.access_token;\n\nif(screen === \"MANAGE_ASSISTANT\"){\n    msg.options = \"case1\";\n    msg.payload = {\n        query: \"table:users AND virtual_phone:\" + phone,\n        sort: \"_id<string>\"\n    };\n    msg.req_user_id = req_user_id;\n    msg.operation_type = type;\n    return msg;\n} else if(screen === \"MANAGE_GROUP\"){\n    msg.options = \"case2\";\n    msg.payload = [\n\t\t{\n\t\t\tpayload: {\n\t\t\t\tuser_id: \"f1b5ed9577f69c6b131d94a46b39044f\", //system_id,\n\t\t\t\tportal_id: \"f1b5ed9577f69c6b131d94a46b39044f\", //system_id,\n\t\t\t\tnode_name: req_group_id, //\"EmployeeGroup\", //group_name_company,\n\t\t\t\tinclude_data:true,\n\t\t\t\tinclude_head:false,\n\t\t\t\ttree_owner_id: \"f1b5ed9577f69c6b131d94a46b39044f\", //system_id\n\t\t},\n\t\t\tfn_name: \"get_node_name_tree\"\n\t\t}\n\t];\n    msg.req_user_id = req_user_id;\n    msg.operation_type = type;\n    return msg;\n}else{\n    node.warn(\"Unspecified case to handel\");\n}\n","outputs":1,"noerr":0,"x":1320.1667442321777,"y":1024.0002603530884,"wires":[["5d35a8ca.7cbc78"]]},{"id":"a8a5a4a.1688658","type":"debug","z":"1bc13036.e3b82","name":"User Update Logger","active":true,"console":"false","complete":"payload","x":2339.1671257019043,"y":536.3334064483643,"wires":[]},{"id":"c824032e.2a235","type":"function","z":"1bc13036.e3b82","name":"update_message_schedule","func":"var payload_data = msg.payload_data;\nif(payload_data.type == \"old_message\"){\n    msg.process_type = \"update_schedule\";\n    msg.payload = {\n        query : \"table:details AND _id:\" + payload_data.detail_id ,\n        sort  : \"_id<string>\"\n    };    \n}else{\n    msg.process_type = \"new_schedule\";\n    msg.payload = {\n        query : \"table:users\" ,\n        sort  : \"_id<string>\"\n    };\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1351.5000305175781,"y":1216.0003819465637,"wires":[["a7fd174.0853de8","40594293.4be51c"]]},{"id":"b0135d4.f3d16a","type":"cloudant in","z":"1bc13036.e3b82","name":"","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","search":"_idx_","design":"filterBy","index":"filterBy","x":1780.500129699707,"y":1255.667564868927,"wires":[["d6ff2c3a.a1085"]]},{"id":"d6ff2c3a.a1085","type":"function","z":"1bc13036.e3b82","name":"payload","func":"var payload_data = msg.payload_data;\n    scheduled_date = populate_scheduled_time(payload_data);\n    \nif(isEmpty(msg.payload)){\n    msg.api_status = \"API_ERROR\";\n    msg.statusCode = 400 ;\n    msg.payload    = {status: 400, msg: \"Unable to find details for this msg\", data: null};\n}else{\n    msg.api_status = \"API_SUCCESS\";\n    var detail_obj = msg.payload[0];\n    \n    if(isEmpty(detail_obj.user_incoming)){\n        msg.api_status = \"API_ERROR\";\n        msg.statusCode = 400 ;\n        msg.payload    = {status: 400, msg: \"Unable to udpate details msg\", data: null};\n    }else{\n        msg.api_status = \"API_SUCCESS\";\n        detail_obj.user_incoming.message = payload_data.message ;\n        detail_obj.processed = 0 ;\n        detail_obj.status = 1 ;\n        detail_obj.due_date = scheduled_date;\n        msg.payload = detail_obj;\n        \n        msg.api_response = {status:200, msg: \"Record updated successfully\", data: detail_obj};\n    }\n\n}\nreturn msg;\n\nfunction populate_scheduled_time(data){\n    var moment   = global.get('moment'),\n    momentTz = global.get('moment_tz');\n    \n    if(isEmpty(data.timzone)){\n\t\tdata.timzone = \"America/New_York\";\n\t}else{\n\t\tdata.timzone = sechduleData.timzone;\n\t}\n\treturn moment().tz(data.timzone).valueOf();\n}\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1971.5001525878906,"y":1246.3338265419006,"wires":[["988833b0.368ff"]]},{"id":"988833b0.368ff","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_status","propertyType":"msg","rules":[{"t":"eq","v":"API_ERROR","vt":"str"},{"t":"eq","v":"API_SUCCESS","vt":"str"}],"checkall":"true","outputs":2,"x":2120.500274658203,"y":1254.6671382188797,"wires":[["37e6fcd7.017834"],["5edbfee3.b5d97","23827a59.dcaa56"]]},{"id":"5edbfee3.b5d97","type":"cloudant out","z":"1bc13036.e3b82","name":"","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","payonly":true,"operation":"insert","x":2331.8334465026855,"y":1268.000398159027,"wires":[]},{"id":"23827a59.dcaa56","type":"change","z":"1bc13036.e3b82","name":"response","rules":[{"t":"move","p":"api_response","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":2322.833450317383,"y":1317.3338980674744,"wires":[["a9c5c175.260f9"]]},{"id":"a9c5c175.260f9","type":"http response","z":"1bc13036.e3b82","name":"","x":2480.8335285186768,"y":1314.6670044660568,"wires":[]},{"id":"a7fd174.0853de8","type":"switch","z":"1bc13036.e3b82","name":"","property":"process_type","propertyType":"msg","rules":[{"t":"eq","v":"update_schedule","vt":"str"},{"t":"eq","v":"new_schedule","vt":"str"}],"checkall":"true","outputs":2,"x":1618.000129699707,"y":1255.000328540802,"wires":[["b0135d4.f3d16a"],["44918d37.8418e4"]]},{"id":"476d402f.1ea1b","type":"function","z":"1bc13036.e3b82","name":"populate_records","func":"var payload         = msg.payload_data,\n    users           = msg.payload,\n    company_bot     = populate_company(msg.access_token, users),\n    user_obj        = populate_user(payload, users),\n    scheduled_time  = populate_scheduled_time(payload),\n    company_screen  = populate_company_data(payload),\n    user_screen     = populate_user_data(payload),\n    final_result    = [] ;\n    \n    \nfinal_result.push(company_screen);\nfinal_result.push(user_screen);\nmsg.user_obj = user_obj;\nmsg.payload = {\n    \"docs\": final_result\n};\nmsg.response = {\n    company_detail : company_screen,\n    user_detail : user_screen\n};\nreturn msg;\n\nfunction populate_company(access_token, list){\n    var obj = {};\n    \n    if(isEmpty(access_token)) return obj;\n    if(isEmpty(list))return obj;\n    \n    for(var itr in list){\n        if(list[itr].access_token == access_token){\n            obj = list[itr];\n        }\n    }\n    \n    return obj;\n}\n\nfunction populate_user(task_obj, list){\n    var obj= {};\n    if(isEmpty(list)) return obj;\n    if(isEmpty(task_obj)) return obj;\n    \n    for(var itr in list){\n        if(Number(list[itr].virtual_phone) == Number(task_obj.task_name)){\n            obj = list[itr];\n        }\n    }\n    return obj;\n}\n\nfunction populate_company_data(data){\n    var name = company_bot.firstname + \" \" + company_bot.lastname;\n    return {\n        \"table\": \"details\",\n        \"task_id\": [data.task_id],\n        \"child_task_id\": null,\n        \"user_id\": user_obj._id ,\n        \"from_user_id\": {\n            \"user_id\": company_bot._id, \n            \"first_name\": company_bot.firstname,\n            \"lastname\" : company_bot.lastname,\n            \"phone\": company_bot.phone\n        },\n        \"page_id\": data.page_id,\n        \"from_page_id\": 0,\n        \"to_page_id\": 0,\n        \"synchronized\": 0,\n        \"processed\": 0,\n        \"status\": 1,\n        \"read\": 0,\n        \"display_if_empty\": \"true\",\n        \"date_created\": new Date().toJSON(),\n        \"due_date\": scheduled_time,\n        \"offline_expiration_seconds\": 0,\n        \"priority\": 1,\n        \"type\": {\n            \"public\" : \"public\"\n        },\n        \"image\": \"\",\n        \"from_user\": {},\n        \"user_incoming\": {\n            \"note\"   : data,\n            \"message\": data.message,\n            \"watson\" : data.message,\n            \"annotation\": populate_Char(name.split(\" \"))\n        },\n        \"template\": {},\n        \"timeout\": {},\n        \"user_calculate\": {},\n        \"location\": {},\n        \"default\": {},\n        \"count_status\": {\n            \"active\": 1,\n            \"unread\": 0\n          },\n        \"count\": {\n            \"active\": 1,\n            \"unread\": 1\n        },\n        \"count_if\": {\n            \"active\": 1,\n            \"unread\": 0\n        },\n        \"createdAt\": scheduled_time\n    };\n}\n\nfunction populate_user_data(data){\n    return {\n        \"table\": \"details\",\n        \"task_id\": [\"18_0\"],\n        \"child_task_id\": null,\n        \"user_id\": user_obj._id ,\n        \"from_user_id\": {\n            \"user_id\": user_obj._id, \n            \"first_name\": user_obj.firstname,\n            \"lastname\" : user_obj.lastname,\n            \"phone\": user_obj.virtual_phone\n        },\n        \"page_id\": 18,\n        \"from_page_id\": 0,\n        \"to_page_id\": 0,\n        \"synchronized\": 0,\n        \"processed\": 2,\n        \"status\": 2,\n        \"read\": 0,\n        \"display_if_empty\": \"true\",\n        \"date_created\": new Date().toJSON(),\n        \"offline_expiration_seconds\": 0,\n        \"due_date\": scheduled_time,\n        \"priority\": 1,\n        \"type\": {\n            \"public\" : \"public\"\n        },\n        \"image\": \"\",\n        \"from_user\": {},\n        \"user_incoming\": {\n            \"note\"   : data,\n            \"message\": data.message,\n            \"watson\" : data.message\n        },\n        \"template\": {},\n        \"timeout\": {},\n        \"user_calculate\": {},\n        \"location\": {},\n        \"default\": {},\n        \"count_status\": {\n            \"active\": 1,\n            \"unread\": 0\n          },\n        \"count\": {\n            \"active\": 1,\n            \"unread\": 1\n        },\n        \"count_if\": {\n            \"active\": 1,\n            \"unread\": 0\n        },\n        \"createdAt\": scheduled_time\n    };\n}\n\nfunction populate_scheduled_time(data){\n    var moment   = global.get('moment'),\n        momentTz = global.get('moment_tz');\n    \n    if(isEmpty(data.timzone)){\n\t\tdata.timzone = \"America/New_York\";\n\t}else{\n\t\tdata.timzone = sechduleData.timzone;\n\t}\n\t\n\treturn moment(data.sechduleDate).tz(data.timzone).valueOf(); \n}\n\n\nfunction populate_Char(arr){\n  var str = \"\";\n  for(var itr in arr){\n    if(arr[itr]){\n      str += arr[itr].substr(0,1);\n    }\n  }\n  return \"..(\" + str + \")\";\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}\n","outputs":1,"noerr":0,"x":2053.0003089904785,"y":1428.0003399848938,"wires":[["4897f233.34073c","c6a3d659.c945f8","db57422a.801b7"]]},{"id":"44918d37.8418e4","type":"cloudant in","z":"1bc13036.e3b82","name":"","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","search":"_idx_","design":"filterBy","index":"filterBy","x":1780.5001411437988,"y":1304.6670384407043,"wires":[["476d402f.1ea1b"]]},{"id":"c6a3d659.c945f8","type":"http request","z":"1bc13036.e3b82","name":"","method":"POST","ret":"obj","url":"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_bulk_docs","tls":"","x":2252.833786010742,"y":1373.3337121009827,"wires":[["1c3ff683.960139"]]},{"id":"1c3ff683.960139","type":"function","z":"1bc13036.e3b82","name":"res","func":"msg.payload = {\n    status: 200,\n    msg: \"Message schedule successfully.\",\n    payload: msg.response\n};\nreturn msg;","outputs":1,"noerr":0,"x":2415.8335151672363,"y":1393.000141620636,"wires":[["545dc30f.ba9d4c","dbafcdad.f8fd5"]]},{"id":"545dc30f.ba9d4c","type":"http response","z":"1bc13036.e3b82","name":"","x":2557.833808898926,"y":1370.666962146759,"wires":[]},{"id":"ff7f2320.a0c9c","type":"function","z":"1bc13036.e3b82","name":"delete_schedule_message","func":"node.warn(msg);\nreturn msg;","outputs":1,"noerr":0,"x":1359.1668014526367,"y":1441.0001969337463,"wires":[["b41f0574.6e0308"]]},{"id":"b41f0574.6e0308","type":"http request","z":"1bc13036.e3b82","name":"","method":"GET","ret":"obj","url":"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_design/filterBy/_view/get_data_for_chatbot","tls":"","x":1577.8866958618164,"y":1439.6798024177551,"wires":[["27fc8bf7.5570b4"]]},{"id":"27fc8bf7.5570b4","type":"function","z":"1bc13036.e3b82","name":"populate_records","func":"var payload     = msg.payload ,\n    db_records  = populate_db_records(payload.rows),\n    req_data    = msg.payload_data ;      \n\n    var company_detail  = populate_company_detail(req_data, db_records.details),\n        user_detail     = populate_user_detail(req_data, db_records.details);\n\nnode.warn(company_detail);\nnode.warn(user_detail);\n\nif(isEmpty(company_detail) && isEmpty(user_detail)){\n    msg.api_status = \"API_ERROR\";\n    msg.statusCode = 400;\n    msg.payload    = {status: 400, msg: \"Unable to delete record\", data: null};\n}else{\n    msg.api_status      = \"API_SUCCESS\";\n    msg.statusCode      = 200;\n    msg.url             = \"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_bulk_docs\";\n    msg.method          = \"POST\";\n    msg.payload         = {\n        docs : [{\n            \"_id\": company_detail._id,\n            \"_rev\": company_detail._rev,\n            \"_deleted\": true\n        },{\n            \"_id\": user_detail._id,\n            \"_rev\": user_detail._rev,\n            \"_deleted\": true\n        }]  \n    };\n    msg.api_response    = {status: 200, msg: \"Record deleted successfully\", data: null};\n}\nreturn msg;\n\nfunction populate_company_detail(req_data, details){\n    var obj = {};\n    if(isEmpty(req_data)) return obj;\n    if(isEmpty(details)) return obj;\n    \n    for(var itr in details){\n        if(details[itr]._id == req_data.detail_id){\n            obj = details[itr];\n        }\n    }\n    \n    return obj;\n}\n\nfunction populate_user_detail(req_data, details){\n    var obj = {};\n    if(isEmpty(req_data)) return obj;\n    if(isEmpty(details)) return obj;\n    \n    for(var itr in details){\n        var message     = isEmpty(details[itr].user_incoming) ? null : details[itr].user_incoming.message ,\n            dateStamp   = isEmpty(req_data.sechduleDate) ? new Date().getTime() : new Date(req_data.sechduleDate).getTime();\n            \n        if( (message == req_data.message) && (details[itr].createdAt == dateStamp) ){\n            obj =   details[itr] ;\n        }\n    }\n    return obj;\n}\n\nfunction populate_db_records(list){\n    var details = [], users = [];\n\n    for(var itr in list){\n        if(list[itr].value.table == \"details\"){\n            details.push(list[itr].value);\n        }\n        \n        if(list[itr].value.table == \"users\"){\n            users.push(list[itr].value);\n        }\n    }\n    return {details: details, users: users};\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1770.8749771118164,"y":1439.2305836677551,"wires":[["4adbd246.5c00fc"]]},{"id":"4adbd246.5c00fc","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_status","propertyType":"msg","rules":[{"t":"eq","v":"API_ERROR","vt":"str"},{"t":"eq","v":"API_SUCCESS","vt":"str"}],"checkall":"true","outputs":2,"x":1949.8828010559082,"y":1518.1683979034424,"wires":[["2a8dcc2a.cb6f94"],["d813c6de.570288"]]},{"id":"2a8dcc2a.cb6f94","type":"http response","z":"1bc13036.e3b82","name":"","x":2086.132801055908,"y":1483.6371479034424,"wires":[]},{"id":"d813c6de.570288","type":"http request","z":"1bc13036.e3b82","name":"","method":"use","ret":"obj","url":"","tls":"","x":2108.1291580200195,"y":1553.6766090393066,"wires":[["c1ad7c92.e5232"]]},{"id":"c1ad7c92.e5232","type":"function","z":"1bc13036.e3b82","name":"res","func":"if(msg.payload.error) {\n    msg.payload = {status: msg.statusCode, msg: \"Unable to delete record.\", data:null};\n}else{\n    msg.payload = msg.api_response;    \n}\n\nnode.warn(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":2264.140613555908,"y":1554.9848041534424,"wires":[["9f98da26.8d8f88"]]},{"id":"9f98da26.8d8f88","type":"http response","z":"1bc13036.e3b82","name":"","x":2399.140613555908,"y":1554.3988666534424,"wires":[]},{"id":"37e6fcd7.017834","type":"http response","z":"1bc13036.e3b82","name":"","x":2308.3333282470703,"y":1226.3334441184998,"wires":[]},{"id":"db57422a.801b7","type":"function","z":"1bc13036.e3b82","name":"Send SMS","func":"var paylaod = msg.user_obj,\n    data    = msg.payload_data ;\n\nmsg.topic = paylaod.virtual_phone || 12145644732;\nmsg.payload = data.message;\nreturn msg;","outputs":1,"noerr":0,"x":2253.500171661377,"y":1441.6669306755066,"wires":[["fdb95224.d5836"]]},{"id":"fdb95224.d5836","type":"twilio out","z":"1bc13036.e3b82","service":"_ext_","twilio":"90ba38c0.44c918","from":"","number":"","name":"","x":2460.1665534973145,"y":1461.33376455307,"wires":[]},{"id":"40594293.4be51c","type":"debug","z":"1bc13036.e3b82","name":"","active":true,"console":"false","complete":"true","x":1617.166633605957,"y":1194.3334956169128,"wires":[]},{"id":"4897f233.34073c","type":"debug","z":"1bc13036.e3b82","name":"","active":true,"console":"true","complete":"true","x":2221.1667976379395,"y":1492.333538532257,"wires":[]},{"id":"dbafcdad.f8fd5","type":"debug","z":"1bc13036.e3b82","name":"","active":true,"console":"false","complete":"false","x":2580.833724975586,"y":1408.0001330375671,"wires":[]},{"id":"c3156f83.76fc2","type":"function","z":"1bc13036.e3b82","name":"processing","func":"var payload_data = msg.payload_data,\n    user_page    = payload_data.data,\n    user_obj     = payload_data.user;\n\nif(isEmpty(user_obj)){\n    msg.statusCode      = 200;\n    msg.payload         = {status: 200, msg: \"Unable to find user with request_id\", data: null};\n    msg.api_response    = \"API_ERROR\";\n    \n}else if(isEmpty(user_page)){\n    msg.statusCode      = 200;\n    msg.payload         = {status: 200, msg: \"Unable to update user_page user with request\", data: null};\n    msg.api_response    = \"API_ERROR\";\n    \n}else{\n    delete msg.headers;\n    msg.api_response    = \"API_SUCCESS\";\n    msg.method          = \"GET\";\n    msg.url             = 'https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_design/filterBy/_view/get_selected_user_task?key=[\"' + user_obj._id +'\"]';\n    msg.req_user_page   = user_page;    \n}\nreturn msg;\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1305.5000305175781,"y":1565.0000252723694,"wires":[["dbbcadac.59e9","969a5367.e0507"]]},{"id":"d14c4d75.a846e","type":"http response","z":"1bc13036.e3b82","name":"","x":2096.5007286071777,"y":1614.6666913032532,"wires":[]},{"id":"969a5367.e0507","type":"debug","z":"1bc13036.e3b82","name":"","active":true,"console":"false","complete":"true","x":1458.5002059936523,"y":1620.6666111946106,"wires":[]},{"id":"63f764e5.eb0e4c","type":"http request","z":"1bc13036.e3b82","name":"","method":"use","ret":"obj","url":"","tls":"","x":1633.5004577636719,"y":1598.3336882591248,"wires":[["67734c0f.8182a4"]]},{"id":"67734c0f.8182a4","type":"function","z":"1bc13036.e3b82","name":"payload","func":"var payload = msg.payload;\n\nif(isEmpty(payload.rows)){\n    msg.payload = {status: 200, msg: \"Unable to fetch user_pages with user_id\", data: null};\n    msg.api_response = \"API_ERROR\";\n}else{\n    var db_records      = populate_records(msg.payload.rows),\n        req_user_page   = msg.req_user_page,\n        updated_pages   = populate_updated_pages(db_records.user_page, req_user_page);  \n    \n    if(isEmpty(updated_pages)){\n        msg.payload = {status: 200, msg: \"Unable to fetch user_pages with user_id\", data: null};\n        msg.api_response = \"API_ERROR\";\n    }else{\n        msg.api_response = \"API_SUCCESS\";\n        msg.payload = {\n            \"docs\": updated_pages\n        };            \n    }\n}\n\n\nreturn msg;\n\nfunction populate_records(list){\n    var user_page = [];\n    \n    if(!isEmpty(list)){\n        for(var i=0; i<list.length; i++){\n            if(list[i].value.table == \"user_page\"){\n                user_page.push(list[i].value);\n            }\n        }    \n    }\n    return { user_page: user_page } ;\n}\n\nfunction populate_updated_pages(all_user_pages, req_user_page){\n    node.warn(all_user_pages);\n    node.warn(req_user_page);\n    \n    var udpated_pages = [];\n    \n    if(isEmpty(all_user_pages)) return udpated_pages;\n    if(isEmpty(req_user_page)) return udpated_pages;\n    \n    for(var itr in all_user_pages){\n        for(var each in req_user_page){\n            if( \n                (all_user_pages[itr].page_id == req_user_page[each].page_id) &&\n                (all_user_pages[itr].user_id == req_user_page[each].user_id)\n            ){\n                all_user_pages[itr].count.unread = req_user_page[each].counts.unread;\n                all_user_pages[itr].synchronized = req_user_page[each].synchronized;\n                all_user_pages[itr].status = req_user_page[each].status;\n                udpated_pages.push(all_user_pages[itr]);\n            }\n        }\n    }\n    \n    return udpated_pages;\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1785.5007133483887,"y":1604.3336825370789,"wires":[["8ac0117.f26b0f"]]},{"id":"dbbcadac.59e9","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_response","propertyType":"msg","rules":[{"t":"eq","v":"API_ERROR","vt":"str"},{"t":"eq","v":"API_SUCCESS","vt":"str"}],"checkall":"true","outputs":2,"x":1461.5002059936523,"y":1567.6667675971985,"wires":[["6faf9588.0971dc"],["63f764e5.eb0e4c"]]},{"id":"6faf9588.0971dc","type":"http response","z":"1bc13036.e3b82","name":"","x":1612.4999694824219,"y":1543.666687488556,"wires":[]},{"id":"8ac0117.f26b0f","type":"switch","z":"1bc13036.e3b82","name":"","property":"api_response","propertyType":"msg","rules":[{"t":"eq","v":"API_ERROR","vt":"str"},{"t":"eq","v":"API_SUCCESS","vt":"str"}],"checkall":"true","outputs":2,"x":1932.5007209777832,"y":1634.3335213661194,"wires":[["d14c4d75.a846e"],["7096491e.f47098"]]},{"id":"7096491e.f47098","type":"http request","z":"1bc13036.e3b82","name":"","method":"POST","ret":"obj","url":"https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_bulk_docs","tls":"","x":2117.50040435791,"y":1702.0000290870667,"wires":[["9a916f60.e6ed5"]]},{"id":"9a916f60.e6ed5","type":"function","z":"1bc13036.e3b82","name":"response","func":"node.warn(\"Record updated successfully!\");\n\nmsg.payload = {\"status\": 200, msg: \"Record updated successfully!\", data: msg.req_user_page};\nreturn msg;","outputs":1,"noerr":0,"x":2277.500415802002,"y":1665.0000281333923,"wires":[["ec109309.daace"]]},{"id":"ec109309.daace","type":"http response","z":"1bc13036.e3b82","name":"","x":2417.500099182129,"y":1663.333523273468,"wires":[]},{"id":"deac6626.52fc48","type":"Tree View","z":"1bc13036.e3b82","database":"master_table","username":"30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix","password":"3c2e6d7f80557d231bc462ffd3457a3b05625332c1dffc92467d6d8941fcba85","operation":"prod","x":2450.302703857422,"y":1044.4449186325073,"wires":[["c6228917.feef68"]]},{"id":"c6228917.feef68","type":"function","z":"1bc13036.e3b82","name":"response","func":"var payload = msg.payload ;\n\nmsg.statusCode = 200;\nif(msg.operation_type === \"DELETE_FROM_GROUP\"){\n    msg.payload = {status: 200, msg: \"User successfully deleted from group.\", data: payload};\n} else if(msg.operation_type === \"ADD_INTO_GROUP\"){\n    msg.payload = {status: 200, msg: \"User successfully added to group.\", data: payload};\n}else{\n    msg.payload = {status: 200, msg: \"Unable to perfom add/delete operator for user\", data: payload};    \n}\n\nreturn msg;","outputs":1,"noerr":0,"x":2625.0178813934326,"y":1016.7884502410889,"wires":[["49cddf2b.1406d"]]},{"id":"49cddf2b.1406d","type":"http response","z":"1bc13036.e3b82","name":"","x":2778.788564682007,"y":1016.2746429443359,"wires":[]},{"id":"9e4807ac.4eb818","type":"Tree View","z":"1bc13036.e3b82","database":"master_table","username":"30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix","password":"3c2e6d7f80557d231bc462ffd3457a3b05625332c1dffc92467d6d8941fcba85","operation":"prod","x":2450.6254692077637,"y":997.2086124420166,"wires":[["c6228917.feef68"]]},{"id":"ec662dd0.5626","type":"cloudant in","z":"1bc13036.e3b82","name":"db","cloudant":"","database":"master_table","service":"dev-platform-cloudantNoSQLDB","search":"_idx_","design":"filterBy","index":"filterBy","x":1687.9619827270508,"y":997.153018951416,"wires":[["557c8d66.01bb84"]]},{"id":"557c8d66.01bb84","type":"function","z":"1bc13036.e3b82","name":"userExists?","func":"var payload         = msg.payload ,\n    req_user_id     = msg.req_body.table_data.user_id,\n    req_group_id    = msg.req_body.table_data.group_id,\n    access_token    = msg.access_token;\n\n\nif(isEmpty(payload)){\n    msg.moveForward = false;\n    msg.payload = {status: 200, msg: \"User doesn't exists with system\", data: []};\n}else{\n    if(isEmpty(req_user_id)) req_user_id = payload[0]._id ;\n    msg.moveForward = true;\n}\n\nmsg.req_user_id = req_user_id;\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1830.9655990600586,"y":996.9794626235962,"wires":[["1f5ac38b.3403dc"]]},{"id":"1f5ac38b.3403dc","type":"switch","z":"1bc13036.e3b82","name":"","property":"moveForward","propertyType":"msg","rules":[{"t":"false"},{"t":"true"}],"checkall":"true","outputs":2,"x":1982.7499732971191,"y":997.323112487793,"wires":[["cdefd3ae.2c929"],["ac4bfb3b.50d928"]]},{"id":"cdefd3ae.2c929","type":"http response","z":"1bc13036.e3b82","name":"","x":2133.079734802246,"y":967.1181955337524,"wires":[]},{"id":"ac4bfb3b.50d928","type":"switch","z":"1bc13036.e3b82","name":"","property":"operation_type","propertyType":"msg","rules":[{"t":"eq","v":"ADD_INTO_GROUP","vt":"str"},{"t":"eq","v":"DELETE_FROM_GROUP","vt":"str"}],"checkall":"true","outputs":2,"x":2138.406261444092,"y":1032.2258386611938,"wires":[["5b3f1e3e.6dea4"],["6f2044dc.6cbffc"]]},{"id":"5b3f1e3e.6dea4","type":"function","z":"1bc13036.e3b82","name":"add","func":"var req_group_id    = msg.req_body.table_data.group_id,\n    req_user_id     = msg.req_user_id ;\n    \n    msg.statusCode = 200;\n    msg.payload = [\n    \t{\n            payload: {\n                user_id: \"f1b5ed9577f69c6b131d94a46b39044f\", //system_id,\n                portal_id: \"f1b5ed9577f69c6b131d94a46b39044f\", //system_id, in future this should be dynamic\n                node_name: req_group_id, //\"EmployeeGroup\",\n                data_id: req_user_id, //company_id\n                master_parents: [],\n                tree_owner_id: \"f1b5ed9577f69c6b131d94a46b39044f\", //tree_owner_id,\n                node_id: null,\n                target: checkTarget(req_group_id),\n                parent_node_name: \"\"\n            },\n            fn_name: \"add_to_node_name_tree\", //fn_name_add\n        }\n    ];\nreturn msg;\n\nfunction checkTarget(group){\n    if(group === \"EmployeeGroup\"){\n        return \"parent\";\n    }else if(group === \"Operator1\"){\n        return \"child\";\n    }else if(group === \"Operator2\"){\n        return \"child\";    \n    }else{\n        return \"child\";\n    }\n}","outputs":1,"noerr":0,"x":2288.302230834961,"y":994.43053150177,"wires":[["9e4807ac.4eb818"]]},{"id":"6f2044dc.6cbffc","type":"function","z":"1bc13036.e3b82","name":"delete","func":"var req_group_id    = msg.req_body.table_data.group_id,\n    req_user_id     = msg.req_body.table_data.user_id ;\n    \n    \n    msg.statusCode = 200;\n    msg.payload = [\n\t\t {\n            payload: {\n                user_id: \"f1b5ed9577f69c6b131d94a46b39044f\", //system_id,\n                portal_id: \"f1b5ed9577f69c6b131d94a46b39044f\", //company_id, in future this should be dynamic\n                node_name: req_group_id, //\"Operator1\",\n                data_id: req_user_id, //\"8e3384889429685de23b3b4226f13685\",// *CHANGE THIS *,\n                tree_owner_id: \"f1b5ed9577f69c6b131d94a46b39044f\", //tree_owner_id,\n                node_id: null,\n                target: checkTarget(req_group_id),\n                parent_node_name: \"\",\n            },\n            fn_name: \"delete_from_node_name_tree\"\n        }\n\t];\nnode.warn(\"Inside delete node >>>>>\");    \nnode.warn(msg.payload);\t\nreturn msg;\n\nfunction checkTarget(group){\n    if(group === \"EmployeeGroup\"){\n        return \"parent\";\n    }else if(group === \"Operator1\"){\n        return \"child\";\n    }else if(group === \"Operator2\"){\n        return \"child\";    \n    }else{\n        return \"child\";\n    }\n}","outputs":1,"noerr":0,"x":2290.298782348633,"y":1059.43053150177,"wires":[["deac6626.52fc48"]]},{"id":"5d35a8ca.7cbc78","type":"switch","z":"1bc13036.e3b82","name":"","property":"options","propertyType":"msg","rules":[{"t":"eq","v":"case1","vt":"str"},{"t":"eq","v":"case2","vt":"str"}],"checkall":"true","outputs":2,"x":1530.5000114440918,"y":1051.6666851043701,"wires":[["ec662dd0.5626"],["3291e51c.797bea"]]},{"id":"3291e51c.797bea","type":"Tree View","z":"1bc13036.e3b82","database":"master_table","username":"30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix","password":"3c2e6d7f80557d231bc462ffd3457a3b05625332c1dffc92467d6d8941fcba85","operation":"prod","x":1697.1667251586914,"y":1090.666690826416,"wires":[["8342da90.33aa08"]]},{"id":"8342da90.33aa08","type":"function","z":"1bc13036.e3b82","name":"isExists?","func":"var req_user_id     = msg.req_body.table_data.user_id,\n    req_group_id    = msg.req_body.table_data.group_id,\n    phone           = msg.req_body.table_data.phone,\n    type            = msg.req_body.table_data.type,\n    screen          = msg.req_body.table_data.screen,\n    payload = populateUserGroups(msg.payload, req_user_id);\n    \n    if(isEmpty(payload)){\n        msg.isUserExists = false;\n    }else{\n        msg.isUserExists = true;\n        msg.statusCode = 200;\n        msg.payload = {status: 200, msg: \"User already exists in `Operator1` group.\", data: payload};\n    }\n    \nreturn msg;\n\nfunction populateUserGroups(allEmployees, user_id){\n    allEmployees = allEmployees[0].result;\n    var obj = {};\n    \n    if(isEmpty(allEmployees)) return obj;\n    for(var itr in allEmployees){\n        if(allEmployees[itr]._id === user_id){\n            obj = allEmployees[itr];\n        }\n    }\n    return obj;\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}","outputs":1,"noerr":0,"x":1852.1666259765625,"y":1128.0000305175781,"wires":[["146b06cd.5ba689"]]},{"id":"146b06cd.5ba689","type":"switch","z":"1bc13036.e3b82","name":"","property":"isUserExists","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","outputs":2,"x":1998.1666259765625,"y":1128.3333740234375,"wires":[["3d38e218.b5305e"],["f47b4270.24a85"]]},{"id":"3d38e218.b5305e","type":"http response","z":"1bc13036.e3b82","name":"","x":2148.1666259765625,"y":1096.3333740234375,"wires":[]},{"id":"74cd136.c49b0ec","type":"Tree View","z":"1bc13036.e3b82","database":"master_table","username":"30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix","password":"3c2e6d7f80557d231bc462ffd3457a3b05625332c1dffc92467d6d8941fcba85","operation":"prod","x":2310.0001373291016,"y":1158.6666955947876,"wires":[["a9cf33cc.57602"]]},{"id":"f47b4270.24a85","type":"function","z":"1bc13036.e3b82","name":"add","func":"var req_group_id    = msg.req_body.table_data.group_id,\n    req_user_id     = msg.req_user_id ;\n    \n    msg.statusCode = 200;\n    msg.payload = [\n    \t{\n            payload: {\n                user_id: \"f1b5ed9577f69c6b131d94a46b39044f\", //system_id,\n                portal_id: \"f1b5ed9577f69c6b131d94a46b39044f\", //system_id, in future this should be dynamic\n                node_name: req_group_id, //\"EmployeeGroup\",\n                data_id: req_user_id, //company_id\n                master_parents: [],\n                tree_owner_id: \"f1b5ed9577f69c6b131d94a46b39044f\", //tree_owner_id,\n                node_id: null,\n                target: checkTarget(req_group_id),\n                parent_node_name: \"\"\n            },\n            fn_name: \"add_to_node_name_tree\", //fn_name_add\n        }\n    ];\nreturn msg;\n\nfunction checkTarget(group){\n    if(group === \"EmployeeGroup\"){\n        return \"parent\";\n    }else if(group === \"Operator1\"){\n        return \"child\";\n    }else if(group === \"Operator2\"){\n        return \"child\";    \n    }else{\n        return \"child\";\n    }\n}","outputs":1,"noerr":0,"x":2147.6767616271973,"y":1159.888545036316,"wires":[["74cd136.c49b0ec"]]},{"id":"a9cf33cc.57602","type":"function","z":"1bc13036.e3b82","name":"response","func":"var payload = msg.payload ;\n\nmsg.statusCode = 200;\nif(msg.operation_type === \"DELETE_FROM_GROUP\"){\n    msg.payload = {status: 200, msg: \"User successfully deleted from group.\", data: payload};\n} else if(msg.operation_type === \"ADD_INTO_GROUP\"){\n    msg.payload = {status: 200, msg: \"User successfully added to group.\", data: payload};\n}else{\n    msg.payload = {status: 200, msg: \"Unable to perfom add/delete operator for user\", data: payload};    \n}\n\nreturn msg;","outputs":1,"noerr":0,"x":2468,"y":1155.6666259765625,"wires":[["98e08add.66f708"]]},{"id":"98e08add.66f708","type":"http response","z":"1bc13036.e3b82","name":"","x":2621.770683288574,"y":1155.1528186798096,"wires":[]},{"id":"90ba38c0.44c918","type":"twilio-api","z":"","sid":"AC909f1981261f4461abbc7985bd202897","from":"12312259665 ","name":"Drilist SMS service"}]