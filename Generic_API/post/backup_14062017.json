[
    {
        "id": "ed7375e0.d65788",
        "type": "tab",
        "label": "Generic Save"
    },
    {
        "id": "b601694f.9c35b8",
        "type": "http in",
        "z": "ed7375e0.d65788",
        "name": "API HANDLER",
        "url": "/master_api_handler",
        "method": "post",
        "swaggerDoc": "",
        "x": 219,
        "y": 291,
        "wires": [
            [
                "a7cda715.0b2778",
                "3c3ab5f7.c5b22a"
            ]
        ]
    },
    {
        "id": "a7cda715.0b2778",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "Handler",
        "func": "var req = msg.payload;\nif(isEmpty(req)){\n    msg.api_response = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"req body must be specified.\", data: null};\n}else{\n    msg.api_response = \"API_SUCCESS\";\n    msg.req_body = msg.payload;\n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n    if(typeof obj === \"object\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 411,
        "y": 291,
        "wires": [
            [
                "5a2220ef.96fb9"
            ]
        ]
    },
    {
        "id": "5a2220ef.96fb9",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_response",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 574,
        "y": 291,
        "wires": [
            [
                "1dc76b1a.e5bc65"
            ],
            [
                "34cfd307.165fcc"
            ]
        ]
    },
    {
        "id": "1dc76b1a.e5bc65",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 716,
        "y": 253,
        "wires": []
    },
    {
        "id": "34cfd307.165fcc",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "validate body",
        "func": "var body = msg.payload;\nnode.warn(body);\nif(isEmpty(body.table)){\n    msg.api_response = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`table` parameter must be set to save record\", data: null};\n}else if(isEmpty(body.table_data)){\n    msg.api_response = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"`table_data` parameter must be set to save record\", data: null};    \n}else{\n    msg.api_response = \"API_SUCCESS\";\n    msg.payload_table = body.table ;\n    msg.payload_data  = body.table_data ;\n    msg.access_token  = body.access_token ;\n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 735,
        "y": 309,
        "wires": [
            [
                "81b06213.81043"
            ]
        ]
    },
    {
        "id": "81b06213.81043",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_response",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 908,
        "y": 309,
        "wires": [
            [
                "fbf18955.7cd068"
            ],
            [
                "411c8f47.fbd3b"
            ]
        ]
    },
    {
        "id": "fbf18955.7cd068",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 1056,
        "y": 265,
        "wires": []
    },
    {
        "id": "411c8f47.fbd3b",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "payload_table",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "users",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "template",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "task_table",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "timeout",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "location",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "add_detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "delete_detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update_task",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update_user",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update_short_detail",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 11,
        "x": 1069,
        "y": 566,
        "wires": [
            [
                "9e3f04e8.fb4808"
            ],
            [
                "8d5f0962.f05e08"
            ],
            [
                "12edb1e8.252dbe"
            ],
            [
                "294f345d.abeb6c"
            ],
            [
                "b70f4949.fcfda8"
            ],
            [
                "36478db.de18072"
            ],
            [
                "4ff506b2.169578"
            ],
            [
                "44c2518e.ef865"
            ],
            [
                "5df254a7.85e2cc"
            ],
            [
                "e4a95d10.a73ea"
            ],
            [
                "2f4d9fc7.859d7"
            ]
        ]
    },
    {
        "id": "9e3f04e8.fb4808",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "User Table",
        "func": "var body = msg.req_body ;\nmsg.payload = {\n    table               : body.table,\n    long_url            : null,\n    access_token        : access_token(),\n    security_level      : body.security_level || 0,\n    virtual_phone       : body.phone,\n    email               : body.email,\n    converstation_id    : null,\n    firstname           : body.firstname,\n    lastname            : body.firstname,\n    code                : 1234,\n    password            : body.password,\n    image               : body.image || \"https://upload.wikimedia.org/wikipedia/commons/2/26/512pxIcon-sunset_photo_not_found.png\"\n};\nmsg.response = {status: 200, error: false, msg: \"Record created successfully\", data: msg.payload};\nreturn msg;\n\nfunction rand() {\n    return Math.random().toString(36).substr(2); // remove `0.`\n}\n\nfunction time() {\n    //return new Date().getTime().toString(36);\n    return new Date().getTime();\n}\n\nfunction access_token() {\n    return time()+'.'+rand(); // to make it longer\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1298,
        "y": 84,
        "wires": [
            [
                "8ab5b587.e855e8",
                "23a83251.96a8ce"
            ]
        ]
    },
    {
        "id": "8d5f0962.f05e08",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "Template Table",
        "func": "var body = msg.req_body ;\nmsg.payload = {\n    _id         : body.table_data._id,\n    table       : body.table,\n    name        : body.table_data.name || \"\",\n    html        : body.table_data.html || \"\",\n    js          : body.table_data.js   || \"\"\n};\nmsg.response = {status: 200, error: false, msg: \"Record created successfully\", data: msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1307,
        "y": 167,
        "wires": [
            [
                "23a83251.96a8ce",
                "8ab5b587.e855e8"
            ]
        ]
    },
    {
        "id": "12edb1e8.252dbe",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "Task Table",
        "func": "var body        = msg.req_body.table_data,\n    table_name  = msg.req_body.table,\n    page_id     = generate_page_id();\n\nmsg.payload = {\n    _id                     : body._id,\n    table                   : table_name, \n    task_name               : body.name || \"\", \n    page_id                 : page_id, \n    from_page_id            : page_id,\n    parent_id               : page_id, \n    user_id                 : body.user_id || \"\",\n    header_template_id      : body.header_template_id || \"\",\n    detail_template_id      : body.details_template_id || \"\",\n    footer_template_id      : body.footer_template_id || \"\",\n    timeout_id              : body.timeout_id || \"\",\n    location_id             : body.location_id || \"\",\n    child_default_task_id   : body.child_default_task_id || \"\",\n    child_default_task_name : body.child_default_task_name || \"\",\n    date_created            : body.date_created || new Date().toJSON(),\n    status                  : body.status || 0,\n    category                : body.category || \"\",\n    additional_data_fn      : body.additional_data_fn || \"\",\n    optional_data           : body.optional_data || {},\n    required_data           : body.required_data || {},\n    offline_expiration_time : body.offline_expiration_time || 0,\n    display_if_empty        : body.display_if_empty || 1 ,\n    type                    : {\n        public              : body.type  || \"public\"\n    },\n    image                   : body.image || \"https://upload.wikimedia.org/wikipedia/commons/2/26/512pxIcon-sunset_photo_not_found.png\",\n    count_status\t: {\n\t   active       : 1,\n\t   unread       : 0,\n\t},\n\tcount\t\t\t: {\n\t    active      : 1,\n\t    unread      : 0,\n\t},\n\tcount_if\t\t: {\n\t    active      : 1,\n\t    unread      : 0\n\t},\n    defaults                : {\n        parent              : null,\n        next_child          : null,\n        all_children        : null,\n        user                : body.user_id\n    }\n    \n};\nmsg.response = {status: 200, error: false, msg: \"Record created successfully\", data: msg.payload};\nreturn msg;\n\nfunction generate_page_id() {\n    return new Date().getTime();\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1299,
        "y": 254,
        "wires": [
            [
                "8ab5b587.e855e8",
                "23a83251.96a8ce"
            ]
        ]
    },
    {
        "id": "294f345d.abeb6c",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "Timeout Table",
        "func": "var body        = msg.req_body ,\n    table_name  = msg.req_body.table;\nmsg.payload = {\n    table: table_name,\n    name: msg.timeout_data.name || \"\",\n    timeout_list: create_delivery_obj(body) \n};\nmsg.response = {status: 200, error: false, msg: \"Record created successfully\", data: msg.payload};\nreturn msg;\n\nfunction create_delivery_obj(body){\n    var obj = {};\n    var user_id = body.delivery_user_ids ? body.delivery_user_ids.split(',') : \"\";\n    \n    for(var i=0; i < body.delivery_count; i++){\n        obj[i] = {\n            delivery_count      : i , \n            delivery_status     :   body.delivery_status || 0, \n            delivery_due        :   body.delivery_due || new Date.toJSON(),\n            delivery_user_ids   :   user_id[i] ? user_id[i] : body.delivery_user_ids,\n            delivery_via        :   body.delivery_via || \"\",\n            delivery_task_id    :   body.delivery_task_id || \"\",\n            delivery_task_name  :   body.delivery_task_name || \"\", \n            message_id          :   body.message_id || \"\",\n            from_user_id        :   body.from_user_id || \"\"\n        };\n    }\n    return obj ;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1312,
        "y": 343,
        "wires": [
            [
                "8ab5b587.e855e8",
                "23a83251.96a8ce"
            ]
        ]
    },
    {
        "id": "b70f4949.fcfda8",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "Location Table",
        "func": "var body = msg.req_body ;\nmsg.payload = {\n    table         : body.table,\n    location_name : body.name,\n    location_type : body.type,\n    location_data : {\n        lat : body.lat ? Number(body.lat) : 0,\n        lon : body.lon ? Number(body.lon) : 0,\n        dist: body.dist ? Number(body.dist) : 0,\n        web: body.web || \"\"\n    }\n};\nmsg.response = {status: 200, error: false, msg: \"Record created successfully\", data: msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1311,
        "y": 443,
        "wires": [
            [
                "8ab5b587.e855e8",
                "23a83251.96a8ce"
            ]
        ]
    },
    {
        "id": "36478db.de18072",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "Create Detail",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1298,
        "y": 545,
        "wires": [
            [
                "57bec002.50ae8"
            ]
        ]
    },
    {
        "id": "2f4d9fc7.859d7",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "UnExpacted Case",
        "func": "msg.payload = {status: 400, error: true, msg: \"`table` field value is unexpacted.\", data: null};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1315.0000305175781,
        "y": 1095.0000610351562,
        "wires": [
            [
                "d7abc0d3.b641c"
            ]
        ]
    },
    {
        "id": "d7abc0d3.b641c",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 1503.0000305175781,
        "y": 1108.0000610351562,
        "wires": []
    },
    {
        "id": "8ab5b587.e855e8",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "Master Table",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 1757,
        "y": 209.99999523162842,
        "wires": []
    },
    {
        "id": "3c3ab5f7.c5b22a",
        "type": "debug",
        "z": "ed7375e0.d65788",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 420,
        "y": 219,
        "wires": []
    },
    {
        "id": "8621ee44.0309",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 1939,
        "y": 270,
        "wires": []
    },
    {
        "id": "23a83251.96a8ce",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "API_RESPONSE",
        "rules": [
            {
                "t": "move",
                "p": "response",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 269,
        "wires": [
            [
                "8621ee44.0309"
            ]
        ]
    },
    {
        "id": "ca9bd935.3bb1e8",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "detail_calculation",
        "func": "var big_record_tables   = {} , \n    detail              = {},\n    templates_arr       = msg.templates_arr ,\n    child_task          = msg.child_task ? msg.child_task[0] : null,\n    timeout             = msg.timeout ? msg.timeout[0] : null ,\n    location            = msg.location ? msg.location[0] : null,\n    user                = msg.user_obj ? msg.user_obj[0] : null ,\n    task                = msg.task_obj ? msg.task_obj[0] : null,\n    user_arr            = msg.user_arr ,\n    form_data           = msg.form_data ,\n    details_arr         = [];\n    msg.doCreate_optional_detail = false ;\n     \n     \n    //sort the detail_arr as by created at\n    details_arr =  msg.details_arr.sort(function(a,b){\n        details_arr = details_arr.sort(function(a,b){\n        \treturn (a.createdAt - b.createdAt);\t\n        });\n    });\n    \nbig_record_tables.user  = user ;\nbig_record_tables.task  = task ;\n\n//setting up some obj from big_record_tables\nbig_record_tables.task.details = {\n    timeout : create_timeout_list_obj(timeout, templates_arr, user_arr, \"timeout\") ,\n    user_calculated: create_timeout_list_obj(timeout, templates_arr, user_arr, \"user_calculated\"),\n    location : get_location_obj(location) \n} ;\n\n\n//create detail obj to save into master_table;\ndetail.table                            = \"details\";\ndetail.task_id                          = task._id || null;\ndetail.child_task_id                    = task.child_default_task_id || null;\ndetail.user_id                          = user._id || null;\ndetail.from_user_id                     = set_from_user(form_data.from_user_id) ;\n\ndetail.page_id                          = check_number(form_data.page_id) || generate_page_id();\ndetail.from_page_id                     = check_number(form_data.from_page_id) || generate_page_id();\ndetail.to_page_id                       = return_page_id(form_data.page_id);\n\ndetail.synchronized                     = 0 ;\ndetail.processed                        = 0 ;\ndetail.status                           = 0 ;\ndetail.read                             = 0 ;\ndetail.display_if_empty                 = task.display_if_empty || 1;\ndetail.date_created                     = new Date().toJSON() ;\ndetail.due_date                         = big_record_tables.task.details.user_calculated.delivery_due;\ndetail.offline_expiration_seconds       = task.offline_expiration_time ;\ndetail.priority                         = 1;\ndetail.type                             = {\n                                            \"public\" : task.type || \"public\"\n                                        };\ndetail.image                            = task.image ;\ndetail.from_user                        = {\n                                            firstname   : user.firstname || \"\" ,\n                                            lastname    : user.lastname || \"\" ,\n                                            email       : user.email || \"\",\n                                            phone       : user.phone || \"\"\n                                        };\ndetail.user_incoming                    = {\n                                            note    :   form_data.note ,\n                                            message :   form_data.note\n                                        } ;\n\ndetail.watson_incoming                  = {\n                                            message :   \"Watson response to : \" + form_data.note,\n                                            response : {},\n                                            \n                                        } ;\ndetail.template                         = {\n                                            details : get_template(task.detail_template_id, templates_arr)\n                                        };\n\ndetail.timeout                          = big_record_tables.task.details.timeout ;\ndetail.user_calculate                   = big_record_tables.task.details.user_calculated ;\ndetail.location                         = big_record_tables.task.details.location ;\ndetail.default                          = {\n                                            parent : null,\n                                            allchildren: null\n                                        };\ndetail.count_status\t                    = {\n                                            active : 1,\n                                            unread : 0\n                                        };\ndetail.count\t                        = {\n                                            active : 1,\n                                            unread : 1\n                                        };\ndetail.count_if                         = {\n                                            active : 1,\n                                            unread : 0\n                                        };\ndetail.createdAt                        = Number(new Date().getTime()) ;\n\nmsg.template_arr = templates_arr ;\nmsg.payload      = detail ;\n\nif(check_need_to_create_second_detail(form_data.from_user_id)){\n    var second_detail  = JSON.parse(JSON.stringify(detail));\n        second_detail.from_user_id  = form_data.from_user_id[1];\n        second_detail.user_incoming = {\n            note    :   form_data.to_note ,\n            message :   form_data.to_note\n        } ;\n\n        second_detail.watson_incoming = {\n            message :   \"Watson response to : \" + form_data.to_note,\n            response : {},\n        } ;\n        msg.doCreate_optional_detail = true;\n        msg.option_detail = second_detail;\n}\n\nmsg.api_response = {status:200, error: false, msg: \"Record created successfully\", data: detail};\nreturn msg;\n\nfunction create_timeout_list_obj(timeout_obj, templates, users, type){\n    if(timeout_obj === undefined || timeout_obj === null){\n        return {};\n    }\n    \n    switch(type){\n        case \"timeout\" : {\n            if(check_obj(timeout_obj.timeout_list) > 1){\n                var update_obj = JSON.parse(JSON.stringify(timeout_obj)) ;\n                \n                for(var list in timeout_obj.timeout_list){\n                    if(list !== getAttributeByIndex(timeout_obj.timeout_list, 0)){\n                        update_obj.timeout_list[list].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[list].delivery_user_ids, users);\n                        update_obj.timeout_list[list].message = timeout_obj.timeout_list[list].message_id ? get_template(timeout_obj.timeout_list[list].message_id, templates) : null;\n                        update_obj.timeout_list[list].from = timeout_obj.timeout_list[list].from_id ? get_template(timeout_obj.timeout_list[list].from_id, templates) : null;\n                    }\n                }\n                delete update_obj.timeout_list[getAttributeByIndex(timeout_obj.timeout_list, 0)];\n                return update_obj ;   \n            }else{\n                return {} ;\n            }\n            break;\n        }\n        \n        case \"user_calculated\" : {\n\n            if(timeout_obj.timeout_list){\n                for(var key in timeout_obj.timeout_list){\n                    if(key == getAttributeByIndex(timeout_obj.timeout_list, 0)){\n                        timeout_obj.timeout_list[key].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[key].delivery_user_ids, users);\n                        timeout_obj.timeout_list[key].template = {\n                            message : timeout_obj.timeout_list[key].message_id ? get_template(timeout_obj.timeout_list[key].message_id, templates) : null ,\n                            from    : timeout_obj.timeout_list[key].from_id ? get_template(timeout_obj.timeout_list[key].from_id, templates) : null\n                        };\n                    }\n                }\n\n                return timeout_obj.timeout_list[getAttributeByIndex(timeout_obj.timeout_list, 0)] ; \n            }else{\n                return {} ; \n            }\n            break;\n        }\n        \n        default: {\n            return {};\n        }\n    }\n}\n\nfunction check_obj(obj){\n    if(typeof obj === \"object\"){\n        return Object.keys(obj).length;\n    }else{\n        return 0 ;\n    }\n}\n\nfunction get_location_obj(locations){\n    if(locations === undefined || locations === null){\n        return {};\n    }\n    var obj = {};\n\n    if(locations !== null && locations !== undefined){\n        for(var i=0; i< locations.length; i++){\n            if(locations[i]){\n                obj[locations[i]._id] = locations[i] ;\n            }\n        }\n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction get_template(id, template){\n    if(template === undefined || template === null){\n        return {};\n    }\n    \n    var obj = {} ;\n    if(template !== null){\n        for(var i=0; i< template.length; i++){\n            if(id === template[i]._id){\n                obj = template[i] ;\n            }\n        }    \n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction check_number(n){\n    if(typeof n === \"string\" && n !== \"\"){\n        return parseInt(n);\n    }else{\n        return n ;\n    }\n}\n\nfunction generate_page_id(){\n    return new Date().getTime();\n}\n\nfunction getAttributeByIndex(obj, index){\n  var i = 0;\n  for (var attr in obj){\n    if (index === i){\n      return attr;\n    }\n    i++;\n  }\n  return null;\n}\n\nfunction get_obj_from_array(id, arr){\n    if(arr === null || arr === undefined){\n        return {};\n    }\n\n    if(id instanceof Object){\n        return id ;    \n    }\n\n    var obj = {} ;\n    if(arr !== null && arr.length){\n        for(var i=0; i< arr.length; i++){\n            if(arr[i]._id === id){\n                obj[arr[i]._id] = arr[i] ;\n            }\n        }\n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction calculate_to_page_id(task_obj, details_arr){\n\n    var page_id = false ;\n    if(task_obj !== null && details_arr !== undefined){\n        var task_id = task_obj._id ;\n        if(details_arr.length){\n            for(var i=0; i < details_arr.length; i++){\n                if(details_arr[i].task_id === task_id){\n                  page_id = details_arr[i].to_page_id ;\n                }\n            }\n            if(!page_id){\n              return generate_page_id(6);\n            }else{\n              return page_id;\n            }\n        }else{\n            page_id = task_obj.page_id ;\n        }\n    }else{\n        return generate_page_id(6);\n    }\n}\n\n\nfunction return_page_id(page_id){\n    return generate_page_id() ;\n}\n\nfunction set_from_user(item){\n    if(Object.prototype.toString.call(item) === \"[object Array]\"){\n        // node.warn(\">>>>>>>>>>>>>>>>>>>>>>> set_from_user\");\n        // node.warn(item);\n        return item[0] ;\n    }else{\n        // node.warn(\"set_from_user else case\");\n        return item || null;\n    }\n}\n\nfunction check_need_to_create_second_detail(item){\n    if(Object.prototype.toString.call(item) === \"[object Array]\"){\n        // node.warn(\"check_need_to_create_second_detail >>>>\");\n        // node.warn(item);\n        return true ;\n    }else{\n        // node.warn(\"else case >>>>\");\n        return false ;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2323.03125,
        "y": 404.046875,
        "wires": [
            [
                "13870ef9.5fbe41",
                "187b3892.b9f7d7",
                "bac4821c.f56c7",
                "ccf2e209.e5bcb"
            ]
        ]
    },
    {
        "id": "9cfb060b.237ad8",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "log",
        "func": "node.warn(\"There isn't any Location for task obj\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2964.03125,
        "y": 303.046875,
        "wires": [
            [
                "ca9bd935.3bb1e8"
            ]
        ]
    },
    {
        "id": "a61e3eac.d55ec",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "location",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "location",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3378.03125,
        "y": 362.046875,
        "wires": [
            [
                "ca9bd935.3bb1e8"
            ]
        ]
    },
    {
        "id": "13870ef9.5fbe41",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "optional task",
        "property": "child_task_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2521.03125,
        "y": 521.046875,
        "wires": [
            [
                "c404a53d.0210f8"
            ],
            [
                "b429bd3f.1824d"
            ]
        ]
    },
    {
        "id": "388b759a.d94a6a",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "location",
        "property": "location_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2827.03125,
        "y": 309.046875,
        "wires": [
            [
                "9cfb060b.237ad8"
            ],
            [
                "1c8d505b.9922"
            ]
        ]
    },
    {
        "id": "830362c9.3db01",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 3156.03125,
        "y": 360.046875,
        "wires": [
            [
                "a61e3eac.d55ec"
            ]
        ]
    },
    {
        "id": "c404a53d.0210f8",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "log",
        "func": "node.warn(\"No need to create optional task\");\nmsg.detail = msg.payload ;\nmsg.isCreateOptionalTask = false ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2697.03125,
        "y": 542.046875,
        "wires": [
            [
                "fccd2e2e.9bb7b"
            ]
        ]
    },
    {
        "id": "b429bd3f.1824d",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "optional task",
        "func": "var default_task        = msg.child_task ? msg.child_task[0] : null ,\n    detail              = msg.payload ,\n    optional_task       = {}; \n    \nif(!isEmpty(default_task)){\n    optional_task = {\n        table                   : \"task_table\",\n        task_name               : detail.user_incoming.message, \n        user_id                 : default_task.user_id || null,\n        page_id                 : detail.to_page_id, \n        from_page_id            : detail.page_id,\n        parent_id               : detail.task_id, \n        header_template_id      : default_task.header_template_id || null,\n        detail_template_id      : default_task.detail_template_id || null,\n        footer_template_id      : default_task.footer_template_id || null,\n        timeout_id              : default_task.timeout_id || null,\n        location_id             : default_task.location_id || null,\n        child_default_task_id   : default_task.child_default_task_id || null,\n        child_default_task_name : default_task.child_default_task_name || null,\n        date_created            : new Date().toJSON(),\n        type                    : default_task.type || null,\n        status                  : default_task.status || 0,\n        category                : default_task.category || null,\n        additional_data_fn      : default_task.additional_data_fn || null,\n        optional_data           : default_task.optional_data || {},\n        required_data           : default_task.required_data || {},\n        offline_expiration_time : default_task.offline_expiration_time || 0,\n        display_if_empty        : default_task.display_if_empty || 1 ,\n        count_status : {\n            active : 1,\n            unread : 0,\n        },\n        count : {\n            active : 1,\n            unread : 0,\n        },\n        count_if : {\n            active : 1,\n            unread : 0,\n        }\n    };\n    msg.isCreateOptionalTask = true ;\n    msg.detail = detail ;\n    msg.payload = optional_task ;\n}else{\n    msg.isCreateOptionalTask = false ;\n    msg.detail = detail ;\n    msg.payload = \"No need to create optional task\";\n}\n\nnode.warn(\"Before going to init loop method\");\nnode.warn(msg);\nreturn msg;\n\nfunction isEmpty(obj){\n    if(obj instanceof Object){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(obj instanceof Array){\n        if(obj.length){\n            return false ;\n        }else {\n            return true ;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2718.03125,
        "y": 584.046875,
        "wires": [
            [
                "fccd2e2e.9bb7b"
            ]
        ]
    },
    {
        "id": "a0e8242.98bd5d8",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "log",
        "func": "node.warn(\"There isn't any timeout for this task\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2368.03125,
        "y": 300.046875,
        "wires": [
            [
                "388b759a.d94a6a"
            ]
        ]
    },
    {
        "id": "44ef3460.59f8dc",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "timeout",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "timeout",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2735.03125,
        "y": 356.046875,
        "wires": [
            [
                "388b759a.d94a6a"
            ]
        ]
    },
    {
        "id": "1c8d505b.9922",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "location",
        "func": "msg.payload = {\n    query: \"table:location AND _id:\" + msg.location_id\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2971.03125,
        "y": 362.046875,
        "wires": [
            [
                "830362c9.3db01"
            ]
        ]
    },
    {
        "id": "fccd2e2e.9bb7b",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "isCreateOptionalTask",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2880.03125,
        "y": 555.046875,
        "wires": [
            [
                "98d99176.63373",
                "bb1187b6.23d9d8"
            ],
            [
                "d9c4862f.8053d8",
                "98d99176.63373"
            ]
        ]
    },
    {
        "id": "38b87748.c0c0a8",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "timeout",
        "property": "timeout_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2224.03125,
        "y": 307.046875,
        "wires": [
            [
                "a0e8242.98bd5d8"
            ],
            [
                "e753aa93.5fbf18"
            ]
        ]
    },
    {
        "id": "fe726396.01143",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2562.03125,
        "y": 357.046875,
        "wires": [
            [
                "44ef3460.59f8dc"
            ]
        ]
    },
    {
        "id": "98d99176.63373",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "init loop",
        "func": "var detail_obj = msg.detail ;\nif(isEmpty(detail_obj.timeout)){\n    msg.timeoutLength = 0;\n}else{\n    msg.timeoutLength = check_obj(detail_obj.timeout.timeout_list) ;    \n}\nmsg.count = 0;\nreturn msg;\n\n\nfunction check_obj(obj){\n    if(obj !== undefined && obj !== null && obj !== \"\"){\n        return Object.keys(obj).length ;\n    }else{\n        return 0;\n    }\n}\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3272.03125,
        "y": 541.046875,
        "wires": [
            [
                "d104fb73.6fe968"
            ]
        ]
    },
    {
        "id": "d9c4862f.8053d8",
        "type": "debug",
        "z": "ed7375e0.d65788",
        "name": "Optional task log",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 3073.03125,
        "y": 582.046875,
        "wires": []
    },
    {
        "id": "e2a27bcd.4580c8",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "log",
        "func": "node.warn(\"there isn't any child default_task\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3272.03125,
        "y": 203.046875,
        "wires": [
            [
                "38b87748.c0c0a8"
            ]
        ]
    },
    {
        "id": "596f0b62.9292c4",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "child_task",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "child_task",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3669.03125,
        "y": 258.046875,
        "wires": [
            [
                "38b87748.c0c0a8"
            ]
        ]
    },
    {
        "id": "e753aa93.5fbf18",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "timeout",
        "func": "msg.payload = {\n    query: \"table:timeout AND _id:\" + msg.timeout_id\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2378.03125,
        "y": 358.046875,
        "wires": [
            [
                "fe726396.01143"
            ]
        ]
    },
    {
        "id": "d104fb73.6fe968",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "counter",
        "property": "count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "timeoutLength",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 3470.03125,
        "y": 539.046875,
        "wires": [
            [
                "9aa66a3c.033358"
            ],
            [
                "d79adc8b.3221b"
            ]
        ]
    },
    {
        "id": "2888bc9d.d2d6d4",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "child_task",
        "property": "child_task_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 3123.03125,
        "y": 227.046875,
        "wires": [
            [
                "e2a27bcd.4580c8"
            ],
            [
                "4f9da4ac.bb86cc"
            ]
        ]
    },
    {
        "id": "cea484bb.83f458",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "master_table",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 3467.03125,
        "y": 259.046875,
        "wires": [
            [
                "596f0b62.9292c4"
            ]
        ]
    },
    {
        "id": "84714b41.e34418",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "count++",
        "func": "msg.count++ ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3626.03125,
        "y": 479.046875,
        "wires": [
            [
                "d104fb73.6fe968"
            ]
        ]
    },
    {
        "id": "9aa66a3c.033358",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "Timeout Processor",
        "func": "var detail_obj      = msg.payload ,\n    template_arr    = msg.templates,\n    users_arr       = msg.user_arr;\n\nif(compare_dates(detail_obj.due_date)){\n    msg.payload = create_detail_by_timeout_processor();\n}else{\n  msg.apiStatus = {status: 400, msg: \"Due date already passout so cann't be processed details\"};\n}\n\nreturn msg;\n\nfunction compare_dates(due_date){\n    var current_unix_date   = new Date().getTime(),\n        due_unix_date       = new Date(due_date).getTime();\n        \n    if(due_unix_date > current_unix_date){\n        return true ;\n    }else{\n        return false ;\n    }\n}\n\nfunction create_detail_by_timeout_processor(){\n    var detail = JSON.parse(JSON.stringify(detail_obj));  \n    \n    if(detail.timeout !== null){\n        if(check_obj(detail.timeout.timeout_list) > 0){\n            var clone_obj = {\n                table                       : \"details\",\n                task_id                     : detail_obj.task_id ,\n                child_task_id               : detail_obj.child_task_id,\n                user_id                     : detail_obj.user_id,\n                page_id                     : detail_obj.page_id,\n                synchronized                : detail_obj.synchronized,\n                processed                   : detail_obj.processed,\n                status                      : detail_obj.status,\n                read                        : detail_obj.read,\n                display_if_empty            : detail_obj.display_if_empty,\n                date_created                : detail_obj.date_created,\n                due_date                    : detail_obj.due_date,\n                offline_expiration_seconds  : detail_obj.offline_expiration_seconds,\n                priority                    : detail_obj.priority,\n                user_incoming               : detail_obj.user_incoming ,\n                watson_incoming             : detail_obj.watson_incoming,\n                template                    : detail_obj.template,\n                timeout                     : create_timeout_list_obj(detail.timeout, template_arr, users_arr, \"timeout\") ,\n                user_calculated             : create_timeout_list_obj(detail_obj.timeout, template_arr, users_arr, \"user_calculated\"),\n                location                    : detail_obj.location,\n                default                     : detail_obj.default,\n                createdAt                   : detail_obj.createdAt,\n                count                       : detail_obj.count\n            };\n   \n            return clone_obj ;\n        }else{\n            return {} ;\n        }   \n    }else{\n        return {};\n    }\n}\n\nfunction create_timeout_list_obj(timeout_obj, templates, users, type){\n    switch(type){\n        case \"timeout\" : {\n            if(check_obj(timeout_obj.timeout_list) > 1){\n                \n                for(var list in timeout_obj.timeout_list){\n                    if(parseInt(list) !== getAttributeByIndex(timeout_obj.timeout_list, 0)){\n                        timeout_obj.timeout_list[list].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[list].delivery_user_ids, users);\n                        timeout_obj.timeout_list[list].message = timeout_obj.timeout_list[list].message_id ? get_template(timeout_obj.timeout_list[list].message_id, templates) : null;\n                        timeout_obj.timeout_list[list].from = timeout_obj.timeout_list[list].from_id ? get_template(timeout_obj.timeout_list[list].from_id, templates) : null;\n                    }\n                }\n                \n                delete timeout_obj.timeout_list[getAttributeByIndex(timeout_obj.timeout_list, 0)];\n                return timeout_obj ;   \n            }else{\n                return {} ;\n            }\n            break;\n        }\n        \n        case \"user_calculated\" : {\n            if(timeout_obj.timeout_list){\n                for(var key in timeout_obj.timeout_list){\n                    if(parseInt(key) == getAttributeByIndex(timeout_obj.timeout_list, 0)){\n                        timeout_obj.timeout_list[key].delivery_user_ids = get_obj_from_array(timeout_obj.timeout_list[key].delivery_user_ids, users);\n                        timeout_obj.timeout_list[key].template = {\n                            message : timeout_obj.timeout_list[key].message_id ? get_template(timeout_obj.timeout_list[key].message_id, templates) : null ,\n                            from    : timeout_obj.timeout_list[key].from_id ? get_template(timeout_obj.timeout_list[key].from_id, templates) : null\n                        };\n                    }\n                }\n\n                return timeout_obj.timeout_list[getAttributeByIndex(timeout_obj.timeout_list, 0)] ; \n            }else{\n                return {} ; \n            }\n            break;\n        }\n        \n        default: {\n            return {};\n        }\n    }\n}\n\nfunction check_obj(obj){\n    return Object.keys(obj).length ;\n}\n\nfunction get_template(id, template){\n    var obj = {} ;\n    if(template !== null){\n        for(var i=0; i< template.length; i++){\n            if(id === template[i]._id){\n                obj = template[i] ;\n            }\n        }    \n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction get_obj_from_array(id, arr){\n\n    if(id instanceof Object){\n        return id ;    \n    }\n    \n    var obj = {} ;\n    if(arr !== null && arr.length){\n        for(var i=0; i< arr.length; i++){\n            if(arr[i]._id === id){\n                obj[arr[i]._id] = arr[i] ;\n            }\n        }\n        return obj ;\n    }else{\n        return obj ;\n    }\n}\n\nfunction getAttributeByIndex(obj, index){\n  var i = 0;\n  for (var attr in obj){\n    if (index === i){\n      return parseInt(attr);\n    }\n    i++;\n  }\n  return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3690.03125,
        "y": 533.046875,
        "wires": [
            [
                "84714b41.e34418",
                "96b20269.d836f"
            ]
        ]
    },
    {
        "id": "d79adc8b.3221b",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "indicator",
        "func": "msg.payload = \"Timeout processor executes sucessfully\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3664.03125,
        "y": 585.046875,
        "wires": [
            [
                "4e2e30c.bbb54d",
                "3bf5ab50.5f6c94"
            ]
        ]
    },
    {
        "id": "7b8ede79.ee466",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2953.03125,
        "y": 169.046875,
        "wires": [
            [
                "6fa94d00.794ca4"
            ],
            [
                "2888bc9d.d2d6d4"
            ]
        ]
    },
    {
        "id": "4f9da4ac.bb86cc",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "child task",
        "func": "msg.payload = {\n    query : \"table:task_table AND _id:\" + msg.child_task_id \n};\nnode.warn(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3280.03125,
        "y": 260.046875,
        "wires": [
            [
                "cea484bb.83f458"
            ]
        ]
    },
    {
        "id": "4e2e30c.bbb54d",
        "type": "debug",
        "z": "ed7375e0.d65788",
        "name": "Timeout processor",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 3901.03125,
        "y": 565.046875,
        "wires": []
    },
    {
        "id": "f30f4099.a5917",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "validate",
        "func": "var task = msg.task_obj , user = msg.user_obj, detail = msg.details_obj;\n\nif(isEmpty(task)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"Unable to find `task obj` with `task_id`\", data: null};\n}else if(isEmpty(user)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"Unable to find `user obj` with `access_token`\", data: null};\n}else{\n    msg.api_status      = \"API_SUCCESS\";\n    msg.child_task_id   = msg.task_obj[0].child_default_task_id || null;\n    msg.timeout_id      = msg.task_obj[0].timeout_id || null;\n    msg.location_id     = msg.task_obj[0].location_id || null;\n}\nreturn msg;\n\n    \nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2790.03125,
        "y": 178.046875,
        "wires": [
            [
                "7b8ede79.ee466"
            ]
        ]
    },
    {
        "id": "6fa94d00.794ca4",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 3129.03125,
        "y": 173.046875,
        "wires": []
    },
    {
        "id": "3fa3c681.7b937a",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "user arr",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "user_arr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3375.03125,
        "y": 38.046875,
        "wires": [
            [
                "d4a95cf7.4b6d4"
            ]
        ]
    },
    {
        "id": "7edc9154.bf3f8",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "master_table",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 3217.03125,
        "y": 32.046875,
        "wires": [
            [
                "3fa3c681.7b937a"
            ]
        ]
    },
    {
        "id": "9ecf65af.3de7e8",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "payload",
        "func": "msg.payload = {\n    query: \"table:users\",\n    sort: \"_id<string>\"\n};\n\nmsg.detail_payload = {\n    query: \"table:details\",\n    sort : \"_id<string>\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3052.03125,
        "y": 32.046875,
        "wires": [
            [
                "7edc9154.bf3f8"
            ]
        ]
    },
    {
        "id": "ce8e3ccf.e5702",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "user_obj",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "user_obj",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2894.03125,
        "y": 33.046875,
        "wires": [
            [
                "9ecf65af.3de7e8"
            ]
        ]
    },
    {
        "id": "5eadacce.7fa8a4",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2720.03125,
        "y": 34.046875,
        "wires": [
            [
                "ce8e3ccf.e5702"
            ]
        ]
    },
    {
        "id": "bfcdfc52.7337",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "payload",
        "rules": [
            {
                "t": "move",
                "p": "user_payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2552.0313720703125,
        "y": 35.046875,
        "wires": [
            [
                "5eadacce.7fa8a4"
            ]
        ]
    },
    {
        "id": "d7d5c8e0.48a7a8",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "task_obj",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "task_obj",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2390.0313720703125,
        "y": 35.046875,
        "wires": [
            [
                "bfcdfc52.7337"
            ]
        ]
    },
    {
        "id": "9c1674f8.1d4728",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "master_table",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2223.03125,
        "y": 35.046875,
        "wires": [
            [
                "d7d5c8e0.48a7a8"
            ]
        ]
    },
    {
        "id": "f3355043.b4df1",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "payload",
        "rules": [
            {
                "t": "move",
                "p": "task_payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1949.03125,
        "y": 413.046875,
        "wires": [
            [
                "9c1674f8.1d4728"
            ]
        ]
    },
    {
        "id": "57bec002.50ae8",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "validate",
        "func": "var access_token = msg.payload.access_token ;\nvar table_data = msg.payload.table_data ;\n\nif(table_data === null || table_data === undefined){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide valid json object as api request body.\"};\n    return msg;\n}else if(access_token === null || access_token === undefined || access_token === \"\"){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `access_token` in api request body\"};\n    return msg;\n}else if(table_data.note === null || table_data.note === undefined || table_data.note === \"\"){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `note` in api request body\"};\n    return msg;\n}else if(table_data.page_id === null || table_data.page_id === undefined || table_data.page_id === \"\"){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `page_id` in api request body\"};\n    return msg;\n}else if(table_data.from_page_id === null || table_data.from_page_id === undefined ){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `from_page_id` in api request body\"};\n    return msg;\n}else if(table_data.task_id === null || table_data.task_id === undefined ){\n    msg.flow_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, type: \"Validation error\", msg: \"Please provide `task_id` in api request body\"};\n    return msg;\n}else{\n    msg.flow_status = \"API_SUCCESS\";\n    msg.form_data    = table_data ;\n    msg.task_payload = { \n        query: \"table:task_table AND _id:\" + table_data.task_id \n    };\n    msg.user_payload = {\n        query: \"table:users AND access_token:\" + access_token \n    };\n    msg.page_payload = {\n        query: \"table:details AND page_id:\" + table_data.page_id  \n    };\n    return msg;\n}\n\n\nfunction check_number(n){\n    if(!isNaN(parseInt(n))){\n        return parseInt(n);\n    }else{\n        return n ;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1544.03125,
        "y": 466.046875,
        "wires": [
            [
                "b6af2672.99e958"
            ]
        ]
    },
    {
        "id": "d2b55e61.08c28",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "template",
        "func": "msg.payload = {\n    query: \"table:template\",\n    sort: \"_id<string>\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2240.5390625,
        "y": 168.5703125,
        "wires": [
            [
                "9ddec7b3.c16d78"
            ]
        ]
    },
    {
        "id": "9ddec7b3.c16d78",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "Templates",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2393.5390625,
        "y": 168.5703125,
        "wires": [
            [
                "b79eeb98.78a8a8"
            ]
        ]
    },
    {
        "id": "b79eeb98.78a8a8",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "template arr",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "templates_arr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2614.2734375,
        "y": 176.9921875,
        "wires": [
            [
                "f30f4099.a5917",
                "bb57deaa.48c82"
            ]
        ]
    },
    {
        "id": "5de3d290.17c0cc",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "update_create_user_task",
        "func": "var detail_obj          = msg.detail ,\n    ancesstor_arr       = [] ,\n    user_task_arr       = msg.payload ,\n    task_obj            = msg.task_obj[0] ;\n    calculate_user_task = get_user_taskBy_id(detail_obj.user_id, detail_obj.task_id);\n    \nif(check_obj(calculate_user_task) > 0){\n    msg.payload = update_user_task(msg.payload[0], detail_obj.user_id, detail_obj.task_id, 0, 1);\n    \n}else{\n    if(task_obj.parent_id){\n        var user_task = get_user_taskBy_id(detail_obj.user_id, task_obj.parent_id);\n        \n        if(check_obj(user_task) > 0){\n            ancesstor_arr = user_task.ancestors ;   \n            ancesstor_arr.push(task_obj.parent_id);\n        }else{\n            ancesstor_arr.push(task_obj.parent_id);\n        }\n    }\n    \n    msg.payload = {\n        table           : \"user_task\",\n    \ttask_id \t\t: detail_obj.task_id,\n    \tuser_id\t\t\t: detail_obj.user_id,\n    \tpage_id         : parseInt(detail_obj.page_id),\n    \tupdate_read     : 0,\n    \tupdate_active   : 0, \n    \tsynchronized    : 0,\n        status          : 0, \n    \tdate_updated\t: null,\t\n    \tparent_id\t\t: detail_obj.task_id,\n    \tancestors       : ancesstor_arr,\n    \tcount_status\t: {\n    \t   active       : 1,\n    \t   unread       : 0,\n    \t},\n    \tcount\t\t\t: {\n    \t    active      : 0,\n    \t    unread      : 0,\n    \t},\n    \tcount_if\t\t: {\n    \t    active      : 1,\n    \t    unread      : 0\n    \t},\n    \ttemplates\t\t: {},\n    \ttimeout\t\t\t: {},\n    \tcreatedAt       : new Date().getTime()\n    };\n}\nreturn msg;\n\nfunction update_user_task(user_task, user_id, task_id, status, synchronized){\n\n    user_task.synchronized          = synchronized  ;\n    user_task.date_updated          = new Date().toJSON();\n    user_task.templates             = detail_obj.template ;\n    user_task.timeout               = detail_obj.timeout ;\n    user_task.count_status.unread   = detail_obj.read ;\n    user_task.page_id               = parseInt(detail_obj.to_page_id) ;\n    user_task.status                = detail_obj.status || status;\n\n    if(!user_task.update_read){\n        if( ( user_task.count_status.unread === 1 || user_task.count_status.unread === \"1\") && !user_task.count_if.unread ){\n            user_task.count.unread += 1 ;  \n        }\n    }\n\n    if(!user_task.update_active){\n        if( user_task.count_status.active && user_task.count_if.active){\n            user_task.count.active += 1 ;  \n        }\n    }\n    \n    //if(user_task.parent_id) update_user_task(user_task, user_id, user_task.parent_id, 0, 1);\n    \n    user_task.update_read   = 1 ;\n    user_task.update_active = 1 ;\n    \n    return user_task;\n}\n\nfunction get_user_taskBy_id(user_id, task_id){\n    var obj = {};\n    if(user_task_arr !== null && user_task_arr !== undefined){\n        for(var i=0; i< user_task_arr.length; i++){\n            if(\n                user_task_arr[i].user_id        === user_id &&\n                user_task_arr[i].parent_id      === task_id\n            ){\n                    obj = user_task_arr[i];\n            }\n        }\n    }\n    return obj ;\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}\n\n\nfunction check_obj(obj){\n    return Object.keys(obj).length;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 4253.03125,
        "y": 621.046875,
        "wires": [
            [
                "d41f48b0.7f1228",
                "f2def268.f5a43"
            ]
        ]
    },
    {
        "id": "3bf5ab50.5f6c94",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "payload",
        "func": "var task_id = msg.detail.task_id ,\n    user_id = msg.detail.user_id ;\n    \nmsg.payload = {\n    query: \"table:user_task AND user_id:\" + user_id ,\n    sort : \"_id<string>\"\n};\n\nnode.warn(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3873.03125,
        "y": 624.046875,
        "wires": [
            [
                "c8e96c2e.712a2"
            ]
        ]
    },
    {
        "id": "c8e96c2e.712a2",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "master_table",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 4039.03125,
        "y": 623.046875,
        "wires": [
            [
                "5de3d290.17c0cc"
            ]
        ]
    },
    {
        "id": "b6af2672.99e958",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "flow_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1744,
        "y": 385,
        "wires": [
            [
                "cc9156dd.e6c9d8"
            ],
            [
                "f3355043.b4df1"
            ]
        ]
    },
    {
        "id": "cc9156dd.e6c9d8",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 1942,
        "y": 355,
        "wires": []
    },
    {
        "id": "d41f48b0.7f1228",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "User Task",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 4467,
        "y": 552,
        "wires": []
    },
    {
        "id": "96b20269.d836f",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "Details",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 3911,
        "y": 515,
        "wires": []
    },
    {
        "id": "bb1187b6.23d9d8",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "Optional Task",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 3061,
        "y": 522,
        "wires": []
    },
    {
        "id": "187b3892.b9f7d7",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "Details",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2503,
        "y": 438,
        "wires": []
    },
    {
        "id": "bac4821c.f56c7",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "API_RESPONSE",
        "rules": [
            {
                "t": "move",
                "p": "api_response",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2541,
        "y": 478,
        "wires": [
            [
                "7f94322.34c74cc"
            ]
        ]
    },
    {
        "id": "7f94322.34c74cc",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 2697,
        "y": 499,
        "wires": []
    },
    {
        "id": "4ff506b2.169578",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "delete_detail",
        "func": "var body = msg.payload.table_data ,\n    token = msg.payload.access_token ;\n        \n    if(isEmpty(body)){\n        msg.api_status  = \"API_ERROR\";\n        msg.payload     = {status: 400, error: true, msg: \"Table data should be valid json object.\", data: null};\n    }else if(isEmpty(token)){\n        msg.api_status  = \"API_ERROR\";\n        msg.payload     = {status: 400, error: true, msg: \"`access_token` must be provided.\", data: null};\n    }else if(isEmpty(body.id)){\n        msg.api_status  = \"API_ERROR\";\n        msg.payload     = {status: 400, error: true, msg: \"`id` must be provided to remove detail.\", data: null};\n    }else{\n        msg.access_token    = token ;\n        msg.detail_id       = body.id ;\n        msg.api_status      = \"API_SUCCESS\";\n        msg.payload         = {\n                query   : \"table:users AND access_token:\" + token ,\n                sort    : \"_id<string>\"\n        };\n        node.warn(msg.payload);\n    }\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1296.7578125,
        "y": 634.171875,
        "wires": [
            [
                "aff97560.7d8878"
            ]
        ]
    },
    {
        "id": "aff97560.7d8878",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1542.7423095703125,
        "y": 548.9765625,
        "wires": [
            [
                "c4ac724d.ac859"
            ],
            [
                "7ae112b9.da4dbc"
            ]
        ]
    },
    {
        "id": "c4ac724d.ac859",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 1683.7422844916591,
        "y": 503.46093276143085,
        "wires": []
    },
    {
        "id": "7ae112b9.da4dbc",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1705.7423095703125,
        "y": 575.7734375,
        "wires": [
            [
                "5b60dcfd.46ada4"
            ]
        ]
    },
    {
        "id": "5b60dcfd.46ada4",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "validate",
        "func": "var user = msg.payload ;\n    \n    if(isEmpty(user)){\n        msg.api_status  = \"API_ERROR\"    ;\n        msg.payload     = {status: 400, error: true, msg: \"Unable to find user with `access_token`\", data: null};\n    }else{\n        msg.user_obj    = user[0];\n        msg.payload     = {\n            query   : \"table:details AND _id:\" + msg.detail_id.toString() ,\n            sort    : \"_id<string>\"\n        };\n    }\n    \nnode.warn(msg.payload);\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1875.7579345703125,
        "y": 602.1640625,
        "wires": [
            [
                "87fa1f95.ef692"
            ]
        ]
    },
    {
        "id": "87fa1f95.ef692",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2032.7500827759516,
        "y": 600.9843702614309,
        "wires": [
            [
                "5507605c.5a705"
            ],
            [
                "69913b1d.374e24"
            ]
        ]
    },
    {
        "id": "5507605c.5a705",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 2156.7423095703125,
        "y": 569.953125,
        "wires": []
    },
    {
        "id": "69913b1d.374e24",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2174.7579345703125,
        "y": 625.765625,
        "wires": [
            [
                "8a5bd2e0.66aa3"
            ]
        ]
    },
    {
        "id": "8a5bd2e0.66aa3",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "validate detail",
        "func": "var detail = msg.payload ;\n\n    if(isEmpty(detail)){\n        msg.api_status  = \"API_ERROR\";\n        msg.payload     = {status: 400, error: true, msg: \"Unable to find detail with this id\", data: null};\n    }else{\n        msg.api_status  = \"API_SUCCESS\";\n        msg.detail_obj      = detail[0] ;\n    }\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2374.257883161308,
        "y": 625.1718678921463,
        "wires": [
            [
                "d51b97c1.e41208"
            ]
        ]
    },
    {
        "id": "d51b97c1.e41208",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_ERROR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2538.742264375092,
        "y": 669.9843678921463,
        "wires": [
            [
                "7852346d.81e6fc"
            ],
            [
                "a08f1848.dcc968"
            ]
        ]
    },
    {
        "id": "7852346d.81e6fc",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 2675.1668701171875,
        "y": 638.6666870117188,
        "wires": []
    },
    {
        "id": "a08f1848.dcc968",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "isAuthorized",
        "func": "var detail_obj = msg.detail_obj;\n    user_obj   = msg.user_obj ;\n\nif(detail_obj.user_id === user_obj._id){\n    msg.api_status  = \"VALID_CONTENT\";\n    msg.payload     = {\n        _id                             : detail_obj._id,\n        _rev                            : detail_obj._rev,\n        table                           : \"details\",\n        task_id                         : detail_obj.task_id,\n        child_task_id                   : detail_obj.child_task_id,\n        user_id                         : detail_obj.user_id,\n        from_user_id                    : detail_obj.from_user_id,\n        page_id                         : detail_obj.page_id,\n        from_page_id                    : detail_obj.from_page_id,\n        to_page_id                      : detail_obj.to_page_id,\n        synchronized                    : detail_obj.synchronized,\n        processed                       : detail_obj.processed ,\n        status                          : detail_obj.status ,\n        read                            : detail_obj.read ,\n        display_if_empty                : 0 ,\n        date_created                    : detail_obj.date_created ,\n        offline_expiration_seconds      : detail_obj.offline_expiration_seconds ,\n        priority                        : detail_obj.priority ,\n        type                            : detail_obj.type,\n        image                           : detail_obj.image ,\n        from_user                       : detail_obj.from_user,\n        user_incoming                   : detail_obj.user_incoming,\n        watson_incoming                 : detail_obj.watson_incoming,\n        template                        : detail_obj.template ,\n        user_calculate                  : detail_obj.user_calculate,\n        location                        : detail_obj.location,\n        default                         : detail_obj.default,\n        createdAt                       : detail_obj.createdAt\n    };\n    msg.response    = {status: 200, error: false, msg: \"Record deleted successfully\", data: msg.payload};\n}else{\n    msg.api_status = \"INVALID_CONTENT\";\n    msg.statusCode = 403 ;\n    msg.payload = {status: 403, error: false, msg: \"You are not authorized to remove record\", data: null};    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2695.8333740234375,
        "y": 696.3333740234375,
        "wires": [
            [
                "1aee4b78.bb91d5"
            ]
        ]
    },
    {
        "id": "1aee4b78.bb91d5",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "INVALID_CONTENT",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2852.8333740234375,
        "y": 696,
        "wires": [
            [
                "ec2fa8e0.84daa8"
            ],
            [
                "670422c7.a356fc",
                "b2066dec.cab4f",
                "6179d3c6.5ce81c",
                "5d47dd54.1cc8a4"
            ]
        ]
    },
    {
        "id": "ec2fa8e0.84daa8",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 3038.500071207682,
        "y": 649.333356221517,
        "wires": []
    },
    {
        "id": "670422c7.a356fc",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "save detail to master table",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 3109.500071207682,
        "y": 711.333371480306,
        "wires": []
    },
    {
        "id": "b2066dec.cab4f",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "payload",
        "rules": [
            {
                "t": "move",
                "p": "response",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3053.500071207682,
        "y": 758.333371480306,
        "wires": [
            [
                "aa098852.5faae8"
            ]
        ]
    },
    {
        "id": "aa098852.5faae8",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 3211.500081380208,
        "y": 755.0000203450521,
        "wires": []
    },
    {
        "id": "6179d3c6.5ce81c",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "payload",
        "func": "var detail = msg.payload ;\nmsg.payload = {\n    query   : \"table:details AND to_page_id:\" + detail.page_id ,\n    sort    : \"_id<string>\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3057.500071207682,
        "y": 816.3332951863607,
        "wires": [
            [
                "f2251761.b07088"
            ]
        ]
    },
    {
        "id": "f2251761.b07088",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 3217.166748046875,
        "y": 817,
        "wires": [
            [
                "92d7a796.dba1a8"
            ]
        ]
    },
    {
        "id": "92d7a796.dba1a8",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "init",
        "func": "var filtered_details = msg.payload ;\n\nmsg.filtredArr = filtered_details || [] ;\nmsg.counter = 0;\nmsg.detail_length = filtered_details.length;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3379.500081380208,
        "y": 816,
        "wires": [
            [
                "a41eab75.8d4778"
            ]
        ]
    },
    {
        "id": "a41eab75.8d4778",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "detail_length",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 3553.666819254557,
        "y": 753.3333867390951,
        "wires": [
            [
                "761fffae.c03e"
            ],
            [
                "e14260f2.70e37"
            ]
        ]
    },
    {
        "id": "14ac37c7.408fb8",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "counter++",
        "func": "msg.counter++ ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3631.666819254557,
        "y": 674.3333867390951,
        "wires": [
            [
                "a41eab75.8d4778"
            ]
        ]
    },
    {
        "id": "761fffae.c03e",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "payload",
        "func": "msg.payload = msg.filtredArr[msg.counter];\nmsg.payload.display_if_empty = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3713.666819254557,
        "y": 744.3334172566732,
        "wires": [
            [
                "14ac37c7.408fb8",
                "b96954a9.56ea68"
            ]
        ]
    },
    {
        "id": "e14260f2.70e37",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "Finish",
        "func": "msg.payload = \"Update all child details as well.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3703.666819254557,
        "y": 786.3334172566732,
        "wires": [
            [
                "c5c8572a.97eb68"
            ]
        ]
    },
    {
        "id": "c5c8572a.97eb68",
        "type": "debug",
        "z": "ed7375e0.d65788",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 3880.666819254557,
        "y": 790.3334172566732,
        "wires": []
    },
    {
        "id": "b96954a9.56ea68",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "Update Detail",
        "cloudant": "",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 3908.666819254557,
        "y": 712.3333867390951,
        "wires": []
    },
    {
        "id": "5d47dd54.1cc8a4",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "payload",
        "func": "var detail = msg.payload ;\nmsg.payload = {\n    query   : \"table:user_task AND page_id:\" + detail.to_page_id + \"user_id:\" + detail.user_id ,\n    sort    : \"_id<string>\"\n};\n\nnode.warn(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3057.500071207682,
        "y": 883.6667607625326,
        "wires": [
            [
                "cfb2d119.650ef"
            ]
        ]
    },
    {
        "id": "cfb2d119.650ef",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "msater_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 3215.500071207682,
        "y": 881.3333257039388,
        "wires": [
            [
                "d21cc327.892e3"
            ]
        ]
    },
    {
        "id": "d21cc327.892e3",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "init",
        "func": "var user_tasks = msg.payload ;\n\nmsg.calculated_task = user_tasks || [];\nmsg.user_task_length = msg.calculated_task.length ;\nmsg.counter = 0 ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3378.500071207682,
        "y": 881.0000127156576,
        "wires": [
            [
                "4f69a5e6.d7c3fc"
            ]
        ]
    },
    {
        "id": "4f69a5e6.d7c3fc",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "user_task_length",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 3518.333567301432,
        "y": 879.3333867390951,
        "wires": [
            [
                "8d032ebd.ecdb3"
            ],
            [
                "df98db23.3ac248"
            ]
        ]
    },
    {
        "id": "3d0e140b.8e644c",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "counter++",
        "func": "msg.counter++ ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3579.333567301432,
        "y": 827.3333867390951,
        "wires": [
            [
                "4f69a5e6.d7c3fc"
            ]
        ]
    },
    {
        "id": "8d032ebd.ecdb3",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "payload",
        "func": "var user_task_obj = msg.calculated_task[msg.counter] ;\n\nuser_task_obj.status = 0   ;\nif(user_task_obj.count){\n    if(user_task_obj.count)    user_task_obj.count.active = 0 ;\n    if(user_task_obj.count)    user_task_obj.count.unread = 0 ;\n}\n\nmsg.payload = user_task_obj;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3665.333567301432,
        "y": 871.3334172566732,
        "wires": [
            [
                "3d0e140b.8e644c",
                "5a82b46c.ba9e9c"
            ]
        ]
    },
    {
        "id": "df98db23.3ac248",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "Finish",
        "func": "msg.payload = \"User tasks updated successfully\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3659.333567301432,
        "y": 916.3333867390951,
        "wires": [
            [
                "74b47e08.11124"
            ]
        ]
    },
    {
        "id": "5a82b46c.ba9e9c",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "user_task",
        "cloudant": "",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 3849.333567301432,
        "y": 870.3333867390951,
        "wires": []
    },
    {
        "id": "74b47e08.11124",
        "type": "debug",
        "z": "ed7375e0.d65788",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 3858.333567301432,
        "y": 914.3333867390951,
        "wires": []
    },
    {
        "id": "2e30714a.35189e",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 2289.0156860351562,
        "y": 728.0000610351562,
        "wires": []
    },
    {
        "id": "44c2518e.ef865",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "update_task",
        "func": "// msg.payload_table = body.table ;\n// msg.payload_data  = body.table_data ;\n// msg.access_token  = body.access_token ;\nvar access_token = msg.access_token ;\n    \n    if(isEmpty(access_token)){\n        msg.api_status = \"API_ERROR\";\n        msg.payload = {status: 400, error: true, msg: \"`access_token` is missing.\", data: null};\n    }else{\n        msg.api_status = \"API_SUCCESS\";\n        msg.payload = {\n            query : \"table:users AND access_token:\" + access_token ,\n            sort  : \"_id<string>\"\n        };\n    }\n    \nreturn msg;\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1298.015625,
        "y": 749,
        "wires": [
            [
                "22062247.2620de"
            ]
        ]
    },
    {
        "id": "ed4a8c2e.d5c25",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "Update record",
        "cloudant": "",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2167.0156860351562,
        "y": 683.0001831054688,
        "wires": []
    },
    {
        "id": "b44dde1d.d45bb",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "api result",
        "rules": [
            {
                "t": "move",
                "p": "api_result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2147.0156860351562,
        "y": 730.0000610351562,
        "wires": [
            [
                "2e30714a.35189e"
            ]
        ]
    },
    {
        "id": "5df254a7.85e2cc",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "update_user",
        "func": "var req_body        = msg.payload_data ,\n    access_token    = msg.access_token ;\n\nif(isEmpty(access_token)){\n    msg.api_status = \"API_ERROR\" ;\n    msg.payload = {status: 400, error: true, msg: \"`access_token` is missing\", data: []};\n    return msg;\n    \n}else{\n    msg.api_status = \"API_SUCESS\" ;\n    msg.payload = {\n        query : \"table:\"+ req_body.table +\"AND access_token:\"+ access_token +\" AND _id:\" + req_body.user_id ,\n        sort  : \"_id<string>\"\n    };\n    msg.req_body = req_body;\n    return msg;\n}\n\n\nfunction isEmpty(obj){\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1295.265625,
        "y": 866.25,
        "wires": [
            [
                "4c52b214.e0522c"
            ]
        ]
    },
    {
        "id": "4c52b214.e0522c",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "split",
        "property": "API_STATUS",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1442.265625,
        "y": 926.25,
        "wires": [
            [
                "8f8bd939.95d398"
            ],
            [
                "6a0c38b.163e1c8"
            ]
        ]
    },
    {
        "id": "e4a95d10.a73ea",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "update_short_detail",
        "func": "var body            = msg.payload_data ,\n    access_token    = msg.access_token ;\n    \nif(isEmpty(access_token)){\n    msg.api_status = \"API_ERROR\";\n    msg.api_status = {status: 400, error: true, msg: \"`access_token` is required to update detail\", data: body};\n}else if(isEmpty(body.detail_id)){\n    msg.api_status = \"API_ERROR\";\n    msg.api_status = {status: 400, error: true, msg: \"`detail_id` is required to update detail\", data: body};\n}else if(isEmpty(body.task_id)){\n    msg.api_status = \"API_ERROR\";\n    msg.api_status = {status: 400, error: true, msg: \"`task_id` is required to update task detail\", data: body};\n}else{\n    msg.api_status = \"API_SUCCESS\";\n    msg.payload = {\n        query : \"table:details AND _id:\" + body.detail_id ,\n        sort  : \"_id<string>\"\n    };\n    \n    msg.task_payload = {\n        query : \"table:task_table AND _id:\" + body.task_id ,\n        sort  : \"_id<string>\"\n    };\n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1314.140625,
        "y": 1006.5,
        "wires": [
            [
                "dcbb4c21.2dca4"
            ]
        ]
    },
    {
        "id": "6a0c38b.163e1c8",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "User",
        "cloudant": "",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1595.765625,
        "y": 929.25,
        "wires": [
            [
                "f094fd4b.bd424"
            ]
        ]
    },
    {
        "id": "f094fd4b.bd424",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "payload",
        "func": "var req_body = msg.req_body;\n    user_obj = msg.payload[0] ;\n\nif(isEmpty(user_obj)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"Unable to find user with `access_token` and `user_id`.\", data: req_body};    \n}else{\n    var payload ={\n      _id               : user_obj._id,\n      _rev              : user_obj._rev,\n      table             : user_obj.table,\n      long_url          : user_obj.long_url,\n      access_token      : user_obj.access_token ,\n      security_level    : user_obj.security_level,\n      phone             : Number(req_body.phone) || user_obj.phone ,\n      virtual_phone     : user_obj.virtual_phone,\n      email             : req_body.email || user_obj.email,\n      converstation_id  : user_obj.converstation_id || \"\",\n      firstname         : req_body.firstname || user_obj.firstname,\n      lastname          : req_body.lastname || user_obj.lastname,\n      code              : user_obj.code,\n      password          : user_obj.password,\n      image             : user_obj.image,\n      type              : user_obj.type,\n      device_id         : user_obj.device_id,\n      push_accepted     : user_obj.push_accepted\n    };\n    \n    msg.api_status = \"API_SUCCESS\";\n    msg.payload = payload ;\n    msg.api_result = {status: 200, error: false, msg: \"Record udpated successfully\", data: msg.payload};    \n}\n\nreturn msg;\n\nfunction isEmpty(obj){\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1729.765625,
        "y": 928.25,
        "wires": [
            [
                "8053e3c4.6a24c"
            ]
        ]
    },
    {
        "id": "7169c502.95e06c",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2065.765869140625,
        "y": 875.25,
        "wires": []
    },
    {
        "id": "3e3b424c.40376e",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "api result",
        "rules": [
            {
                "t": "move",
                "p": "api_result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2057.7657470703125,
        "y": 918.25,
        "wires": [
            [
                "da4a7827.5e25d8"
            ]
        ]
    },
    {
        "id": "da4a7827.5e25d8",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 2237.765869140625,
        "y": 917.25,
        "wires": []
    },
    {
        "id": "8f8bd939.95d398",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 1594.62890625,
        "y": 885.41015625,
        "wires": []
    },
    {
        "id": "d4a95cf7.4b6d4",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "detail_payload",
        "rules": [
            {
                "t": "move",
                "p": "detail_payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2599.500244140625,
        "y": 93.00000762939453,
        "wires": [
            [
                "c1fb5b6e.a4a368"
            ]
        ]
    },
    {
        "id": "b51d09.b17d82f8",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "detail_arr",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "details_arr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2993.833251953125,
        "y": 96.66666412353516,
        "wires": [
            [
                "d2b55e61.08c28"
            ]
        ]
    },
    {
        "id": "bb57deaa.48c82",
        "type": "debug",
        "z": "ed7375e0.d65788",
        "name": "Comes her to log every thing",
        "active": true,
        "console": "true",
        "complete": "true",
        "x": 2847.8333435058594,
        "y": 224.3333511352539,
        "wires": []
    },
    {
        "id": "c1fb5b6e.a4a368",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2796.33349609375,
        "y": 96.66666412353516,
        "wires": [
            [
                "b51d09.b17d82f8"
            ]
        ]
    },
    {
        "id": "8053e3c4.6a24c",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1868.5,
        "y": 927.6666870117188,
        "wires": [
            [
                "7169c502.95e06c",
                "3e3b424c.40376e"
            ],
            [
                "ad31218.908fde"
            ]
        ]
    },
    {
        "id": "ad31218.908fde",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 2047.5001932779949,
        "y": 982.9999974568685,
        "wires": []
    },
    {
        "id": "dcbb4c21.2dca4",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1483.8333740234375,
        "y": 1006.3333740234375,
        "wires": [
            [
                "29a95e0f.65b4f2"
            ],
            [
                "8dcda9b.871b158"
            ]
        ]
    },
    {
        "id": "29a95e0f.65b4f2",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "master_table",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1637.5,
        "y": 999.3333740234375,
        "wires": [
            [
                "12398c0f.4fe5a4"
            ]
        ]
    },
    {
        "id": "8dcda9b.871b158",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 1617.5000101725261,
        "y": 1041.333351135254,
        "wires": []
    },
    {
        "id": "12398c0f.4fe5a4",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "detail_processing",
        "func": "if(isEmpty(msg.payload)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"Unable to fetch detail using with detail_id\", data: null};\n}else{\n    msg.api_status = \"API_SUCCESS\";\n    var detail_obj = msg.payload[0] ,\n        req_body   = msg.payload_data;\n        \n    //for user_incoming from detail_obj\n    detail_obj.user_incoming.note    = req_body.message ;\n    detail_obj.user_incoming.message = req_body.message ;\n    \n    //for watson_incoming from detail_obj\n    detail_obj.watson_incoming.note    = req_body.message ;\n    detail_obj.watson_incoming.message = req_body.message ;\n        \n    msg.payload = detail_obj;\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1825.5,
        "y": 1037.6666870117188,
        "wires": [
            [
                "3b82e6d8.a4c12a"
            ]
        ]
    },
    {
        "id": "3b82e6d8.a4c12a",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1963.5,
        "y": 1092,
        "wires": [
            [
                "9b0bed40.7d20e",
                "9e1ca0c2.25092"
            ],
            [
                "ef65e1a9.bbe2e"
            ]
        ]
    },
    {
        "id": "ef65e1a9.bbe2e",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 2101.50048828125,
        "y": 1137.3333740234375,
        "wires": []
    },
    {
        "id": "9b0bed40.7d20e",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "update_detail_master_table",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2171.5003662109375,
        "y": 1038.6666870117188,
        "wires": []
    },
    {
        "id": "9e1ca0c2.25092",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "task_payload",
        "rules": [
            {
                "t": "move",
                "p": "task_payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2118.5001220703125,
        "y": 1085.6666259765625,
        "wires": [
            [
                "e522a4aa.0fc048"
            ]
        ]
    },
    {
        "id": "e522a4aa.0fc048",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 2272.166748046875,
        "y": 1128,
        "wires": [
            [
                "ca967d4a.7db79"
            ]
        ]
    },
    {
        "id": "ca967d4a.7db79",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "task_processing",
        "func": "if(isEmpty(msg.payload)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload = {status: 400, error: true, msg: \"Detail has been updated but Unable to fetch task_obj using with task_id\", data: null};\n}else{\n    msg.api_status = \"API_SUCCESS\";\n    var task_obj = msg.payload[0] ,\n        req_body   = msg.payload_data;\n        \n    //from detail_obj\n    task_obj.task_name  = req_body.task_name ;\n    task_obj.status     = JSON.parse(req_body.task_status) ? 1 : 0 ;\n        \n    msg.payload = task_obj;\n}\nreturn msg;\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 2451.0001220703125,
        "y": 1127,
        "wires": [
            [
                "c33a42cd.fa457"
            ]
        ]
    },
    {
        "id": "c33a42cd.fa457",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2614.3336181640625,
        "y": 1126,
        "wires": [
            [
                "7a9d7433.c56ffc",
                "30975a04.110b06"
            ],
            [
                "47ec97cc.17a398"
            ]
        ]
    },
    {
        "id": "7a9d7433.c56ffc",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 2798.166748046875,
        "y": 1094.3333740234375,
        "wires": []
    },
    {
        "id": "47ec97cc.17a398",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 2781.166748046875,
        "y": 1184.6666259765625,
        "wires": []
    },
    {
        "id": "30975a04.110b06",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "res",
        "func": "msg.payload = {status: 200, error: false, msg: \"Record updated successfully\", data: msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2779.166748046875,
        "y": 1134.3333740234375,
        "wires": [
            [
                "29c82e4e.f96972"
            ]
        ]
    },
    {
        "id": "29c82e4e.f96972",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 2910.1667378743487,
        "y": 1134.6666844685874,
        "wires": []
    },
    {
        "id": "f2def268.f5a43",
        "type": "debug",
        "z": "ed7375e0.d65788",
        "name": "create user_task after creating detail",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 4559.833740234375,
        "y": 595.6667022705078,
        "wires": []
    },
    {
        "id": "9ffc4b8a.05a308",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1598.1666259765625,
        "y": 749.6666870117188,
        "wires": [
            [
                "c83fce28.428bf"
            ],
            [
                "40b1cc72.88c724"
            ]
        ]
    },
    {
        "id": "40b1cc72.88c724",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 1722,
        "y": 790.3333740234375,
        "wires": []
    },
    {
        "id": "c83fce28.428bf",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "payload & verify user",
        "func": "var task_obj = msg.payload_data;\n\nif(isEmpty(msg.payload)){\n    msg.api_status = \"API_ERROR\";\n    msg.payload    = {status: 400, error: true, msg: \"Invalid access_token, Unable to find user with this access_token.\", data: null};\n}else{\n    \n    var user = msg.payload[0];\n    if(user._id === task_obj.user_id){\n        msg.api_status = \"API_SUCCESS\";\n        msg.payload = {\n            _id                         : task_obj._id,\n            _rev                        : task_obj._rev,\n            table                       : task_obj.table, \n            task_name                   : task_obj.task_name,\n            user_id                     : task_obj.user_id,\n            page_id                     : task_obj.page_id,\n            from_page_id                : task_obj.from_page_id,\n            parent_id                   : task_obj.parent_id,\n            header_template_id          : task_obj.header_template_id,\n            detail_template_id          : task_obj.detail_template_id,\n            footer_template_id          : task_obj.footer_template_id,\n            timeout_id                  : task_obj.timeout_id,\n            child_default_task_id       : task_obj.child_default_task_id,\n            child_default_task_name     : task_obj.child_default_task_name,\n            date_created                : task_obj.date_created,\n            type                        : task_obj.type,\n            status                      : task_obj.status,\n            category                    : task_obj.category,\n            additional_data_fn          : task_obj.additional_data_fn,\n            optional_data               : task_obj.optional_data,\n            required_data               : task_obj.required_data,\n            offline_expiration_time     : task_obj.offline_expiration_time,\n            display_if_empty            : task_obj.display_if_empty,\n            image                       : task_obj.image\n        };\n        msg.api_result = {status: 200, error: false, msg: \"Record udpated successfully\", data: msg.payload};\n    }else{\n        msg.api_status = \"API_ERROR\";\n        msg.payload    = {status: 400, error: true, msg: \"You are not authrozied to update this record.\", data: null};\n    }\n}\nreturn msg;\n\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1772.1666768391929,
        "y": 742.6666437784831,
        "wires": [
            [
                "4ab11ef6.5d901"
            ]
        ]
    },
    {
        "id": "4ab11ef6.5d901",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "api_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "API_SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1951.8334350585938,
        "y": 743.6666870117188,
        "wires": [
            [
                "ed4a8c2e.d5c25",
                "b44dde1d.d45bb"
            ],
            [
                "130267cc.19df08"
            ]
        ]
    },
    {
        "id": "130267cc.19df08",
        "type": "http response",
        "z": "ed7375e0.d65788",
        "name": "",
        "x": 2138.666748046875,
        "y": 778.3333435058594,
        "wires": []
    },
    {
        "id": "22062247.2620de",
        "type": "cloudant in",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "search": "_idx_",
        "design": "filterBy",
        "index": "filterBy",
        "x": 1458.1666259765625,
        "y": 748.3333129882812,
        "wires": [
            [
                "9ffc4b8a.05a308"
            ]
        ]
    },
    {
        "id": "ccf2e209.e5bcb",
        "type": "switch",
        "z": "ed7375e0.d65788",
        "name": "",
        "property": "doCreate_optional_detail",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2611.390625,
        "y": 412.94140625,
        "wires": [
            [
                "4922b256.fa4e5c"
            ],
            [
                "33a9865a.a4a29a"
            ]
        ]
    },
    {
        "id": "4922b256.fa4e5c",
        "type": "change",
        "z": "ed7375e0.d65788",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "option_detail",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2806.375,
        "y": 404.42578125,
        "wires": [
            [
                "3fde7ded.61eed2"
            ]
        ]
    },
    {
        "id": "3fde7ded.61eed2",
        "type": "cloudant out",
        "z": "ed7375e0.d65788",
        "name": "",
        "cloudant": "5281de41.649f",
        "database": "master_table",
        "service": "PkTwilioConv-cloudantNoSQLDB",
        "payonly": true,
        "operation": "insert",
        "x": 3009.38671875,
        "y": 403.79296875,
        "wires": []
    },
    {
        "id": "33a9865a.a4a29a",
        "type": "function",
        "z": "ed7375e0.d65788",
        "name": "Log",
        "func": "node.warn(\"No need to create optional second task.\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2749.378876615316,
        "y": 442.75780855119234,
        "wires": [
            []
        ]
    },
    {
        "id": "5281de41.649f",
        "type": "cloudant",
        "z": "",
        "host": "http://127.0.0.1",
        "name": "timeout-api-cloudantNoSQLDB"
    }
]
