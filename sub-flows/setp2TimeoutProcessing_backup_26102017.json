[
    {
        "id": "23a4aa90.edeb06",
        "type": "subflow",
        "name": "Step2 Timeout processing",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "da3733ea.3b4d7"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "f32d33b6.d8313",
        "type": "function",
        "z": "23a4aa90.edeb06",
        "name": "Step 2 timeout processing",
        "func": "var payload     = msg.payload ;\n    db_records  = populate_records(payload.rows);\n    msg.company_page_id = null;\n\nmsg.isDetailProcessed = false;\nmsg.from_user = {} ;\n    if(isEmpty(db_records)){\n        msg.payload = \"Unable to populate records via using cloudant db.\";\n    }else{\n        var details = db_records.details,\n            users   = db_records.users;\n            \n        var processed_details = process_details_with_timeout(details);\n        if(!isEmpty(processed_details)){\n            msg.isDetailProcessed = true;\n            msg.payload = {\n                docs: processed_details\n            } ;\n        }else{\n            msg.payload = \"There is not details to processed.\";\n        }\n    }\nreturn msg;\n\nfunction process_details_with_timeout(details){\n    var updated_details = [];\n    if(isEmpty(details)) return updated_details;\n    \n    for(var itr in details){\n        if( !isEmpty(details[itr].timeout) && (details[itr].processed === 0) ){\n            var newDetailObj = JSON.parse(JSON.stringify(details[itr]));\n            \n            //check If added detail delivery_due_date is a past date or not ?\n            if(checkPastDeliveryDue(details[itr].due_date)){\n\n                if(\"company_bot_detail\" in details[itr].type){\n                    var company_timeout = JSON.parse(JSON.stringify(newDetailObj.timeout)),\n                        temp_obj        = JSON.parse(JSON.stringify(company_timeout));\n                    \n                    for(var loop in company_timeout){\n                        var ctimeoutObj     = company_timeout[loop];\n                        var cgroupUsers     = populate_group_users(ctimeoutObj.delivery_user_types);\n                        \n                        temp_obj[loop].delivery_user_ids        = populate_delivery_ids(cgroupUsers);\n                        temp_obj[loop].delivery_user_special    = cgroupUsers ;\n                        temp_obj[loop].message_id               = details[itr]._id;\n                        temp_obj[loop].from_user_id             = details[itr].user_incoming.note;\n                    }\n                    newDetailObj.processed      = 1;\n                    newDetailObj.status         = 2; //2 refres to complete\n                    newDetailObj.category       = \"message\";\n                    newDetailObj.user_calculate = temp_obj;\n                    newDetailObj.timeout        = {};\n                    updated_details.push(newDetailObj);\n                    \n                }else{\n                \n                    var timeoutObj   = details[itr].timeout,\n                        groupUsers   = populate_group_users(timeoutObj.delivery_user_types);\n                    \n                    newDetailObj.processed                      = 1;\n                    newDetailObj.status                         = 2;\n                    newDetailObj.category                       = \"message\";\n                    newDetailObj.timeout.delivery_user_ids      = populate_delivery_ids(groupUsers) ;\n                    newDetailObj.timeout.delivery_user_special  = groupUsers;\n                    newDetailObj.timeout.message_id             = details[itr]._id;\n                    newDetailObj.timeout.from_user_id           = details[itr].user_incoming.note;\n    \n                    newDetailObj.user_calculate = newDetailObj.timeout;\n                    newDetailObj.timeout        = {};\n                    \n                    msg.company_page_id = details[itr].page_id ;\n                    updated_details.push(newDetailObj);\n                }\n            }\n            \n            if(checkFutureDeliveryDue(details[itr].due_date)){\n                if(newDetailObj.status === 0) {\n                    newDetailObj.status = 1;\n                    updated_details.push(newDetailObj);\n                }\n            }\n            \n            msg.from_user = newDetailObj.from_user_id ; //just set the from_user object which is used in push notificatino fn node to get user number\n        }\n    }\n    \n    return updated_details;\n}\n\nfunction populate_group_users(list){\n    var obj = {};\n    if(isEmpty(list)) return obj;\n    \n    for(var itr in list){\n        if(itr !== \"public\"){\n            obj = populate_user(itr);\n        }\n    }\n    return obj;\n}\n\nfunction populate_delivery_ids(groupUsers){\n    var obj ={};\n    \n    if(isEmpty(groupUsers)) return obj;\n    \n    for(var itr in groupUsers){\n        obj[itr] = itr;\n    }\n    return obj;\n}\n\nfunction populate_user(group_id){\n    var obj = {};\n    if(isEmpty(users)) return obj;\n    if(isEmpty(group_id)) return obj;\n    \n    for(var counter in users){\n        if(!isEmpty(users[counter].data)){\n            if(!isEmpty(users[counter].data.groups)){\n                if(group_id in users[counter].data.groups){\n                    obj[users[counter]._id] = {    \n                        user_id   : users[counter]._id,\n                        firstname : users[counter].firstname ? users[counter].firstname : \"\",\n                        lastname  : users[counter].lastname ? users[counter].lastname : \"\",\n                        email     : users[counter].email ? users[counter].email : \"\",\n                        device_id : users[counter].device_id ? users[counter].device_id : \"\",\n                        phone     : users[counter].virtual_phone  \n                    };\n                }\n            }\n        }\n    }\n    return obj;\n}\n\nfunction checkPastDeliveryDue(due_date){\n    var current_date = new Date().getTime();\n    //return true;\n    //return (due_date > new Date()) ; //120000 is default which is 120 sec or 2 minutes \n    return current_date > due_date ; //confirms the past_due records not the future one records\n}\n\nfunction checkFutureDeliveryDue(due_date){\n    var current_data = new Date().getTime();\n    return (due_date > current_data);\n}\n\nfunction populate_records(list){\n    var details = [], users = [];\n    if(isEmpty(list)) return {};\n    \n    for(var itr in list){\n        if(list[itr].value.table == \"details\"){\n            details.push(list[itr].value);\n        }\n        \n        if(list[itr].value.table == \"users\"){\n            users.push(list[itr].value);\n        }\n    }\n    \n    return {details: details, users: users};\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 258,
        "y": 281.000111579895,
        "wires": [
            [
                "beac40b9.9cfc9",
                "cfd33387.c5a91"
            ]
        ]
    },
    {
        "id": "cfd33387.c5a91",
        "type": "switch",
        "z": "23a4aa90.edeb06",
        "name": "",
        "property": "isDetailProcessed",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 512.6665878295898,
        "y": 263.71370220184326,
        "wires": [
            [
                "d6c9d919.bb84e8",
                "13e012cf.2da58d"
            ]
        ]
    },
    {
        "id": "13e012cf.2da58d",
        "type": "function",
        "z": "23a4aa90.edeb06",
        "name": "notification",
        "func": "var payload         = msg.payload.docs,\n    responder_group = populate_group(payload);\n\nif(isEmpty(responder_group)){\n    msg.type        = \"NONE\";\n    msg.payload     = \"No need to send any kind of notification\";\n}else{\n    if(!isEmpty(responder_group.push)){\n        msg.type    = \"PUSH\";\n        msg.payload = {\n            push: populate_device_ids(responder_group.push.users),\n            msg : responder_group.push.msg\n        };\n    }\n    \n    if(!isEmpty(responder_group.sms)){\n        msg.type   = \"SMS\";\n        msg.payload = {\n            sms : populate_phone_numbers(responder_group.sms.users),\n            msg : responder_group.sms.msg\n        };\n    }\n    \n    if(!isEmpty(responder_group.email)){\n        msg.type    = \"EMAIL\";\n        msg.payload = {\n            email: populate_email_address(responder_group.email.users),\n            msg : responder_group.email.msg\n            \n        };\n    }\n    \n    if(!isEmpty(responder_group.app)){\n        msg.type    = \"APP\";\n        msg.payload = {\n            app: populate_apps(responder_group.app.users),\n            msg : responder_group.app.msg\n        };\n    }\n}\n\nreturn msg;\n\nfunction populate_device_ids(users){\n    var device_ids = [];\n    if(isEmpty(users))  return device_ids;\n    \n    for(var itr in users){\n        if(\n            (users[itr].device_id !== \"Web View\") && !(isEmpty(users[itr].device_id)) \n        ){\n            device_ids.push(users[itr].device_id);\n        }\n    }\n    return device_ids;\n}\n\nfunction populate_phone_numbers(users){\n    var numbers = [];\n    if(isEmpty(users))  return numbers;\n    \n    for(var itr in users){\n        if( !(isEmpty(users[itr].phone)) && (users[itr].phone.toString().length > 5) ){\n            numbers.push(Number(users[itr].phone));\n        }\n    }\n    return numbers;\n}\n\nfunction populate_email_address(users){\n    var email_address = [];\n    if(isEmpty(users))  return email_address;\n    \n    for(var itr in users){\n        if( !(isEmpty(users[itr].email))  ){\n            email_address.push(users[itr].email);\n        }\n    }\n    return email_address;\n}\n\nfunction populate_apps(users){\n    return users;\n}\n\nfunction populate_group(list){\n    var push_notification = {}, sms_notification = {}, email_notification = {}, app_notification ={};\n    if(isEmpty(list)) return obj;\n    \n    for(var itr in list){\n        if(!(\"company_bot_detail\" in list[itr].type)){\n            if(!isEmpty(list[itr].user_calculate)){\n                var user_calculate = list[itr].user_calculate;\n                if(user_calculate.delivery_via == \"sms\"){\n                    sms_notification = {\n                        users: user_calculate.delivery_user_special ,\n                        msg  : list[itr].user_incoming.message\n                    };\n                }\n                \n                if(user_calculate.delivery_via == \"push\"){\n                    push_notification = {\n                        users: user_calculate.delivery_user_special,\n                        msg  : list[itr].user_incoming.message\n                    };\n                }\n                \n                if(user_calculate.delivery_via == \"email\"){\n                    email_notification = {\n                        users: user_calculate.delivery_user_special,\n                        msg  : list[itr].user_incoming.message\n                    };\n                }\n                \n                if(user_calculate.delivery_via == \"app\"){\n                    app_notification = {\n                        users: user_calculate.delivery_user_special,\n                        msg  : list[itr].user_incoming.message\n                    };\n                }\n            }\n        }\n    }\n    return {push: push_notification, sms:sms_notification, email:email_notification, app:app_notification};\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 682.0001754760742,
        "y": 246.3802843093872,
        "wires": [
            [
                "573a10cf.f8a2"
            ]
        ]
    },
    {
        "id": "d6c9d919.bb84e8",
        "type": "http request",
        "z": "23a4aa90.edeb06",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_bulk_docs",
        "tls": "",
        "x": 681.0001754760742,
        "y": 288.71370124816895,
        "wires": [
            [
                "8e4a8da5.ea69d"
            ]
        ]
    },
    {
        "id": "8e4a8da5.ea69d",
        "type": "debug",
        "z": "23a4aa90.edeb06",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1032.0001525878906,
        "y": 458.71375846862793,
        "wires": []
    },
    {
        "id": "573a10cf.f8a2",
        "type": "switch",
        "z": "23a4aa90.edeb06",
        "name": "",
        "property": "type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PUSH",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SMS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMAIL",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "APP",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 5,
        "x": 860.0001754760742,
        "y": 244.3802900314331,
        "wires": [
            [
                "5a2b965b.b7ab28"
            ],
            [
                "305a598.2f410a6"
            ],
            [
                "77fbde0a.ce28"
            ],
            [
                "36e39366.1bb63c"
            ],
            [
                "8e4a8da5.ea69d"
            ]
        ]
    },
    {
        "id": "beac40b9.9cfc9",
        "type": "debug",
        "z": "23a4aa90.edeb06",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 511.33353424072266,
        "y": 384.3803777694702,
        "wires": []
    },
    {
        "id": "36e39366.1bb63c",
        "type": "function",
        "z": "23a4aa90.edeb06",
        "name": "APP",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1042.0001525878906,
        "y": 327.3803815841675,
        "wires": [
            []
        ]
    },
    {
        "id": "77fbde0a.ce28",
        "type": "function",
        "z": "23a4aa90.edeb06",
        "name": "EMAIL",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1039.000129699707,
        "y": 270.3803253173828,
        "wires": [
            []
        ]
    },
    {
        "id": "305a598.2f410a6",
        "type": "function",
        "z": "23a4aa90.edeb06",
        "name": "SMS",
        "func": "msg.phone_array_length = msg.payload.sms.length;\nmsg.counter = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1040.000129699707,
        "y": 193.38032150268555,
        "wires": [
            [
                "ead44e8b.2b155"
            ]
        ]
    },
    {
        "id": "5a2b965b.b7ab28",
        "type": "function",
        "z": "23a4aa90.edeb06",
        "name": "PUSH",
        "func": "var page_id         = msg.company_page_id ,\n    push_data       = msg.payload ,\n    push_obj        = msg.push_obj;\n    \nmsg.url = \"https://socket-server.mybluemix.net/send_push_notification\";\nmsg.method = \"POST\";\n\n//Distribution credentails...    \nvar appGuid = \"f9fb70f7-e91f-4e62-b713-a609fb81be59\",\n    appSecrect = \"f8af03f8-ebc1-4e90-b6c7-c0cd0afc3e69\" ;\n\n// //Delevlopment credentails...    \n// var appGuid = \"4419942e-8f02-4527-8794-c24b42c584b5\",\n//     appSecrect = \"c769179f-e1ec-4598-b642-8f5dfd802e4c\" ;\n    \nmsg.payload = {\n    \"push_url\": \"https://imfpush.ng.bluemix.net/imfpush/v1/apps/\" + appGuid +\"/messages\",\n    \"appSecrect\": appSecrect,\n    \"payload\": {\n\t\t\"message\": {\n\t\t\t\"alert\": populatePushMessage(push_obj, msg.from_user, push_data)\n\t\t}, \n\t\t\"target\": {      \n\t\t\t\"deviceIds\": isArray(push_data.push) ? push_data.push : [push_data.push]\n\t\t},\n\t\t\"settings\": {\n\t\t\t\"apns\": {\n\t\t\t\t\"payload\": {\n\t\t\t\t\t\"isPageRefresh\" : true,\n\t\t\t\t\t\"page_id\"  : page_id || 2 ,\n\t\t\t\t\t\"user_page_id\": 18,\n\t\t\t\t\t\"group\": push_obj.group\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"gcm\": {\n\t\t\t\t\"payload\": {\n\t\t\t\t\t\"isPageRefresh\" : true,\n\t\t\t\t\t\"page_id\"  : page_id || 2 ,\n\t\t\t\t\t\"user_page_id\": 18,\n\t\t\t\t\t\"group\": push_obj.group\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\nreturn msg;\n\nfunction populatePushMessage(push_obj, from_user, push_data){\n    if(isEmpty(push_obj) || isEmpty(from_user)) return push_data.msg;\n    if(push_obj.group == \"Group 1\"){\n        return push_obj.group + \" - \" + push_obj.req_user_number + \"-\" + push_obj.msg ;\n    }else{\n        return push_obj.group + \" - \" + from_user.phone + \"-\" + push_data.msg ;\n    }\n}\n\nfunction isArray(obj){\n    if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nfunction isEmpty(obj){\n\n    if(Object.prototype.toString.call(obj) === \"[object Object]\"){\n        if( Object.keys(obj).length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else if(Object.prototype.toString.call(obj) === \"[object Array]\"){\n        if( obj.length ){\n            return false;\n        }else{\n            return true;\n        }\n    }else{\n        if( obj ){\n            return false;\n        }else{\n            return true;\n        }\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1040.499984741211,
        "y": 90.00008773803711,
        "wires": [
            [
                "fcbcb925.fd3a98"
            ]
        ]
    },
    {
        "id": "fcbcb925.fd3a98",
        "type": "http request",
        "z": "23a4aa90.edeb06",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1209.333122253418,
        "y": 85.33334636688232,
        "wires": [
            [
                "b5ab27d2.94d958"
            ]
        ]
    },
    {
        "id": "b5ab27d2.94d958",
        "type": "debug",
        "z": "23a4aa90.edeb06",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1398.3331451416016,
        "y": 84,
        "wires": []
    },
    {
        "id": "d90ed0c4.68037",
        "type": "function",
        "z": "23a4aa90.edeb06",
        "name": "counter",
        "func": "msg.counter++;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1308.8334732055664,
        "y": 150.71365451812744,
        "wires": [
            [
                "ead44e8b.2b155"
            ]
        ]
    },
    {
        "id": "ead44e8b.2b155",
        "type": "switch",
        "z": "23a4aa90.edeb06",
        "name": "",
        "property": "counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "phone_array_length",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1228.8334732055664,
        "y": 229.71365451812744,
        "wires": [
            [
                "beaabaa0.7c8ac8"
            ],
            []
        ]
    },
    {
        "id": "beaabaa0.7c8ac8",
        "type": "function",
        "z": "23a4aa90.edeb06",
        "name": "payload",
        "func": "msg.topic   = msg.payload.sms[msg.counter];\nmsg.payload = \"There is a new message `\"+  msg.payload.msg +\"`under ReminderBot company. Please check it once. Thanks!!!\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1396.8341903686523,
        "y": 223.71366214752197,
        "wires": [
            [
                "d90ed0c4.68037",
                "9d502a0.69799d8",
                "a15a19ad.070768"
            ]
        ]
    },
    {
        "id": "9d502a0.69799d8",
        "type": "debug",
        "z": "23a4aa90.edeb06",
        "name": "SMS Logger",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1599.0001678466797,
        "y": 206.04701709747314,
        "wires": []
    },
    {
        "id": "a15a19ad.070768",
        "type": "twilio out",
        "z": "23a4aa90.edeb06",
        "service": "_ext_",
        "twilio": "80db99b9.2656f8",
        "from": "",
        "number": "",
        "name": "Send to Assistants",
        "x": 1620.1669158935547,
        "y": 251.71368503570557,
        "wires": []
    },
    {
        "id": "da3733ea.3b4d7",
        "type": "http request",
        "z": "23a4aa90.edeb06",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "https://30175cba-a69e-4ff0-9a79-788abcf0f585-bluemix.cloudant.com/master_table/_design/filterBy/_view/add_detail_to_task",
        "tls": "",
        "x": 136.0000114440918,
        "y": 194.0000123977661,
        "wires": [
            [
                "f32d33b6.d8313"
            ]
        ]
    },
    {
        "id": "80db99b9.2656f8",
        "type": "twilio-api",
        "z": "3d6329c5.e74616",
        "sid": "AC909f1981261f4461abbc7985bd202897",
        "from": "12312259665 ",
        "name": "DriList Sms Service for chatbot"
    }
]